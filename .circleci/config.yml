version: 2.1

parameters:
  min-rust-version:
    type: string
    default: "1.75"
  docker-tag-suffix:
    type: string
    default: "-wasi"
  fingerprint:
    type: string
    default: SHA256:OkxsH8Z6Iim6WDJBaII9eTT9aaO1f3eDc6IpsgYYPVg
  validation-flag:
    type: boolean
    default: false
    description: "If true, the validation pipeline will be executed."
  success-flag:
    type: boolean
    default: false
    description: "If true, the success pipeline will be executed."

orbs:
  toolkit: jerus-org/circleci-toolkit@1.14.0
  # sonarcloud: sonarsource/sonarcloud@2.0.0

executors:
  rust_env:
    docker:
      - image: jerusdp/ci-rust:<<pipeline.parameters.min-rust-version>><< pipeline.parameters.docker-tag-suffix >>
  base-env:
    docker:
      - image: jerusdp/ci-rust:base

jobs:
  test-suite:
    parameters:
      test-suite:
        type: string
    executor: rust_env
    steps:
      - checkout
      - run: cargo +stable --version
      - run:
          name: Running test suite <<parameters.test-suite>>
          command: "cargo +stable test -p <<parameters.test-suite>> --test compiletest"

workflows:
  check_last_commit:
    when:
      and:
        - not:
            equal: [scheduled_pipeline, << pipeline.trigger_source >>]
        - not: << pipeline.parameters.success-flag >>
        - not: << pipeline.parameters.validation-flag >>

    jobs:
      - toolkit/choose_pipeline:
          name: choose pipeline based on committer
          context: bot-check

  validation:
    when:
      and:
        - not:
            equal: [scheduled_pipeline, << pipeline.trigger_source >>]
        - not: << pipeline.parameters.success-flag >>
        - << pipeline.parameters.validation-flag >>
    jobs:
      - toolkit/label:
          min_rust_version: << pipeline.parameters.min-rust-version >>
          context: pcu-app
          filters:
            branches:
              only:
                - main
      - toolkit/required_builds:
          name: required builds-<< matrix.cargo_target >>-<< matrix.cargo_args >>
          min_rust_version: << pipeline.parameters.min-rust-version >>
          docker_tag_suffix: << pipeline.parameters.docker-tag-suffix >>
          matrix:
            parameters:
              cargo_args: [-p hcaptcha, -p hcaptcha-cli]
              cargo_target: [wasm32-wasip1, x86_64-unknown-linux-gnu]
      - toolkit/optional_builds:
          name: optional builds-<< matrix.cargo_target >>-<< matrix.cargo_args >>
          min_rust_version: << pipeline.parameters.min-rust-version >>
          docker_tag_suffix: << pipeline.parameters.docker-tag-suffix >>
          matrix:
            parameters:
              cargo_args: [-p hcaptcha, -p hcaptcha-cli]
              cargo_target: [x86_64-unknown-linux-gnu, wasm32-wasip1]
      - toolkit/common_tests:
          name: common tests for x86_64
          min_rust_version: << pipeline.parameters.min-rust-version >>
          matrix:
            parameters:
              cargo_package: [hcaptcha, hcaptcha-cli]
      - toolkit/idiomatic_rust:
          min_rust_version: << pipeline.parameters.min-rust-version >>
      - toolkit/test_doc_build:
          min_rust_version: << pipeline.parameters.min-rust-version >>
      - toolkit/cli_test_wasm:
          min_rust_version: << pipeline.parameters.min-rust-version >>
          cargo_package: test_suite_cli
          cargo_executable: hcaptcha-cli
          name: run_test_program-<< matrix.cargo_bin >>-<< matrix.cargo_target >>
          requires:
            - toolkit/common_tests
            - toolkit/required_builds
            - toolkit/test_doc_build
          matrix:
            parameters:
              cargo_bin: [long_help, no_options, short_help]
              cargo_target: [x86_64-unknown-linux-gnu, wasm32-wasip1]

      - test-suite:
          matrix:
            parameters:
              test-suite:
                [
                  test_suite_default,
                  test_suite_no_default,
                  test_suite_native_only,
                  test_suite_rustls_only,
                  test_suite_trace,
                  test_suite_enterprise,
                ]
          requires:
            - toolkit/common_tests
            - toolkit/required_builds
            - toolkit/test_doc_build

      - toolkit/security:
          context: SonarCloud

      - toolkit/update_changelog:
          requires:
            - toolkit/idiomatic_rust
            - test-suite
            - toolkit/cli_test_wasm
            - toolkit/security
          context:
            - release
            - bot-check
            - pcu-app
          ssh_fingerprint: << pipeline.parameters.fingerprint >>
          min_rust_version: << pipeline.parameters.min-rust-version >>

  on_success:
    when:
      and:
        - not:
            equal: [scheduled_pipeline, << pipeline.trigger_source >>]
        - << pipeline.parameters.success-flag >>
        - not: << pipeline.parameters.validation-flag >>

    jobs:
      - toolkit/end_success

  release:
    when:
      and:
        - equal: [scheduled_pipeline, << pipeline.trigger_source >>]
        - equal: ["release check", << pipeline.schedule.name >>]
        - not: << pipeline.parameters.success-flag >>
        - not: << pipeline.parameters.validation-flag >>
    jobs:
      - toolkit/make_release:
          context:
            - release
            - bot-check
          ssh_fingerprint: << pipeline.parameters.fingerprint >>
          min_rust_version: << pipeline.parameters.min-rust-version >>
