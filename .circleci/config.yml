version: 2.1

executors:
  rust-env:
    docker:
      - image: cimg/rust:1.62

commands:
  cargo-build:
    parameters:
      rust-version:
        default: "1.62.0"
        type: string
    steps:
      - run:
          name: Update Rust and check build <<parameters.rust-version>>
          command: |
            rustup update <<parameters.rust-version>>
            cargo +<<parameters.rust-version>> check --all-features --workspace --examples
  cargo-format:
    steps:
      - run:
          name: Check formatting for code
          command: |
            rustfmt --version
            cargo fmt --all -- --check
  cargo-clippy:
    steps:
      - run:
          name: Check idiomatic code use with Clippy
          command: "cargo clippy --workspace --examples --tests --all-features -- -D warnings"
  cargo-test:
    steps:
      - run:
          name: Test all features the crate
          command: "cargo test --all-features"
  cargo-docs:
    steps:
      - run:
          name: Get nightly Rust
          command: |
            rustup update nightly
      - run:
          name: Generate the crate documentation
          command: |
            cargo +nightly doc --lib --no-deps --all-features --document-private-items

jobs:
  build:
    executor: rust-env
    steps:
      - checkout
      - run: cargo --version
      - cargo-build
      - cargo-build:
          rust-version: "nightly"
      - cargo-build:
          rust-version: "stable"
      - cargo-build:
          rust-version: "1.49.0"

  test:
    executor: rust-env
    steps:
      - checkout
      - run: cargo --version
      - cargo-format
      - cargo-clippy
      - cargo-test

  docs:
    executor: rust-env
    environment:
      RUSTDOCFLAGS: --cfg docsrs -Dwarnings
    steps:
      - checkout
      - cargo-docs
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-test-docs:
    jobs:
      - build
      - test
      - docs
