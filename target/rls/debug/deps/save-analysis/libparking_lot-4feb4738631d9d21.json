{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0","program":"/home/gorta/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","parking_lot","--edition=2018","/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=4feb4738631d9d21","-C","extra-filename=-4feb4738631d9d21","--out-dir","/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps","-L","dependency=/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps","--extern","instant=/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps/libinstant-72a42bf9ba7f0c41.rmeta","--extern","lock_api=/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps/liblock_api-6ad98de7866ad33e.rmeta","--extern","parking_lot_core=/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps/libparking_lot_core-b0ff752732b2792d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/gorta/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps/libparking_lot-4feb4738631d9d21.rmeta"},"prelude":{"crate_id":{"name":"parking_lot","disambiguator":[10219351849432765627,14226259366323338014]},"crate_root":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src","external_crates":[{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18437716656233032650,2349106724991734091]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","num":2,"id":{"name":"core","disambiguator":[16851962707842592855,4932765248485690217]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3049591816127030880,10952373373500329976]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11587085401131637304,2097967498245787009]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[697141649018154369,16548652339936893370]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[15777040323210795675,4562741973928336648]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15931681355194650171,7679759071890480571]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16378405889910241769,9643272937548158260]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[8261542656080474758,5147161130074218296]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[1712641478249352838,12464696676097716113]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[3715598662871405823,1939556143240013170]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4641845549064414815,7418938888650694907]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18127448783747998133,9149995038350923488]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[8742225116956546677,8424782546207546390]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","num":15,"id":{"name":"instant","disambiguator":[1051043672279550097,12152968265506830337]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","num":16,"id":{"name":"cfg_if","disambiguator":[10487014861562282928,9077454618309915830]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","num":17,"id":{"name":"lock_api","disambiguator":[13802218327845487787,1641429766539931812]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","num":18,"id":{"name":"scopeguard","disambiguator":[11094522125063972432,8514709811731402222]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","num":19,"id":{"name":"parking_lot_core","disambiguator":[2868480548964008063,2690527532334744275]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","num":20,"id":{"name":"cfg_if","disambiguator":[16691520207553097855,5782485460756469676]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","num":21,"id":{"name":"smallvec","disambiguator":[6577367253065780179,10891244801887893317]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","num":22,"id":{"name":"libc","disambiguator":[4458480106135072753,7496631339199250715]}}],"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":333,"byte_end":2029,"line_start":8,"line_end":57,"column_start":1,"column_end":20}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":29},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1356,"byte_end":1363,"line_start":42,"line_end":42,"column_start":25,"column_end":32},"alias_span":null,"name":"Condvar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":431},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1365,"byte_end":1382,"line_start":42,"line_end":42,"column_start":34,"column_end":51},"alias_span":null,"name":"WaitTimeoutResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":71},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1412,"byte_end":1428,"line_start":43,"line_end":43,"column_start":28,"column_end":44},"alias_span":null,"name":"const_fair_mutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":69},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1430,"byte_end":1439,"line_start":43,"line_end":43,"column_start":46,"column_end":55},"alias_span":null,"name":"FairMutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":73},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1441,"byte_end":1455,"line_start":43,"line_end":43,"column_start":57,"column_end":71},"alias_span":null,"name":"FairMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":76},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1457,"byte_end":1477,"line_start":43,"line_end":43,"column_start":73,"column_end":93},"alias_span":null,"name":"MappedFairMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":84},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1502,"byte_end":1513,"line_start":44,"line_end":44,"column_start":23,"column_end":34},"alias_span":null,"name":"const_mutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":89},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1515,"byte_end":1531,"line_start":44,"line_end":44,"column_start":36,"column_end":52},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":82},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1533,"byte_end":1538,"line_start":44,"line_end":44,"column_start":54,"column_end":59},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":86},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1540,"byte_end":1550,"line_start":44,"line_end":44,"column_start":61,"column_end":71},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":113},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1574,"byte_end":1578,"line_start":45,"line_end":45,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":446},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1580,"byte_end":1589,"line_start":45,"line_end":45,"column_start":28,"column_end":37},"alias_span":null,"name":"OnceState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":143},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1622,"byte_end":1634,"line_start":46,"line_end":46,"column_start":31,"column_end":43},"alias_span":null,"name":"RawFairMutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":183},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1661,"byte_end":1669,"line_start":47,"line_end":47,"column_start":26,"column_end":34},"alias_span":null,"name":"RawMutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1697,"byte_end":1706,"line_start":48,"line_end":48,"column_start":27,"column_end":36},"alias_span":null,"name":"RawRwLock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":351},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1737,"byte_end":1758,"line_start":50,"line_end":50,"column_start":5,"column_end":26},"alias_span":null,"name":"const_reentrant_mutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":356},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1760,"byte_end":1785,"line_start":50,"line_end":50,"column_start":28,"column_end":53},"alias_span":null,"name":"MappedReentrantMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":343},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1787,"byte_end":1798,"line_start":50,"line_end":50,"column_start":55,"column_end":66},"alias_span":null,"name":"RawThreadId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":344},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1787,"byte_end":1798,"line_start":50,"line_end":50,"column_start":55,"column_end":66},"alias_span":null,"name":"RawThreadId","value":"","parent":{"krate":0,"index":419}},{"kind":"Use","ref_id":{"krate":0,"index":349},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1800,"byte_end":1814,"line_start":50,"line_end":50,"column_start":68,"column_end":82},"alias_span":null,"name":"ReentrantMutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":353},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1820,"byte_end":1839,"line_start":51,"line_end":51,"column_start":5,"column_end":24},"alias_span":null,"name":"ReentrantMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":364},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1872,"byte_end":1884,"line_start":54,"line_end":54,"column_start":5,"column_end":17},"alias_span":null,"name":"const_rwlock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":372},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1886,"byte_end":1907,"line_start":54,"line_end":54,"column_start":19,"column_end":40},"alias_span":null,"name":"MappedRwLockReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":375},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1909,"byte_end":1931,"line_start":54,"line_end":54,"column_start":42,"column_end":64},"alias_span":null,"name":"MappedRwLockWriteGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":362},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1933,"byte_end":1939,"line_start":54,"line_end":54,"column_start":66,"column_end":72},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":366},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1941,"byte_end":1956,"line_start":54,"line_end":54,"column_start":74,"column_end":89},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":378},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1962,"byte_end":1987,"line_start":55,"line_end":55,"column_start":5,"column_end":30},"alias_span":null,"name":"RwLockUpgradableReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":369},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":1989,"byte_end":2005,"line_start":55,"line_end":55,"column_start":32,"column_end":48},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":0},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":2020,"byte_end":2028,"line_start":57,"line_end":57,"column_start":11,"column_end":19},"alias_span":null,"name":"lock_api","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":333,"byte_end":2029,"line_start":8,"line_end":57,"column_start":1,"column_end":20},"name":"","qualname":"::","value":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":55},{"krate":0,"index":66},{"krate":0,"index":79},{"krate":0,"index":92},{"krate":0,"index":140},{"krate":0,"index":161},{"krate":0,"index":210},{"krate":0,"index":337},{"krate":0,"index":359},{"krate":0,"index":381},{"krate":0,"index":392},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":660},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430}],"decl_id":null,"docs":" This library provides implementations of `Mutex`, `RwLock`, `Condvar` and\n `Once` that are smaller, faster and more flexible than those in the Rust\n standard library. It also provides a `ReentrantMutex` type.\n","sig":null,"attributes":[{"value":"! This library provides implementations of `Mutex`, `RwLock`, `Condvar` and","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":333,"byte_end":410,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"! `Once` that are smaller, faster and more flexible than those in the Rust","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":411,"byte_end":487,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"! standard library. It also provides a `ReentrantMutex` type.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":488,"byte_end":551,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"warn(missing_docs)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":553,"byte_end":575,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/lib.rs","byte_start":576,"byte_end":602,"line_start":13,"line_end":13,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":431},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":2890,"byte_end":2907,"line_start":23,"line_end":23,"column_start":12,"column_end":29},"name":"WaitTimeoutResult","qualname":"::condvar::WaitTimeoutResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type indicating whether a timed wait on a condition variable returned\n due to a time out or not.\n","sig":null,"attributes":[{"value":"/ A type indicating whether a timed wait on a condition variable returned","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":2728,"byte_end":2803,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ due to a time out or not.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":2804,"byte_end":2833,"line_start":21,"line_end":21,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":3028,"byte_end":3037,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"name":"timed_out","qualname":"<WaitTimeoutResult>::timed_out","value":"pub fn timed_out(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the wait was known to have timed out.\n","sig":null,"attributes":[{"value":"/ Returns whether the wait was known to have timed out.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":2945,"byte_end":3002,"line_start":26,"line_end":26,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":3007,"byte_end":3016,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":29},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":5432,"byte_end":5439,"line_start":90,"line_end":90,"column_start":12,"column_end":19},"name":"Condvar","qualname":"::condvar::Condvar","value":"Condvar {  }","parent":null,"children":[{"krate":0,"index":30}],"decl_id":null,"docs":" A Condition Variable","sig":null,"attributes":[{"value":"/ A Condition Variable","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":3078,"byte_end":3102,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":3103,"byte_end":3106,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Condition variables represent the ability to block a thread such that it","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":3107,"byte_end":3183,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ consumes no CPU time while waiting for an event to occur. Condition","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":3184,"byte_end":3255,"line_start":36,"line_end":36,"column_start":1,"column_end":72}},{"value":"/ variables are typically associated with a boolean predicate (a condition)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":3256,"byte_end":3333,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ and a mutex. The predicate is always verified inside of the mutex before","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":3334,"byte_end":3410,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ determining that thread must block.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":3411,"byte_end":3450,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":3451,"byte_end":3454,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Note that this module places one additional restriction over the system","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":3455,"byte_end":3530,"line_start":41,"line_end":41,"column_start":1,"column_end":76}},{"value":"/ condition variables: each condvar can be used with only one mutex at a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":3531,"byte_end":3605,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ time. Any attempt to use multiple mutexes on the same condition variable","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":3606,"byte_end":3682,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ simultaneously will result in a runtime panic. However it is possible to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":3683,"byte_end":3759,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ switch to a different mutex if there are no threads currently waiting on","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":3760,"byte_end":3836,"line_start":45,"line_end":45,"column_start":1,"column_end":77}},{"value":"/ the condition variable.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":3837,"byte_end":3864,"line_start":46,"line_end":46,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":3865,"byte_end":3868,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # Differences from the standard library `Condvar`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":3869,"byte_end":3922,"line_start":48,"line_end":48,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":3923,"byte_end":3926,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ - No spurious wakeups: A wait will only return a non-timeout result if it","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":3927,"byte_end":4004,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/   was woken up by `notify_one` or `notify_all`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4005,"byte_end":4056,"line_start":51,"line_end":51,"column_start":1,"column_end":52}},{"value":"/ - `Condvar::notify_all` will only wake up a single thread, the rest are","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4057,"byte_end":4132,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/   requeued to wait for the `Mutex` to be unlocked by the thread that was","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4133,"byte_end":4209,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/   woken up.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4210,"byte_end":4225,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/ - Only requires 1 word of space, whereas the standard library boxes the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4226,"byte_end":4301,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/   `Condvar` due to platform limitations.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4302,"byte_end":4346,"line_start":56,"line_end":56,"column_start":1,"column_end":45}},{"value":"/ - Can be statically constructed (requires the `const_fn` nightly feature).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4347,"byte_end":4425,"line_start":57,"line_end":57,"column_start":1,"column_end":79}},{"value":"/ - Does not require any drop glue when dropped.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4426,"byte_end":4476,"line_start":58,"line_end":58,"column_start":1,"column_end":51}},{"value":"/ - Inline fast path for the uncontended case.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4477,"byte_end":4525,"line_start":59,"line_end":59,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4526,"byte_end":4529,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4530,"byte_end":4544,"line_start":61,"line_end":61,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4545,"byte_end":4548,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4549,"byte_end":4556,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ use parking_lot::{Mutex, Condvar};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4557,"byte_end":4595,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4596,"byte_end":4619,"line_start":65,"line_end":65,"column_start":1,"column_end":24}},{"value":"/ use std::thread;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4620,"byte_end":4640,"line_start":66,"line_end":66,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4641,"byte_end":4644,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4645,"byte_end":4706,"line_start":68,"line_end":68,"column_start":1,"column_end":62}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4707,"byte_end":4736,"line_start":69,"line_end":69,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4737,"byte_end":4740,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // Inside of our lock, spawn a new thread, and then wait for it to start","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4741,"byte_end":4817,"line_start":71,"line_end":71,"column_start":1,"column_end":77}},{"value":"/ thread::spawn(move|| {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4818,"byte_end":4844,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/     let &(ref lock, ref cvar) = &*pair2;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4845,"byte_end":4889,"line_start":73,"line_end":73,"column_start":1,"column_end":45}},{"value":"/     let mut started = lock.lock();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4890,"byte_end":4928,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/     *started = true;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4929,"byte_end":4953,"line_start":75,"line_end":75,"column_start":1,"column_end":25}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4954,"byte_end":4980,"line_start":76,"line_end":76,"column_start":1,"column_end":27}},{"value":"/ });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4981,"byte_end":4988,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4989,"byte_end":4992,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // wait for the thread to start up","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":4993,"byte_end":5031,"line_start":79,"line_end":79,"column_start":1,"column_end":39}},{"value":"/ let &(ref lock, ref cvar) = &*pair;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":5032,"byte_end":5071,"line_start":80,"line_end":80,"column_start":1,"column_end":40}},{"value":"/ let mut started = lock.lock();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":5072,"byte_end":5106,"line_start":81,"line_end":81,"column_start":1,"column_end":35}},{"value":"/ if !*started {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":5107,"byte_end":5125,"line_start":82,"line_end":82,"column_start":1,"column_end":19}},{"value":"/     cvar.wait(&mut started);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":5126,"byte_end":5158,"line_start":83,"line_end":83,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":5159,"byte_end":5164,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/ // Note that we used an if instead of a while loop above. This is only","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":5165,"byte_end":5239,"line_start":85,"line_end":85,"column_start":1,"column_end":75}},{"value":"/ // possible because parking_lot's Condvar will never spuriously wake up.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":5240,"byte_end":5316,"line_start":86,"line_end":86,"column_start":1,"column_end":77}},{"value":"/ // This means that wait() will only return after notify_one or notify_all is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":5317,"byte_end":5397,"line_start":87,"line_end":87,"column_start":1,"column_end":81}},{"value":"/ // called.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":5398,"byte_end":5412,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":5413,"byte_end":5420,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":5617,"byte_end":5620,"line_start":98,"line_end":98,"column_start":18,"column_end":21},"name":"new","qualname":"<Condvar>::new","value":"pub const fn new() -> Condvar","parent":null,"children":[],"decl_id":null,"docs":" Creates a new condition variable which is ready to be waited on and\n notified.\n","sig":null,"attributes":[{"value":"/ Creates a new condition variable which is ready to be waited on and","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":5496,"byte_end":5567,"line_start":95,"line_end":95,"column_start":5,"column_end":76}},{"value":"/ notified.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":5572,"byte_end":5585,"line_start":96,"line_end":96,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":5590,"byte_end":5599,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":6446,"byte_end":6456,"line_start":128,"line_end":128,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Condvar>::notify_one","value":"pub fn notify_one(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Wakes up one blocked thread on this condvar.","sig":null,"attributes":[{"value":"/ Wakes up one blocked thread on this condvar.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":5727,"byte_end":5775,"line_start":104,"line_end":104,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":5780,"byte_end":5783,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Returns whether a thread was woken up.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":5788,"byte_end":5830,"line_start":106,"line_end":106,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":5835,"byte_end":5838,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If there is a blocked thread on this condition variable, then it will","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":5843,"byte_end":5916,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ be woken up from its call to `wait` or `wait_timeout`. Calls to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":5921,"byte_end":5988,"line_start":109,"line_end":109,"column_start":5,"column_end":72}},{"value":"/ `notify_one` are not buffered in any way.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":5993,"byte_end":6038,"line_start":110,"line_end":110,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":6043,"byte_end":6046,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ To wake up all threads, see `notify_all()`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":6051,"byte_end":6098,"line_start":112,"line_end":112,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":6103,"byte_end":6106,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":6111,"byte_end":6125,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":6130,"byte_end":6133,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":6138,"byte_end":6145,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use parking_lot::Condvar;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":6150,"byte_end":6179,"line_start":117,"line_end":117,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":6184,"byte_end":6187,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let condvar = Condvar::new();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":6192,"byte_end":6225,"line_start":119,"line_end":119,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":6230,"byte_end":6233,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ // do something with condvar, share it with other threads","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":6238,"byte_end":6299,"line_start":121,"line_end":121,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":6304,"byte_end":6307,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ if !condvar.notify_one() {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":6312,"byte_end":6342,"line_start":123,"line_end":123,"column_start":5,"column_end":35}},{"value":"/     println!(\"Nobody was listening for this.\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":6347,"byte_end":6398,"line_start":124,"line_end":124,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":6403,"byte_end":6408,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":6413,"byte_end":6420,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":6425,"byte_end":6434,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":8909,"byte_end":8919,"line_start":189,"line_end":189,"column_start":12,"column_end":22},"name":"notify_all","qualname":"<Condvar>::notify_all","value":"pub fn notify_all(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Wakes up all blocked threads on this condvar.","sig":null,"attributes":[{"value":"/ Wakes up all blocked threads on this condvar.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":8542,"byte_end":8591,"line_start":179,"line_end":179,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":8596,"byte_end":8599,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Returns the number of threads woken up.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":8604,"byte_end":8647,"line_start":181,"line_end":181,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":8652,"byte_end":8655,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ This method will ensure that any current waiters on the condition","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":8660,"byte_end":8729,"line_start":183,"line_end":183,"column_start":5,"column_end":74}},{"value":"/ variable are awoken. Calls to `notify_all()` are not buffered in any","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":8734,"byte_end":8806,"line_start":184,"line_end":184,"column_start":5,"column_end":77}},{"value":"/ way.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":8811,"byte_end":8819,"line_start":185,"line_end":185,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":8824,"byte_end":8827,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ To wake up only one thread, see `notify_one()`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":8832,"byte_end":8883,"line_start":187,"line_end":187,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":8888,"byte_end":8897,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":11932,"byte_end":11936,"line_start":259,"line_end":259,"column_start":12,"column_end":16},"name":"wait","qualname":"<Condvar>::wait","value":"pub fn wait<T: ?Sized>(&Self, &mut MutexGuard<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until this condition variable receives a\n notification.","sig":null,"attributes":[{"value":"/ Blocks the current thread until this condition variable receives a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":11283,"byte_end":11353,"line_start":245,"line_end":245,"column_start":5,"column_end":75}},{"value":"/ notification.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":11358,"byte_end":11375,"line_start":246,"line_end":246,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":11380,"byte_end":11383,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ This function will atomically unlock the mutex specified (represented by","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":11388,"byte_end":11464,"line_start":248,"line_end":248,"column_start":5,"column_end":81}},{"value":"/ `mutex_guard`) and block the current thread. This means that any calls","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":11469,"byte_end":11543,"line_start":249,"line_end":249,"column_start":5,"column_end":79}},{"value":"/ to `notify_*()` which happen logically after the mutex is unlocked are","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":11548,"byte_end":11622,"line_start":250,"line_end":250,"column_start":5,"column_end":79}},{"value":"/ candidates to wake this thread up. When this function call returns, the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":11627,"byte_end":11702,"line_start":251,"line_end":251,"column_start":5,"column_end":80}},{"value":"/ lock specified will have been re-acquired.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":11707,"byte_end":11753,"line_start":252,"line_end":252,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":11758,"byte_end":11761,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":11766,"byte_end":11778,"line_start":254,"line_end":254,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":11783,"byte_end":11786,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ This function will panic if another thread is waiting on the `Condvar`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":11791,"byte_end":11865,"line_start":256,"line_end":256,"column_start":5,"column_end":79}},{"value":"/ with a different `Mutex` object.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":11870,"byte_end":11906,"line_start":257,"line_end":257,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":11911,"byte_end":11920,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":13211,"byte_end":13221,"line_start":287,"line_end":287,"column_start":12,"column_end":22},"name":"wait_until","qualname":"<Condvar>::wait_until","value":"pub fn wait_until<T: ?Sized>(&Self, &mut MutexGuard<, T>, Instant)\n-> WaitTimeoutResult","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after\n the specified time instant.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":12094,"byte_end":12167,"line_start":263,"line_end":263,"column_start":5,"column_end":78}},{"value":"/ the specified time instant.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":12172,"byte_end":12203,"line_start":264,"line_end":264,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":12208,"byte_end":12211,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The semantics of this function are equivalent to `wait()` except that","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":12216,"byte_end":12289,"line_start":266,"line_end":266,"column_start":5,"column_end":78}},{"value":"/ the thread will be blocked roughly until `timeout` is reached. This","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":12294,"byte_end":12365,"line_start":267,"line_end":267,"column_start":5,"column_end":76}},{"value":"/ method should not be used for precise timing due to anomalies such as","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":12370,"byte_end":12443,"line_start":268,"line_end":268,"column_start":5,"column_end":78}},{"value":"/ preemption or platform differences that may not cause the maximum","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":12448,"byte_end":12517,"line_start":269,"line_end":269,"column_start":5,"column_end":74}},{"value":"/ amount of time waited to be precisely `timeout`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":12522,"byte_end":12574,"line_start":270,"line_end":270,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":12579,"byte_end":12582,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Note that the best effort is made to ensure that the time waited is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":12587,"byte_end":12658,"line_start":272,"line_end":272,"column_start":5,"column_end":76}},{"value":"/ measured with a monotonic clock, and not affected by the changes made to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":12663,"byte_end":12739,"line_start":273,"line_end":273,"column_start":5,"column_end":81}},{"value":"/ the system time.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":12744,"byte_end":12764,"line_start":274,"line_end":274,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":12769,"byte_end":12772,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ The returned `WaitTimeoutResult` value indicates if the timeout is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":12777,"byte_end":12847,"line_start":276,"line_end":276,"column_start":5,"column_end":75}},{"value":"/ known to have elapsed.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":12852,"byte_end":12878,"line_start":277,"line_end":277,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":12883,"byte_end":12886,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Like `wait`, the lock specified will be re-acquired when this function","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":12891,"byte_end":12965,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/ returns, regardless of whether the timeout elapsed or not.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":12970,"byte_end":13032,"line_start":280,"line_end":280,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":13037,"byte_end":13040,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":13045,"byte_end":13057,"line_start":282,"line_end":282,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":13062,"byte_end":13065,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ This function will panic if another thread is waiting on the `Condvar`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":13070,"byte_end":13144,"line_start":284,"line_end":284,"column_start":5,"column_end":79}},{"value":"/ with a different `Mutex` object.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":13149,"byte_end":13185,"line_start":285,"line_end":285,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":13190,"byte_end":13199,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":17615,"byte_end":17623,"line_start":391,"line_end":391,"column_start":12,"column_end":20},"name":"wait_for","qualname":"<Condvar>::wait_for","value":"pub fn wait_for<T: ?Sized>(&Self, &mut MutexGuard<, T>, Duration)\n-> WaitTimeoutResult","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after a\n specified duration.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":16365,"byte_end":16440,"line_start":366,"line_end":366,"column_start":5,"column_end":80}},{"value":"/ specified duration.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":16445,"byte_end":16468,"line_start":367,"line_end":367,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":16473,"byte_end":16476,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ The semantics of this function are equivalent to `wait()` except that","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":16481,"byte_end":16554,"line_start":369,"line_end":369,"column_start":5,"column_end":78}},{"value":"/ the thread will be blocked for roughly no longer than `timeout`. This","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":16559,"byte_end":16632,"line_start":370,"line_end":370,"column_start":5,"column_end":78}},{"value":"/ method should not be used for precise timing due to anomalies such as","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":16637,"byte_end":16710,"line_start":371,"line_end":371,"column_start":5,"column_end":78}},{"value":"/ preemption or platform differences that may not cause the maximum","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":16715,"byte_end":16784,"line_start":372,"line_end":372,"column_start":5,"column_end":74}},{"value":"/ amount of time waited to be precisely `timeout`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":16789,"byte_end":16841,"line_start":373,"line_end":373,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":16846,"byte_end":16849,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ Note that the best effort is made to ensure that the time waited is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":16854,"byte_end":16925,"line_start":375,"line_end":375,"column_start":5,"column_end":76}},{"value":"/ measured with a monotonic clock, and not affected by the changes made to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":16930,"byte_end":17006,"line_start":376,"line_end":376,"column_start":5,"column_end":81}},{"value":"/ the system time.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":17011,"byte_end":17031,"line_start":377,"line_end":377,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":17036,"byte_end":17039,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ The returned `WaitTimeoutResult` value indicates if the timeout is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":17044,"byte_end":17114,"line_start":379,"line_end":379,"column_start":5,"column_end":75}},{"value":"/ known to have elapsed.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":17119,"byte_end":17145,"line_start":380,"line_end":380,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":17150,"byte_end":17153,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ Like `wait`, the lock specified will be re-acquired when this function","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":17158,"byte_end":17232,"line_start":382,"line_end":382,"column_start":5,"column_end":79}},{"value":"/ returns, regardless of whether the timeout elapsed or not.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":17237,"byte_end":17299,"line_start":383,"line_end":383,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":17304,"byte_end":17307,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":17312,"byte_end":17324,"line_start":385,"line_end":385,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":17329,"byte_end":17332,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Panics if the given `timeout` is so large that it can't be added to the current time.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":17337,"byte_end":17426,"line_start":387,"line_end":387,"column_start":5,"column_end":94}},{"value":"/ This panic is not possible if the crate is built with the `nightly` feature, then a too","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":17431,"byte_end":17522,"line_start":388,"line_end":388,"column_start":5,"column_end":96}},{"value":"/ large `timeout` becomes equivalent to just calling `wait`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":17527,"byte_end":17589,"line_start":389,"line_end":389,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":17594,"byte_end":17603,"line_start":390,"line_end":390,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":58},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/elision.rs","byte_start":37727,"byte_end":37734,"line_start":12,"line_end":12,"column_start":10,"column_end":17},"name":"IntType","qualname":"::elision::AtomicElisionExt::IntType","value":"type IntType;","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":69},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":44486,"byte_end":44495,"line_start":81,"line_end":81,"column_start":10,"column_end":19},"name":"FairMutex","qualname":"::fair_mutex::FairMutex","value":"lock_api::Mutex<RawFairMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" A mutual exclusive primitive that is always fair, useful for protecting shared data","sig":null,"attributes":[{"value":"/ A mutual exclusive primitive that is always fair, useful for protecting shared data","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":41319,"byte_end":41406,"line_start":11,"line_end":11,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":41407,"byte_end":41410,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This mutex will block threads waiting for the lock to become available. The","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":41411,"byte_end":41490,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ mutex can also be statically initialized or created via a `new`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":41491,"byte_end":41558,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ constructor. Each mutex has a type parameter which represents the data that","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":41559,"byte_end":41638,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ it is protecting. The data can only be accessed through the RAII guards","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":41639,"byte_end":41714,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ returned from `lock` and `try_lock`, which guarantees that the data is only","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":41715,"byte_end":41794,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ ever accessed when the mutex is locked.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":41795,"byte_end":41838,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":41839,"byte_end":41842,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The regular mutex provided by `parking_lot` uses eventual locking fairness","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":41843,"byte_end":41921,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ (after some time it will default to the fair algorithm), but eventual","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":41922,"byte_end":41995,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/ fairness does not provide the same garantees a always fair method would.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":41996,"byte_end":42072,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ Fair mutexes are generally slower, but sometimes needed. This wrapper was","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":42073,"byte_end":42150,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ created to avoid using a unfair protocol when it's forbidden by mistake.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":42151,"byte_end":42227,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":42228,"byte_end":42231,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ In a fair mutex the lock is provided to whichever thread asked first,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":42232,"byte_end":42305,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/ they form a queue and always follow the first-in first-out order. This","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":42306,"byte_end":42380,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ means some thread in the queue won't be able to steal the lock and use it fast","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":42381,"byte_end":42463,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ to increase throughput, at the cost of latency. Since the response time will grow","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":42464,"byte_end":42549,"line_start":29,"line_end":29,"column_start":1,"column_end":86}},{"value":"/ for some threads that are waiting for the lock and losing to faster but later ones,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":42550,"byte_end":42637,"line_start":30,"line_end":30,"column_start":1,"column_end":88}},{"value":"/ but it may make sending more responses possible.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":42638,"byte_end":42690,"line_start":31,"line_end":31,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":42691,"byte_end":42694,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ A fair mutex may not be interesting if threads have different priorities (this is known as","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":42695,"byte_end":42789,"line_start":33,"line_end":33,"column_start":1,"column_end":95}},{"value":"/ priority inversion).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":42790,"byte_end":42814,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":42815,"byte_end":42818,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Differences from the standard library `Mutex`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":42819,"byte_end":42870,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":42871,"byte_end":42874,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ - No poisoning, the lock is released normally on panic.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":42875,"byte_end":42934,"line_start":38,"line_end":38,"column_start":1,"column_end":60}},{"value":"/ - Only requires 1 byte of space, whereas the standard library boxes the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":42935,"byte_end":43010,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/   `FairMutex` due to platform limitations.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43011,"byte_end":43057,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/ - Can be statically constructed (requires the `const_fn` nightly feature).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43058,"byte_end":43136,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ - Does not require any drop glue when dropped.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43137,"byte_end":43187,"line_start":42,"line_end":42,"column_start":1,"column_end":51}},{"value":"/ - Inline fast path for the uncontended case.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43188,"byte_end":43236,"line_start":43,"line_end":43,"column_start":1,"column_end":49}},{"value":"/ - Efficient handling of micro-contention using adaptive spinning.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43237,"byte_end":43306,"line_start":44,"line_end":44,"column_start":1,"column_end":70}},{"value":"/ - Allows raw locking & unlocking without a guard.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43307,"byte_end":43360,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43361,"byte_end":43364,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43365,"byte_end":43379,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43380,"byte_end":43383,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43384,"byte_end":43391,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ use parking_lot::FairMutex;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43392,"byte_end":43423,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/ use std::sync::{Arc, mpsc::channel};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43424,"byte_end":43464,"line_start":51,"line_end":51,"column_start":1,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43465,"byte_end":43485,"line_start":52,"line_end":52,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43486,"byte_end":43489,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ const N: usize = 10;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43490,"byte_end":43514,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43515,"byte_end":43518,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Spawn a few threads to increment a shared variable (non-atomically), and","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43519,"byte_end":43598,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ // let the main thread know once all increments are done.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43599,"byte_end":43660,"line_start":57,"line_end":57,"column_start":1,"column_end":62}},{"value":"/ //","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43661,"byte_end":43667,"line_start":58,"line_end":58,"column_start":1,"column_end":7}},{"value":"/ // Here we're using an Arc to share memory among threads, and the data inside","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43668,"byte_end":43749,"line_start":59,"line_end":59,"column_start":1,"column_end":82}},{"value":"/ // the Arc is protected with a mutex.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43750,"byte_end":43791,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/ let data = Arc::new(FairMutex::new(0));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43792,"byte_end":43835,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43836,"byte_end":43839,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ let (tx, rx) = channel();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43840,"byte_end":43869,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43870,"byte_end":43890,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"/     let (data, tx) = (Arc::clone(&data), tx.clone());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43891,"byte_end":43948,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/     thread::spawn(move || {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43949,"byte_end":43980,"line_start":66,"line_end":66,"column_start":1,"column_end":32}},{"value":"/         // The shared state can only be accessed once the lock is held.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":43981,"byte_end":44056,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/         // Our non-atomic increment is safe because we're the only thread","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":44057,"byte_end":44134,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/         // which can access the shared state when the lock is held.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":44135,"byte_end":44206,"line_start":69,"line_end":69,"column_start":1,"column_end":72}},{"value":"/         let mut data = data.lock();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":44207,"byte_end":44246,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/         *data += 1;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":44247,"byte_end":44270,"line_start":71,"line_end":71,"column_start":1,"column_end":24}},{"value":"/         if *data == N {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":44271,"byte_end":44298,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"/             tx.send(()).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":44299,"byte_end":44336,"line_start":73,"line_end":73,"column_start":1,"column_end":38}},{"value":"/         }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":44337,"byte_end":44350,"line_start":74,"line_end":74,"column_start":1,"column_end":14}},{"value":"/         // the lock is unlocked here when `data` goes out of scope.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":44351,"byte_end":44422,"line_start":75,"line_end":75,"column_start":1,"column_end":72}},{"value":"/     });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":44423,"byte_end":44434,"line_start":76,"line_end":76,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":44435,"byte_end":44440,"line_start":77,"line_end":77,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":44441,"byte_end":44444,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ rx.recv().unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":44445,"byte_end":44468,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":44469,"byte_end":44476,"line_start":80,"line_end":80,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":71},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":44694,"byte_end":44710,"line_start":86,"line_end":86,"column_start":14,"column_end":30},"name":"const_fair_mutex","qualname":"::fair_mutex::const_fair_mutex","value":"pub const fn const_fair_mutex<T>(T) -> FairMutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new fair mutex in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new fair mutex in an unlocked state ready for use.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":44536,"byte_end":44600,"line_start":83,"line_end":83,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":44601,"byte_end":44604,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ This allows creating a fair mutex in a constant context on stable Rust.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":44605,"byte_end":44680,"line_start":85,"line_end":85,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":73},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":45095,"byte_end":45109,"line_start":95,"line_end":95,"column_start":10,"column_end":24},"name":"FairMutexGuard","qualname":"::fair_mutex::FairMutexGuard","value":"lock_api::MutexGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII implementation of a \"scoped lock\" of a mutex. When this structure is\n dropped (falls out of scope), the lock will be unlocked.","sig":null,"attributes":[{"value":"/ An RAII implementation of a \"scoped lock\" of a mutex. When this structure is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":44817,"byte_end":44897,"line_start":90,"line_end":90,"column_start":1,"column_end":81}},{"value":"/ dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":44898,"byte_end":44958,"line_start":91,"line_end":91,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":44959,"byte_end":44962,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The data protected by the mutex can be accessed through this guard via its","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":44963,"byte_end":45041,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/ `Deref` and `DerefMut` implementations.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":45042,"byte_end":45085,"line_start":94,"line_end":94,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":76},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":45549,"byte_end":45569,"line_start":104,"line_end":104,"column_start":10,"column_end":30},"name":"MappedFairMutexGuard","qualname":"::fair_mutex::MappedFairMutexGuard","value":"lock_api::MappedMutexGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII mutex guard returned by `FairMutexGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"/ An RAII mutex guard returned by `FairMutexGuard::map`, which can point to a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":45163,"byte_end":45242,"line_start":97,"line_end":97,"column_start":1,"column_end":80}},{"value":"/ subfield of the protected data.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":45243,"byte_end":45278,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":45279,"byte_end":45282,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The main difference between `MappedFairMutexGuard` and `FairMutexGuard` is that the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":45283,"byte_end":45370,"line_start":100,"line_end":100,"column_start":1,"column_end":88}},{"value":"/ former doesn't support temporarily unlocking and re-locking, since that","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":45371,"byte_end":45446,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/ could introduce soundness issues if the locked object is modified by another","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":45447,"byte_end":45527,"line_start":102,"line_end":102,"column_start":1,"column_end":81}},{"value":"/ thread.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/fair_mutex.rs","byte_start":45528,"byte_end":45539,"line_start":103,"line_end":103,"column_start":1,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":82},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53864,"byte_end":53869,"line_start":87,"line_end":87,"column_start":10,"column_end":15},"name":"Mutex","qualname":"::mutex::Mutex","value":"lock_api::Mutex<RawMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" A mutual exclusion primitive useful for protecting shared data","sig":null,"attributes":[{"value":"/ A mutual exclusion primitive useful for protecting shared data","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":50489,"byte_end":50555,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":50556,"byte_end":50559,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This mutex will block threads waiting for the lock to become available. The","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":50560,"byte_end":50639,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ mutex can also be statically initialized or created via a `new`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":50640,"byte_end":50707,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ constructor. Each mutex has a type parameter which represents the data that","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":50708,"byte_end":50787,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ it is protecting. The data can only be accessed through the RAII guards","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":50788,"byte_end":50863,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ returned from `lock` and `try_lock`, which guarantees that the data is only","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":50864,"byte_end":50943,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ ever accessed when the mutex is locked.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":50944,"byte_end":50987,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":50988,"byte_end":50991,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":50992,"byte_end":51006,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":51007,"byte_end":51010,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ A typical unfair lock can often end up in a situation where a single thread","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":51011,"byte_end":51090,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ quickly acquires and releases the same mutex in succession, which can starve","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":51091,"byte_end":51171,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ other threads waiting to acquire the mutex. While this improves throughput","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":51172,"byte_end":51250,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ because it doesn't force a context switch when a thread tries to re-acquire","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":51251,"byte_end":51330,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ a mutex it has just released, this can starve other threads.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":51331,"byte_end":51395,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":51396,"byte_end":51399,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This mutex uses [eventual fairness](https://trac.webkit.org/changeset/203350)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":51400,"byte_end":51481,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"/ to ensure that the lock will be fair on average without sacrificing","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":51482,"byte_end":51553,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ throughput. This is done by forcing a fair unlock on average every 0.5ms,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":51554,"byte_end":51631,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ which will force the lock to go to the next thread waiting for the mutex.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":51632,"byte_end":51709,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":51710,"byte_end":51713,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Additionally, any critical section longer than 1ms will always use a fair","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":51714,"byte_end":51791,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ unlock, which has a negligible impact on throughput considering the length","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":51792,"byte_end":51870,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ of the critical section.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":51871,"byte_end":51899,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":51900,"byte_end":51903,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ You can also force a fair unlock by calling `MutexGuard::unlock_fair` when","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":51904,"byte_end":51982,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ unlocking a mutex instead of simply dropping the `MutexGuard`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":51983,"byte_end":52049,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52050,"byte_end":52053,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Differences from the standard library `Mutex`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52054,"byte_end":52105,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52106,"byte_end":52109,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - No poisoning, the lock is released normally on panic.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52110,"byte_end":52169,"line_start":42,"line_end":42,"column_start":1,"column_end":60}},{"value":"/ - Only requires 1 byte of space, whereas the standard library boxes the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52170,"byte_end":52245,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/   `Mutex` due to platform limitations.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52246,"byte_end":52288,"line_start":44,"line_end":44,"column_start":1,"column_end":43}},{"value":"/ - Can be statically constructed (requires the `const_fn` nightly feature).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52289,"byte_end":52367,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ - Does not require any drop glue when dropped.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52368,"byte_end":52418,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ - Inline fast path for the uncontended case.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52419,"byte_end":52467,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/ - Efficient handling of micro-contention using adaptive spinning.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52468,"byte_end":52537,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ - Allows raw locking & unlocking without a guard.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52538,"byte_end":52591,"line_start":49,"line_end":49,"column_start":1,"column_end":54}},{"value":"/ - Supports eventual fairness so that the mutex is fair on average.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52592,"byte_end":52662,"line_start":50,"line_end":50,"column_start":1,"column_end":71}},{"value":"/ - Optionally allows making the mutex fair by calling `MutexGuard::unlock_fair`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52663,"byte_end":52746,"line_start":51,"line_end":51,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52747,"byte_end":52750,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52751,"byte_end":52765,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52766,"byte_end":52769,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52770,"byte_end":52777,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use parking_lot::Mutex;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52778,"byte_end":52805,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/ use std::sync::{Arc, mpsc::channel};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52806,"byte_end":52846,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52847,"byte_end":52867,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52868,"byte_end":52871,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ const N: usize = 10;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52872,"byte_end":52896,"line_start":60,"line_end":60,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52897,"byte_end":52900,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // Spawn a few threads to increment a shared variable (non-atomically), and","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52901,"byte_end":52980,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/ // let the main thread know once all increments are done.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":52981,"byte_end":53042,"line_start":63,"line_end":63,"column_start":1,"column_end":62}},{"value":"/ //","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53043,"byte_end":53049,"line_start":64,"line_end":64,"column_start":1,"column_end":7}},{"value":"/ // Here we're using an Arc to share memory among threads, and the data inside","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53050,"byte_end":53131,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"/ // the Arc is protected with a mutex.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53132,"byte_end":53173,"line_start":66,"line_end":66,"column_start":1,"column_end":42}},{"value":"/ let data = Arc::new(Mutex::new(0));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53174,"byte_end":53213,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53214,"byte_end":53217,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let (tx, rx) = channel();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53218,"byte_end":53247,"line_start":69,"line_end":69,"column_start":1,"column_end":30}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53248,"byte_end":53268,"line_start":70,"line_end":70,"column_start":1,"column_end":21}},{"value":"/     let (data, tx) = (Arc::clone(&data), tx.clone());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53269,"byte_end":53326,"line_start":71,"line_end":71,"column_start":1,"column_end":58}},{"value":"/     thread::spawn(move || {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53327,"byte_end":53358,"line_start":72,"line_end":72,"column_start":1,"column_end":32}},{"value":"/         // The shared state can only be accessed once the lock is held.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53359,"byte_end":53434,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/         // Our non-atomic increment is safe because we're the only thread","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53435,"byte_end":53512,"line_start":74,"line_end":74,"column_start":1,"column_end":78}},{"value":"/         // which can access the shared state when the lock is held.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53513,"byte_end":53584,"line_start":75,"line_end":75,"column_start":1,"column_end":72}},{"value":"/         let mut data = data.lock();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53585,"byte_end":53624,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/         *data += 1;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53625,"byte_end":53648,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/         if *data == N {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53649,"byte_end":53676,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/             tx.send(()).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53677,"byte_end":53714,"line_start":79,"line_end":79,"column_start":1,"column_end":38}},{"value":"/         }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53715,"byte_end":53728,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/         // the lock is unlocked here when `data` goes out of scope.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53729,"byte_end":53800,"line_start":81,"line_end":81,"column_start":1,"column_end":72}},{"value":"/     });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53801,"byte_end":53812,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53813,"byte_end":53818,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53819,"byte_end":53822,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ rx.recv().unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53823,"byte_end":53846,"line_start":85,"line_end":85,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53847,"byte_end":53854,"line_start":86,"line_end":86,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":84},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":54054,"byte_end":54065,"line_start":92,"line_end":92,"column_start":14,"column_end":25},"name":"const_mutex","qualname":"::mutex::const_mutex","value":"pub const fn const_mutex<T>(T) -> Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new mutex in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new mutex in an unlocked state ready for use.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53906,"byte_end":53965,"line_start":89,"line_end":89,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53966,"byte_end":53969,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ This allows creating a mutex in a constant context on stable Rust.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":53970,"byte_end":54040,"line_start":91,"line_end":91,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":86},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":54438,"byte_end":54448,"line_start":101,"line_end":101,"column_start":10,"column_end":20},"name":"MutexGuard","qualname":"::mutex::MutexGuard","value":"lock_api::MutexGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII implementation of a \"scoped lock\" of a mutex. When this structure is\n dropped (falls out of scope), the lock will be unlocked.","sig":null,"attributes":[{"value":"/ An RAII implementation of a \"scoped lock\" of a mutex. When this structure is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":54160,"byte_end":54240,"line_start":96,"line_end":96,"column_start":1,"column_end":81}},{"value":"/ dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":54241,"byte_end":54301,"line_start":97,"line_end":97,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":54302,"byte_end":54305,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ The data protected by the mutex can be accessed through this guard via its","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":54306,"byte_end":54384,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"/ `Deref` and `DerefMut` implementations.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":54385,"byte_end":54428,"line_start":100,"line_end":100,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":89},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":54872,"byte_end":54888,"line_start":110,"line_end":110,"column_start":10,"column_end":26},"name":"MappedMutexGuard","qualname":"::mutex::MappedMutexGuard","value":"lock_api::MappedMutexGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII mutex guard returned by `MutexGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"/ An RAII mutex guard returned by `MutexGuard::map`, which can point to a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":54498,"byte_end":54573,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/ subfield of the protected data.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":54574,"byte_end":54609,"line_start":104,"line_end":104,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":54610,"byte_end":54613,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ The main difference between `MappedMutexGuard` and `MutexGuard` is that the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":54614,"byte_end":54693,"line_start":106,"line_end":106,"column_start":1,"column_end":80}},{"value":"/ former doesn't support temporarily unlocking and re-locking, since that","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":54694,"byte_end":54769,"line_start":107,"line_end":107,"column_start":1,"column_end":76}},{"value":"/ could introduce soundness issues if the locked object is modified by another","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":54770,"byte_end":54850,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ thread.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/mutex.rs","byte_start":54851,"byte_end":54862,"line_start":109,"line_end":109,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":447},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":60972,"byte_end":60975,"line_start":24,"line_end":24,"column_start":5,"column_end":8},"name":"New","qualname":"::once::OnceState::New","value":"OnceState::New","parent":{"krate":0,"index":446},"children":[],"decl_id":null,"docs":" A closure has not been executed yet\n","sig":null,"attributes":[{"value":"/ A closure has not been executed yet","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":60928,"byte_end":60967,"line_start":23,"line_end":23,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":449},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":61027,"byte_end":61035,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"Poisoned","qualname":"::once::OnceState::Poisoned","value":"OnceState::Poisoned","parent":{"krate":0,"index":446},"children":[],"decl_id":null,"docs":" A closure was executed but panicked.\n","sig":null,"attributes":[{"value":"/ A closure was executed but panicked.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":60982,"byte_end":61022,"line_start":26,"line_end":26,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":451},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":61093,"byte_end":61103,"line_start":30,"line_end":30,"column_start":5,"column_end":15},"name":"InProgress","qualname":"::once::OnceState::InProgress","value":"OnceState::InProgress","parent":{"krate":0,"index":446},"children":[],"decl_id":null,"docs":" A thread is currently executing a closure.\n","sig":null,"attributes":[{"value":"/ A thread is currently executing a closure.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":61042,"byte_end":61088,"line_start":29,"line_end":29,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":453},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":61156,"byte_end":61160,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"Done","qualname":"::once::OnceState::Done","value":"OnceState::Done","parent":{"krate":0,"index":446},"children":[],"decl_id":null,"docs":" A closure has completed successfully.\n","sig":null,"attributes":[{"value":"/ A closure has completed successfully.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":61110,"byte_end":61151,"line_start":32,"line_end":32,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":446},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":60912,"byte_end":60921,"line_start":22,"line_end":22,"column_start":10,"column_end":19},"name":"OnceState","qualname":"::once::OnceState","value":"pub enum OnceState {\n\n    /// A closure has not been executed yet\n    New,\n\n    /// A closure was executed but panicked.\n    Poisoned,\n\n    /// A thread is currently executing a closure.\n    InProgress,\n\n    /// A closure has completed successfully.\n    Done,\n}","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":453}],"decl_id":null,"docs":" Current state of a `Once`.\n","sig":null,"attributes":[{"value":"/ Current state of a `Once`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":60827,"byte_end":60857,"line_start":20,"line_end":20,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":61440,"byte_end":61448,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"name":"poisoned","qualname":"<OnceState>::poisoned","value":"pub fn poisoned(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the associated `Once` has been poisoned.","sig":null,"attributes":[{"value":"/ Returns whether the associated `Once` has been poisoned.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":61186,"byte_end":61246,"line_start":37,"line_end":37,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":61251,"byte_end":61254,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Once an initialization routine for a `Once` has panicked it will forever","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":61259,"byte_end":61335,"line_start":39,"line_end":39,"column_start":5,"column_end":81}},{"value":"/ indicate to future forced initialization routines that it is poisoned.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":61340,"byte_end":61414,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":61419,"byte_end":61428,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":61684,"byte_end":61688,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"done","qualname":"<OnceState>::done","value":"pub fn done(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the associated `Once` has successfully executed a\n closure.\n","sig":null,"attributes":[{"value":"/ Returns whether the associated `Once` has successfully executed a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":61572,"byte_end":61641,"line_start":49,"line_end":49,"column_start":5,"column_end":74}},{"value":"/ closure.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":61646,"byte_end":61658,"line_start":50,"line_end":50,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":61663,"byte_end":61672,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":113},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62509,"byte_end":62513,"line_start":83,"line_end":83,"column_start":12,"column_end":16},"name":"Once","qualname":"::once::Once","value":"","parent":null,"children":[],"decl_id":null,"docs":" A synchronization primitive which can be used to run a one-time\n initialization. Useful for one-time initialization for globals, FFI or\n related functionality.","sig":null,"attributes":[{"value":"/ A synchronization primitive which can be used to run a one-time","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":61806,"byte_end":61873,"line_start":60,"line_end":60,"column_start":1,"column_end":68}},{"value":"/ initialization. Useful for one-time initialization for globals, FFI or","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":61874,"byte_end":61948,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/ related functionality.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":61949,"byte_end":61975,"line_start":62,"line_end":62,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":61976,"byte_end":61979,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ # Differences from the standard library `Once`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":61980,"byte_end":62030,"line_start":64,"line_end":64,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62031,"byte_end":62034,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ - Only requires 1 byte of space, instead of 1 word.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62035,"byte_end":62090,"line_start":66,"line_end":66,"column_start":1,"column_end":56}},{"value":"/ - Not required to be `'static`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62091,"byte_end":62126,"line_start":67,"line_end":67,"column_start":1,"column_end":36}},{"value":"/ - Relaxed memory barriers in the fast path, which can significantly improve","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62127,"byte_end":62206,"line_start":68,"line_end":68,"column_start":1,"column_end":80}},{"value":"/   performance on some architectures.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62207,"byte_end":62247,"line_start":69,"line_end":69,"column_start":1,"column_end":41}},{"value":"/ - Efficient handling of micro-contention using adaptive spinning.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62248,"byte_end":62317,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62318,"byte_end":62321,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62322,"byte_end":62336,"line_start":72,"line_end":72,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62337,"byte_end":62340,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62341,"byte_end":62348,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ use parking_lot::Once;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62349,"byte_end":62375,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62376,"byte_end":62379,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ static START: Once = Once::new();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62380,"byte_end":62417,"line_start":77,"line_end":77,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62418,"byte_end":62421,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ START.call_once(|| {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62422,"byte_end":62446,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/     // run initialization here","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62447,"byte_end":62481,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/ });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62482,"byte_end":62489,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62490,"byte_end":62497,"line_start":82,"line_end":82,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62605,"byte_end":62608,"line_start":88,"line_end":88,"column_start":18,"column_end":21},"name":"new","qualname":"<Once>::new","value":"pub const fn new() -> Once","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Once` value.\n","sig":null,"attributes":[{"value":"/ Creates a new `Once` value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62542,"byte_end":62573,"line_start":86,"line_end":86,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62578,"byte_end":62587,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62734,"byte_end":62739,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"state","qualname":"<Once>::state","value":"pub fn state(&Self) -> OnceState","parent":null,"children":[],"decl_id":null,"docs":" Returns the current state of this `Once`.\n","sig":null,"attributes":[{"value":"/ Returns the current state of this `Once`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62663,"byte_end":62708,"line_start":92,"line_end":92,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62713,"byte_end":62722,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":65012,"byte_end":65021,"line_start":157,"line_end":157,"column_start":12,"column_end":21},"name":"call_once","qualname":"<Once>::call_once","value":"pub fn call_once<F>(&Self, F) where F: FnOnce() -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs an initialization routine once and only once. The given closure\n will be executed if this is the first time `call_once` has been called,\n and otherwise the routine will *not* be invoked.","sig":null,"attributes":[{"value":"/ Performs an initialization routine once and only once. The given closure","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":63096,"byte_end":63172,"line_start":107,"line_end":107,"column_start":5,"column_end":81}},{"value":"/ will be executed if this is the first time `call_once` has been called,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":63177,"byte_end":63252,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"/ and otherwise the routine will *not* be invoked.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":63257,"byte_end":63309,"line_start":109,"line_end":109,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":63314,"byte_end":63317,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ This method will block the calling thread if another initialization","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":63322,"byte_end":63393,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ routine is currently running.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":63398,"byte_end":63431,"line_start":112,"line_end":112,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":63436,"byte_end":63439,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ When this function returns, it is guaranteed that some initialization","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":63444,"byte_end":63517,"line_start":114,"line_end":114,"column_start":5,"column_end":78}},{"value":"/ has run and completed (it may not be the closure specified). It is also","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":63522,"byte_end":63597,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/ guaranteed that any memory writes performed by the executed closure can","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":63602,"byte_end":63677,"line_start":116,"line_end":116,"column_start":5,"column_end":80}},{"value":"/ be reliably observed by other threads at this point (there is a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":63682,"byte_end":63749,"line_start":117,"line_end":117,"column_start":5,"column_end":72}},{"value":"/ happens-before relation between the closure and code executing after the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":63754,"byte_end":63830,"line_start":118,"line_end":118,"column_start":5,"column_end":81}},{"value":"/ return).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":63835,"byte_end":63847,"line_start":119,"line_end":119,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":63852,"byte_end":63855,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":63860,"byte_end":63874,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":63879,"byte_end":63882,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":63887,"byte_end":63894,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use parking_lot::Once;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":63899,"byte_end":63925,"line_start":124,"line_end":124,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":63930,"byte_end":63933,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ static mut VAL: usize = 0;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":63938,"byte_end":63968,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ static INIT: Once = Once::new();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":63973,"byte_end":64009,"line_start":127,"line_end":127,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64014,"byte_end":64017,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ // Accessing a `static mut` is unsafe much of the time, but if we do so","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64022,"byte_end":64097,"line_start":129,"line_end":129,"column_start":5,"column_end":80}},{"value":"/ // in a synchronized fashion (e.g. write once or read all) then we're","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64102,"byte_end":64175,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ // good to go!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64180,"byte_end":64198,"line_start":131,"line_end":131,"column_start":5,"column_end":23}},{"value":"/ //","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64203,"byte_end":64209,"line_start":132,"line_end":132,"column_start":5,"column_end":11}},{"value":"/ // This function will only call `expensive_computation` once, and will","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64214,"byte_end":64288,"line_start":133,"line_end":133,"column_start":5,"column_end":79}},{"value":"/ // otherwise always return the value returned from the first invocation.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64293,"byte_end":64369,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/ fn get_cached_val() -> usize {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64374,"byte_end":64408,"line_start":135,"line_end":135,"column_start":5,"column_end":39}},{"value":"/     unsafe {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64413,"byte_end":64429,"line_start":136,"line_end":136,"column_start":5,"column_end":21}},{"value":"/         INIT.call_once(|| {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64434,"byte_end":64465,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/             VAL = expensive_computation();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64470,"byte_end":64516,"line_start":138,"line_end":138,"column_start":5,"column_end":51}},{"value":"/         });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64521,"byte_end":64536,"line_start":139,"line_end":139,"column_start":5,"column_end":20}},{"value":"/         VAL","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64541,"byte_end":64556,"line_start":140,"line_end":140,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64561,"byte_end":64570,"line_start":141,"line_end":141,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64575,"byte_end":64580,"line_start":142,"line_end":142,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64585,"byte_end":64588,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ fn expensive_computation() -> usize {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64593,"byte_end":64634,"line_start":144,"line_end":144,"column_start":5,"column_end":46}},{"value":"/     // ...","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64639,"byte_end":64653,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/ # 2","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64658,"byte_end":64665,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64670,"byte_end":64675,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64680,"byte_end":64687,"line_start":148,"line_end":148,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64692,"byte_end":64695,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64700,"byte_end":64712,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64717,"byte_end":64720,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ The closure `f` will only be executed once if this is called","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64725,"byte_end":64789,"line_start":152,"line_end":152,"column_start":5,"column_end":69}},{"value":"/ concurrently amongst many threads. If that closure panics, however, then","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64794,"byte_end":64870,"line_start":153,"line_end":153,"column_start":5,"column_end":81}},{"value":"/ it will *poison* this `Once` instance, causing all future invocations of","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64875,"byte_end":64951,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/ `call_once` to also panic.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64956,"byte_end":64986,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":64991,"byte_end":65000,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":65772,"byte_end":65787,"line_start":179,"line_end":179,"column_start":12,"column_end":27},"name":"call_once_force","qualname":"<Once>::call_once_force","value":"pub fn call_once_force<F>(&Self, F) where F: FnOnce(OnceState) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs the same function as `call_once` except ignores poisoning.","sig":null,"attributes":[{"value":"/ Performs the same function as `call_once` except ignores poisoning.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":65289,"byte_end":65360,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":65365,"byte_end":65368,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If this `Once` has been poisoned (some initialization panicked) then","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":65373,"byte_end":65445,"line_start":171,"line_end":171,"column_start":5,"column_end":77}},{"value":"/ this function will continue to attempt to call initialization functions","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":65450,"byte_end":65525,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ until one of them doesn't panic.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":65530,"byte_end":65566,"line_start":173,"line_end":173,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":65571,"byte_end":65574,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is yielded a structure which can be used to query the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":65579,"byte_end":65652,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ state of this `Once` (whether initialization has previously panicked or","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":65657,"byte_end":65732,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/ not).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":65737,"byte_end":65746,"line_start":177,"line_end":177,"column_start":5,"column_end":14}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":65751,"byte_end":65760,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":143},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_fair_mutex.rs","byte_start":74586,"byte_end":74598,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"RawFairMutex","qualname":"::raw_fair_mutex::RawFairMutex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw fair mutex type backed by the parking lot.\n","sig":null,"attributes":[{"value":"/ Raw fair mutex type backed by the parking lot.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_fair_mutex.rs","byte_start":74524,"byte_end":74574,"line_start":11,"line_end":11,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":183},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_mutex.rs","byte_start":77140,"byte_end":77148,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"RawMutex","qualname":"::raw_mutex::RawMutex","value":"RawMutex {  }","parent":null,"children":[{"krate":0,"index":184}],"decl_id":null,"docs":" Raw mutex type backed by the parking lot.\n","sig":null,"attributes":[{"value":"/ Raw mutex type backed by the parking lot.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_mutex.rs","byte_start":77083,"byte_end":77128,"line_start":31,"line_end":31,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":246},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_rwlock.rs","byte_start":90131,"byte_end":90140,"line_start":56,"line_end":56,"column_start":12,"column_end":21},"name":"RawRwLock","qualname":"::raw_rwlock::RawRwLock","value":"RawRwLock {  }","parent":null,"children":[{"krate":0,"index":247}],"decl_id":null,"docs":" Raw reader-writer lock type backed by the parking lot.\n","sig":null,"attributes":[{"value":"/ Raw reader-writer lock type backed by the parking lot.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_rwlock.rs","byte_start":90061,"byte_end":90119,"line_start":55,"line_end":55,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":343},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":126110,"byte_end":126121,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"RawThreadId","qualname":"::remutex::RawThreadId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Implementation of the `GetThreadId` trait for `lock_api::ReentrantMutex`.\n","sig":null,"attributes":[{"value":"/ Implementation of the `GetThreadId` trait for `lock_api::ReentrantMutex`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":126021,"byte_end":126098,"line_start":12,"line_end":12,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":349},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":127192,"byte_end":127206,"line_start":41,"line_end":41,"column_start":10,"column_end":24},"name":"ReentrantMutex","qualname":"::remutex::ReentrantMutex","value":"lock_api::ReentrantMutex<RawMutex, RawThreadId, T>","parent":null,"children":[],"decl_id":null,"docs":" A mutex which can be recursively locked by a single thread.","sig":null,"attributes":[{"value":"/ A mutex which can be recursively locked by a single thread.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":126721,"byte_end":126784,"line_start":30,"line_end":30,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":126785,"byte_end":126788,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This type is identical to `Mutex` except for the following points:","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":126789,"byte_end":126859,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":126860,"byte_end":126863,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ - Locking multiple times from the same thread will work correctly instead of","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":126864,"byte_end":126944,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/   deadlocking.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":126945,"byte_end":126963,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ - `ReentrantMutexGuard` does not give mutable references to the locked data.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":126964,"byte_end":127044,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/   Use a `RefCell` if you need this.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":127045,"byte_end":127084,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":127085,"byte_end":127088,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ See [`Mutex`](type.Mutex.html) for more details about the underlying mutex","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":127089,"byte_end":127167,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ primitive.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":127168,"byte_end":127182,"line_start":40,"line_end":40,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":351},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":127433,"byte_end":127454,"line_start":46,"line_end":46,"column_start":14,"column_end":35},"name":"const_reentrant_mutex","qualname":"::remutex::const_reentrant_mutex","value":"pub const fn const_reentrant_mutex<T>(T) -> ReentrantMutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reentrant mutex in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new reentrant mutex in an unlocked state ready for use.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":127265,"byte_end":127334,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":127335,"byte_end":127338,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This allows creating a reentrant mutex in a constant context on stable Rust.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":127339,"byte_end":127419,"line_start":45,"line_end":45,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":353},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":127916,"byte_end":127935,"line_start":59,"line_end":59,"column_start":10,"column_end":29},"name":"ReentrantMutexGuard","qualname":"::remutex::ReentrantMutexGuard","value":"lock_api::ReentrantMutexGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII implementation of a \"scoped lock\" of a reentrant mutex. When this structure\n is dropped (falls out of scope), the lock will be unlocked.","sig":null,"attributes":[{"value":"/ An RAII implementation of a \"scoped lock\" of a reentrant mutex. When this structure","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":127644,"byte_end":127731,"line_start":54,"line_end":54,"column_start":1,"column_end":88}},{"value":"/ is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":127732,"byte_end":127795,"line_start":55,"line_end":55,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":127796,"byte_end":127799,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The data protected by the mutex can be accessed through this guard via its","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":127800,"byte_end":127878,"line_start":57,"line_end":57,"column_start":1,"column_end":79}},{"value":"/ `Deref` implementation.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":127879,"byte_end":127906,"line_start":58,"line_end":58,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":356},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":128408,"byte_end":128433,"line_start":68,"line_end":68,"column_start":10,"column_end":35},"name":"MappedReentrantMutexGuard","qualname":"::remutex::MappedReentrantMutexGuard","value":"lock_api::MappedReentrantMutexGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII mutex guard returned by `ReentrantMutexGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"/ An RAII mutex guard returned by `ReentrantMutexGuard::map`, which can point to a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":128007,"byte_end":128091,"line_start":61,"line_end":61,"column_start":1,"column_end":85}},{"value":"/ subfield of the protected data.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":128092,"byte_end":128127,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":128128,"byte_end":128131,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The main difference between `MappedReentrantMutexGuard` and `ReentrantMutexGuard` is that the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":128132,"byte_end":128229,"line_start":64,"line_end":64,"column_start":1,"column_end":98}},{"value":"/ former doesn't support temporarily unlocking and re-locking, since that","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":128230,"byte_end":128305,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/ could introduce soundness issues if the locked object is modified by another","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":128306,"byte_end":128386,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ thread.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":128387,"byte_end":128398,"line_start":67,"line_end":67,"column_start":1,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":362},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134490,"byte_end":134496,"line_start":89,"line_end":89,"column_start":10,"column_end":16},"name":"RwLock","qualname":"::rwlock::RwLock","value":"lock_api::RwLock<RawRwLock, T>","parent":null,"children":[],"decl_id":null,"docs":" A reader-writer lock","sig":null,"attributes":[{"value":"/ A reader-writer lock","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":130931,"byte_end":130955,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":130956,"byte_end":130959,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":130960,"byte_end":131037,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":131038,"byte_end":131117,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":131118,"byte_end":131197,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":131198,"byte_end":131256,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":131257,"byte_end":131260,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This lock uses a task-fair locking policy which avoids both reader and","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":131261,"byte_end":131335,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ writer starvation. This means that readers trying to acquire the lock will","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":131336,"byte_end":131414,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ block even if the lock is unlocked when there are writers waiting to acquire","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":131415,"byte_end":131495,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ the lock. Because of this, attempts to recursively acquire a read lock","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":131496,"byte_end":131570,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ within a single thread may result in a deadlock.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":131571,"byte_end":131623,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":131624,"byte_end":131627,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":131628,"byte_end":131705,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies `Send` to be shared across threads and `Sync` to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":131706,"byte_end":131786,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ allow concurrent access through readers. The RAII guards returned from the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":131787,"byte_end":131865,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ locking methods implement `Deref` (and `DerefMut` for the `write` methods)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":131866,"byte_end":131944,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ to allow access to the contained of the lock.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":131945,"byte_end":131994,"line_start":28,"line_end":28,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":131995,"byte_end":131998,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":131999,"byte_end":132013,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":132014,"byte_end":132017,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ A typical unfair lock can often end up in a situation where a single thread","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":132018,"byte_end":132097,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ quickly acquires and releases the same lock in succession, which can starve","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":132098,"byte_end":132177,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ other threads waiting to acquire the rwlock. While this improves throughput","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":132178,"byte_end":132257,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ because it doesn't force a context switch when a thread tries to re-acquire","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":132258,"byte_end":132337,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ a rwlock it has just released, this can starve other threads.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":132338,"byte_end":132403,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":132404,"byte_end":132407,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This rwlock uses [eventual fairness](https://trac.webkit.org/changeset/203350)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":132408,"byte_end":132490,"line_start":38,"line_end":38,"column_start":1,"column_end":83}},{"value":"/ to ensure that the lock will be fair on average without sacrificing","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":132491,"byte_end":132562,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ throughput. This is done by forcing a fair unlock on average every 0.5ms,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":132563,"byte_end":132640,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ which will force the lock to go to the next thread waiting for the rwlock.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":132641,"byte_end":132719,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":132720,"byte_end":132723,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Additionally, any critical section longer than 1ms will always use a fair","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":132724,"byte_end":132801,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ unlock, which has a negligible impact on throughput considering the length","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":132802,"byte_end":132880,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ of the critical section.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":132881,"byte_end":132909,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":132910,"byte_end":132913,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ You can also force a fair unlock by calling `RwLockReadGuard::unlock_fair`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":132914,"byte_end":132992,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ or `RwLockWriteGuard::unlock_fair` when unlocking a mutex instead of simply","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":132993,"byte_end":133072,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ dropping the guard.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":133073,"byte_end":133096,"line_start":49,"line_end":49,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":133097,"byte_end":133100,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Differences from the standard library `RwLock`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":133101,"byte_end":133153,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":133154,"byte_end":133157,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ - Supports atomically downgrading a write lock into a read lock.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":133158,"byte_end":133226,"line_start":53,"line_end":53,"column_start":1,"column_end":69}},{"value":"/ - Task-fair locking policy instead of an unspecified platform default.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":133227,"byte_end":133301,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"/ - No poisoning, the lock is released normally on panic.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":133302,"byte_end":133361,"line_start":55,"line_end":55,"column_start":1,"column_end":60}},{"value":"/ - Only requires 1 word of space, whereas the standard library boxes the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":133362,"byte_end":133437,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/   `RwLock` due to platform limitations.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":133438,"byte_end":133481,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/ - Can be statically constructed (requires the `const_fn` nightly feature).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":133482,"byte_end":133560,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ - Does not require any drop glue when dropped.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":133561,"byte_end":133611,"line_start":59,"line_end":59,"column_start":1,"column_end":51}},{"value":"/ - Inline fast path for the uncontended case.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":133612,"byte_end":133660,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"/ - Efficient handling of micro-contention using adaptive spinning.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":133661,"byte_end":133730,"line_start":61,"line_end":61,"column_start":1,"column_end":70}},{"value":"/ - Allows raw locking & unlocking without a guard.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":133731,"byte_end":133784,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/ - Supports eventual fairness so that the rwlock is fair on average.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":133785,"byte_end":133856,"line_start":63,"line_end":63,"column_start":1,"column_end":72}},{"value":"/ - Optionally allows making the rwlock fair by calling","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":133857,"byte_end":133914,"line_start":64,"line_end":64,"column_start":1,"column_end":58}},{"value":"/   `RwLockReadGuard::unlock_fair` and `RwLockWriteGuard::unlock_fair`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":133915,"byte_end":133988,"line_start":65,"line_end":65,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":133989,"byte_end":133992,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":133993,"byte_end":134007,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134008,"byte_end":134011,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134012,"byte_end":134019,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ use parking_lot::RwLock;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134020,"byte_end":134048,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134049,"byte_end":134052,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134053,"byte_end":134083,"line_start":72,"line_end":72,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134084,"byte_end":134087,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ // many reader locks can be held at once","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134088,"byte_end":134132,"line_start":74,"line_end":74,"column_start":1,"column_end":45}},{"value":"/ {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134133,"byte_end":134138,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     let r1 = lock.read();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134139,"byte_end":134168,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/     let r2 = lock.read();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134169,"byte_end":134198,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"/     assert_eq!(*r1, 5);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134199,"byte_end":134226,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/     assert_eq!(*r2, 5);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134227,"byte_end":134254,"line_start":79,"line_end":79,"column_start":1,"column_end":28}},{"value":"/ } // read locks are dropped at this point","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134255,"byte_end":134300,"line_start":80,"line_end":80,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134301,"byte_end":134304,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ // only one write lock may be held, however","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134305,"byte_end":134352,"line_start":82,"line_end":82,"column_start":1,"column_end":48}},{"value":"/ {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134353,"byte_end":134358,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/     let mut w = lock.write();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134359,"byte_end":134392,"line_start":84,"line_end":84,"column_start":1,"column_end":34}},{"value":"/     *w += 1;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134393,"byte_end":134409,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"/     assert_eq!(*w, 6);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134410,"byte_end":134436,"line_start":86,"line_end":86,"column_start":1,"column_end":27}},{"value":"/ } // write lock is dropped here","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134437,"byte_end":134472,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134473,"byte_end":134480,"line_start":88,"line_end":88,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":364},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134693,"byte_end":134705,"line_start":94,"line_end":94,"column_start":14,"column_end":26},"name":"const_rwlock","qualname":"::rwlock::const_rwlock","value":"pub const fn const_rwlock<T>(T) -> RwLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134535,"byte_end":134598,"line_start":91,"line_end":91,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134599,"byte_end":134602,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ This allows creating a `RwLock<T>` in a constant context on stable Rust.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134603,"byte_end":134679,"line_start":93,"line_end":93,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":366},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134899,"byte_end":134914,"line_start":100,"line_end":100,"column_start":10,"column_end":25},"name":"RwLockReadGuard","qualname":"::rwlock::RwLockReadGuard","value":"lock_api::RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.\n","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134804,"byte_end":134876,"line_start":98,"line_end":98,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134877,"byte_end":134889,"line_start":99,"line_end":99,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":369},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":135069,"byte_end":135085,"line_start":104,"line_end":104,"column_start":10,"column_end":26},"name":"RwLockWriteGuard","qualname":"::rwlock::RwLockWriteGuard","value":"lock_api::RwLockWriteGuard","parent":null,"children":[],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.\n","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":134970,"byte_end":135046,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":135047,"byte_end":135059,"line_start":103,"line_end":103,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":372},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":135535,"byte_end":135556,"line_start":113,"line_end":113,"column_start":10,"column_end":31},"name":"MappedRwLockReadGuard","qualname":"::rwlock::MappedRwLockReadGuard","value":"lock_api::MappedRwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII read lock guard returned by `RwLockReadGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"/ An RAII read lock guard returned by `RwLockReadGuard::map`, which can point to a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":135142,"byte_end":135226,"line_start":106,"line_end":106,"column_start":1,"column_end":85}},{"value":"/ subfield of the protected data.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":135227,"byte_end":135262,"line_start":107,"line_end":107,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":135263,"byte_end":135266,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ The main difference between `MappedRwLockReadGuard` and `RwLockReadGuard` is that the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":135267,"byte_end":135356,"line_start":109,"line_end":109,"column_start":1,"column_end":90}},{"value":"/ former doesn't support temporarily unlocking and re-locking, since that","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":135357,"byte_end":135432,"line_start":110,"line_end":110,"column_start":1,"column_end":76}},{"value":"/ could introduce soundness issues if the locked object is modified by another","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":135433,"byte_end":135513,"line_start":111,"line_end":111,"column_start":1,"column_end":81}},{"value":"/ thread.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":135514,"byte_end":135525,"line_start":112,"line_end":112,"column_start":1,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":375},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":136015,"byte_end":136037,"line_start":122,"line_end":122,"column_start":10,"column_end":32},"name":"MappedRwLockWriteGuard","qualname":"::rwlock::MappedRwLockWriteGuard","value":"lock_api::MappedRwLockWriteGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII write lock guard returned by `RwLockWriteGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"/ An RAII write lock guard returned by `RwLockWriteGuard::map`, which can point to a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":135618,"byte_end":135704,"line_start":115,"line_end":115,"column_start":1,"column_end":87}},{"value":"/ subfield of the protected data.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":135705,"byte_end":135740,"line_start":116,"line_end":116,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":135741,"byte_end":135744,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ The main difference between `MappedRwLockWriteGuard` and `RwLockWriteGuard` is that the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":135745,"byte_end":135836,"line_start":118,"line_end":118,"column_start":1,"column_end":92}},{"value":"/ former doesn't support temporarily unlocking and re-locking, since that","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":135837,"byte_end":135912,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"/ could introduce soundness issues if the locked object is modified by another","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":135913,"byte_end":135993,"line_start":120,"line_end":120,"column_start":1,"column_end":81}},{"value":"/ thread.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":135994,"byte_end":136005,"line_start":121,"line_end":121,"column_start":1,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":378},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":136199,"byte_end":136224,"line_start":126,"line_end":126,"column_start":10,"column_end":35},"name":"RwLockUpgradableReadGuard","qualname":"::rwlock::RwLockUpgradableReadGuard","value":"lock_api::RwLockUpgradableReadGuard","parent":null,"children":[],"decl_id":null,"docs":" RAII structure used to release the upgradable read access of a lock when\n dropped.\n","sig":null,"attributes":[{"value":"/ RAII structure used to release the upgradable read access of a lock when","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":136100,"byte_end":136176,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/rwlock.rs","byte_start":136177,"byte_end":136189,"line_start":125,"line_end":125,"column_start":1,"column_end":13}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":2921,"byte_end":2938,"line_start":25,"line_end":25,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":5482,"byte_end":5489,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":17921,"byte_end":17928,"line_start":401,"line_end":401,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":18027,"byte_end":18034,"line_start":408,"line_end":408,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/elision.rs","byte_start":38515,"byte_end":38526,"line_start":37,"line_end":37,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":61170,"byte_end":61179,"line_start":36,"line_end":36,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62531,"byte_end":62535,"line_start":85,"line_end":85,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":69626,"byte_end":69636,"line_start":282,"line_end":282,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":70878,"byte_end":70882,"line_start":318,"line_end":318,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":70975,"byte_end":70979,"line_start":325,"line_end":325,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_fair_mutex.rs","byte_start":74646,"byte_end":74658,"line_start":14,"line_end":14,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_fair_mutex.rs","byte_start":75155,"byte_end":75167,"line_start":40,"line_end":40,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_fair_mutex.rs","byte_start":75368,"byte_end":75380,"line_start":52,"line_end":52,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_mutex.rs","byte_start":78971,"byte_end":78979,"line_start":58,"line_end":58,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_mutex.rs","byte_start":80566,"byte_end":80574,"line_start":119,"line_end":119,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_mutex.rs","byte_start":81104,"byte_end":81112,"line_start":141,"line_end":141,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_mutex.rs","byte_start":82103,"byte_end":82111,"line_start":180,"line_end":180,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":207},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_rwlock.rs","byte_start":90206,"byte_end":90215,"line_start":60,"line_end":60,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_rwlock.rs","byte_start":92470,"byte_end":92479,"line_start":149,"line_end":149,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_rwlock.rs","byte_start":93412,"byte_end":93421,"line_start":186,"line_end":186,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_rwlock.rs","byte_start":93789,"byte_end":93798,"line_start":200,"line_end":200,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_rwlock.rs","byte_start":95465,"byte_end":95474,"line_start":265,"line_end":265,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_rwlock.rs","byte_start":96072,"byte_end":96081,"line_start":289,"line_end":289,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_rwlock.rs","byte_start":96823,"byte_end":96832,"line_start":317,"line_end":317,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_rwlock.rs","byte_start":98735,"byte_end":98744,"line_start":392,"line_end":392,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_rwlock.rs","byte_start":99593,"byte_end":99602,"line_start":422,"line_end":422,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_rwlock.rs","byte_start":100305,"byte_end":100314,"line_start":447,"line_end":447,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_rwlock.rs","byte_start":101732,"byte_end":101741,"line_start":501,"line_end":501,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":325},{"krate":0,"index":330},{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":126152,"byte_end":126163,"line_start":15,"line_end":15,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/util.rs","byte_start":149797,"byte_end":149803,"line_start":16,"line_end":16,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":2921,"byte_end":2938,"line_start":25,"line_end":25,"column_start":6,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":5482,"byte_end":5489,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":29},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":17921,"byte_end":17928,"line_start":401,"line_end":401,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":29},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/condvar.rs","byte_start":18027,"byte_end":18034,"line_start":408,"line_end":408,"column_start":21,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":29},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/elision.rs","byte_start":38515,"byte_end":38526,"line_start":37,"line_end":37,"column_start":27,"column_end":38},"kind":{"Impl":{"id":4}},"from":{"krate":2,"index":30501},"to":{"krate":0,"index":57}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":61170,"byte_end":61179,"line_start":36,"line_end":36,"column_start":6,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":62531,"byte_end":62535,"line_start":85,"line_end":85,"column_start":6,"column_end":10},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":69626,"byte_end":69636,"line_start":282,"line_end":282,"column_start":27,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":129},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":70878,"byte_end":70882,"line_start":318,"line_end":318,"column_start":18,"column_end":22},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/once.rs","byte_start":70975,"byte_end":70979,"line_start":325,"line_end":325,"column_start":21,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_fair_mutex.rs","byte_start":74646,"byte_end":74658,"line_start":14,"line_end":14,"column_start":36,"column_end":48},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":143},"to":{"krate":17,"index":19}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_fair_mutex.rs","byte_start":75155,"byte_end":75167,"line_start":40,"line_end":40,"column_start":40,"column_end":52},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":143},"to":{"krate":17,"index":26}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_fair_mutex.rs","byte_start":75368,"byte_end":75380,"line_start":52,"line_end":52,"column_start":41,"column_end":53},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":143},"to":{"krate":17,"index":29}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_mutex.rs","byte_start":78971,"byte_end":78979,"line_start":58,"line_end":58,"column_start":36,"column_end":44},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":183},"to":{"krate":17,"index":19}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_mutex.rs","byte_start":80566,"byte_end":80574,"line_start":119,"line_end":119,"column_start":40,"column_end":48},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":183},"to":{"krate":17,"index":26}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_mutex.rs","byte_start":81104,"byte_end":81112,"line_start":141,"line_end":141,"column_start":41,"column_end":49},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":183},"to":{"krate":17,"index":29}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_mutex.rs","byte_start":82103,"byte_end":82111,"line_start":180,"line_end":180,"column_start":6,"column_end":14},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_rwlock.rs","byte_start":90206,"byte_end":90215,"line_start":60,"line_end":60,"column_start":37,"column_end":46},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":246},"to":{"krate":17,"index":458}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_rwlock.rs","byte_start":92470,"byte_end":92479,"line_start":149,"line_end":149,"column_start":41,"column_end":50},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":246},"to":{"krate":17,"index":468}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_rwlock.rs","byte_start":93412,"byte_end":93421,"line_start":186,"line_end":186,"column_start":46,"column_end":55},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":246},"to":{"krate":17,"index":473}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_rwlock.rs","byte_start":93789,"byte_end":93798,"line_start":200,"line_end":200,"column_start":42,"column_end":51},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":246},"to":{"krate":17,"index":475}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_rwlock.rs","byte_start":95465,"byte_end":95474,"line_start":265,"line_end":265,"column_start":46,"column_end":55},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":246},"to":{"krate":17,"index":482}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_rwlock.rs","byte_start":96072,"byte_end":96081,"line_start":289,"line_end":289,"column_start":51,"column_end":60},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":246},"to":{"krate":17,"index":485}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_rwlock.rs","byte_start":96823,"byte_end":96832,"line_start":317,"line_end":317,"column_start":44,"column_end":53},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":246},"to":{"krate":17,"index":488}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_rwlock.rs","byte_start":98735,"byte_end":98744,"line_start":392,"line_end":392,"column_start":48,"column_end":57},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":246},"to":{"krate":17,"index":494}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_rwlock.rs","byte_start":99593,"byte_end":99602,"line_start":422,"line_end":422,"column_start":53,"column_end":62},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":246},"to":{"krate":17,"index":497}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_rwlock.rs","byte_start":100305,"byte_end":100314,"line_start":447,"line_end":447,"column_start":49,"column_end":58},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":246},"to":{"krate":17,"index":500}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/raw_rwlock.rs","byte_start":101732,"byte_end":101741,"line_start":501,"line_end":501,"column_start":6,"column_end":15},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/remutex.rs","byte_start":126152,"byte_end":126163,"line_start":15,"line_end":15,"column_start":29,"column_end":40},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":343},"to":{"krate":17,"index":225}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.11.0/src/util.rs","byte_start":149797,"byte_end":149803,"line_start":16,"line_end":16,"column_start":35,"column_end":41},"kind":{"Impl":{"id":29}},"from":{"krate":2,"index":30003},"to":{"krate":0,"index":384}}]}