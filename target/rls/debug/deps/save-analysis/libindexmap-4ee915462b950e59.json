{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0","program":"/home/gorta/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","indexmap","--edition=2018","/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=4ee915462b950e59","-C","extra-filename=-4ee915462b950e59","--out-dir","/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps","-L","dependency=/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps","--extern","hashbrown=/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps/libhashbrown-82dea23515ed171e.rmeta","--cap-lints","allow","--cfg","has_std","--error-format=json","--sysroot","/home/gorta/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps/libindexmap-4ee915462b950e59.rmeta"},"prelude":{"crate_id":{"name":"indexmap","disambiguator":[16873695603589262577,4429159716793185802]},"crate_root":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src","external_crates":[{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16851962707842592855,4932765248485690217]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3049591816127030880,10952373373500329976]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[11587085401131637304,2097967498245787009]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[18437716656233032650,2349106724991734091]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[697141649018154369,16548652339936893370]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[15777040323210795675,4562741973928336648]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15931681355194650171,7679759071890480571]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16378405889910241769,9643272937548158260]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[8261542656080474758,5147161130074218296]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[1712641478249352838,12464696676097716113]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[3715598662871405823,1939556143240013170]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4641845549064414815,7418938888650694907]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18127448783747998133,9149995038350923488]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[8742225116956546677,8424782546207546390]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","num":15,"id":{"name":"hashbrown","disambiguator":[290093036872313680,9281886640367886935]}}],"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":92,"byte_end":5492,"line_start":2,"line_end":191,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":30},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":12883,"byte_end":12894,"line_start":6,"line_end":6,"column_start":30,"column_end":41},"alias_span":null,"name":"MutableKeys","value":"","parent":{"krate":0,"index":63}},{"kind":"Use","ref_id":{"krate":0,"index":191},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":13441,"byte_end":13446,"line_start":27,"line_end":27,"column_start":22,"column_end":27},"alias_span":null,"name":"Entry","value":"","parent":{"krate":0,"index":63}},{"kind":"Use","ref_id":{"krate":0,"index":106},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":13448,"byte_end":13461,"line_start":27,"line_end":27,"column_start":29,"column_end":42},"alias_span":null,"name":"OccupiedEntry","value":"","parent":{"krate":0,"index":63}},{"kind":"Use","ref_id":{"krate":0,"index":230},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":13463,"byte_end":13474,"line_start":27,"line_end":27,"column_start":44,"column_end":55},"alias_span":null,"name":"VacantEntry","value":"","parent":{"krate":0,"index":63}},{"kind":"Use","ref_id":{"krate":0,"index":15},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":3690,"byte_end":3700,"line_start":110,"line_end":110,"column_start":28,"column_end":38},"alias_span":null,"name":"Equivalent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":279},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":3722,"byte_end":3730,"line_start":111,"line_end":111,"column_start":21,"column_end":29},"alias_span":null,"name":"IndexMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":656},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":3752,"byte_end":3760,"line_start":112,"line_end":112,"column_start":21,"column_end":29},"alias_span":null,"name":"IndexSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":92,"byte_end":5492,"line_start":2,"line_end":191,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":13},{"krate":0,"index":22},{"krate":0,"index":49},{"krate":0,"index":63},{"krate":0,"index":629},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1106},{"krate":0,"index":1116},{"krate":0,"index":1115},{"krate":0,"index":1113},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1009},{"krate":0,"index":1118},{"krate":0,"index":1128},{"krate":0,"index":1124},{"krate":0,"index":1011},{"krate":0,"index":1016},{"krate":0,"index":1027}],"decl_id":null,"docs":" [`IndexMap`] is a hash table where the iteration order of the key-value\n pairs is independent of the hash values of the keys.","sig":null,"attributes":[{"value":"deny(unsafe_code)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":92,"byte_end":113,"line_start":2,"line_end":2,"column_start":1,"column_end":22}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":114,"byte_end":140,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"no_std","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":196,"byte_end":206,"line_start":5,"line_end":5,"column_start":1,"column_end":11}},{"value":"! [`IndexMap`] is a hash table where the iteration order of the key-value","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":208,"byte_end":283,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"! pairs is independent of the hash values of the keys.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":284,"byte_end":340,"line_start":8,"line_end":8,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":341,"byte_end":344,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! [`IndexSet`] is a corresponding hash set using the same implementation and","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":345,"byte_end":423,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"! with similar properties.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":424,"byte_end":452,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":453,"byte_end":456,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! [`IndexMap`]: map/struct.IndexMap.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":457,"byte_end":499,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"! [`IndexSet`]: set/struct.IndexSet.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":500,"byte_end":542,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":543,"byte_end":546,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":547,"byte_end":550,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! ### Feature Highlights","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":551,"byte_end":577,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":578,"byte_end":581,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! [`IndexMap`] and [`IndexSet`] are drop-in compatible with the std `HashMap`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":582,"byte_end":661,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"! and `HashSet`, but they also have some features of note:","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":662,"byte_end":722,"line_start":20,"line_end":20,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":723,"byte_end":726,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! - The ordering semantics (see their documentation for details)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":727,"byte_end":793,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"! - Sorting methods and the [`.pop()`][IndexMap::pop] methods.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":794,"byte_end":858,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"! - The [`Equivalent`] trait, which offers more flexible equality definitions","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":859,"byte_end":938,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"!   between borrowed and owned versions of keys.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":939,"byte_end":989,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"! - The [`MutableKeys`][map::MutableKeys] trait, which gives opt-in mutable","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":990,"byte_end":1067,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"!   access to hash map keys.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1068,"byte_end":1098,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1099,"byte_end":1102,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! ### Alternate Hashers","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1103,"byte_end":1128,"line_start":29,"line_end":29,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1129,"byte_end":1132,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! [`IndexMap`] and [`IndexSet`] have a default hasher type `S = RandomState`,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1133,"byte_end":1212,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"! just like the standard `HashMap` and `HashSet`, which is resistant to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1213,"byte_end":1286,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"! HashDoS attacks but not the most performant. Type aliases can make it easier","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1287,"byte_end":1367,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"! to use alternate hashers:","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1368,"byte_end":1397,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1398,"byte_end":1401,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1402,"byte_end":1409,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"! use fnv::FnvBuildHasher;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1410,"byte_end":1438,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"! use fxhash::FxBuildHasher;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1439,"byte_end":1469,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"! use indexmap::{IndexMap, IndexSet};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1470,"byte_end":1509,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1510,"byte_end":1513,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! type FnvIndexMap<K, V> = IndexMap<K, V, FnvBuildHasher>;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1514,"byte_end":1574,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"! type FnvIndexSet<T> = IndexSet<T, FnvBuildHasher>;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1575,"byte_end":1629,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1630,"byte_end":1633,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! type FxIndexMap<K, V> = IndexMap<K, V, FxBuildHasher>;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1634,"byte_end":1692,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"! type FxIndexSet<T> = IndexSet<T, FxBuildHasher>;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1693,"byte_end":1745,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1746,"byte_end":1749,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! let std: IndexSet<i32> = (0..100).collect();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1750,"byte_end":1798,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"! let fnv: FnvIndexSet<i32> = (0..100).collect();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1799,"byte_end":1850,"line_start":48,"line_end":48,"column_start":1,"column_end":52}},{"value":"! let fx: FxIndexSet<i32> = (0..100).collect();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1851,"byte_end":1900,"line_start":49,"line_end":49,"column_start":1,"column_end":50}},{"value":"! assert_eq!(std, fnv);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1901,"byte_end":1926,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"! assert_eq!(std, fx);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1927,"byte_end":1951,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"! ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1952,"byte_end":1959,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! ### Rust Version","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1964,"byte_end":1984,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1985,"byte_end":1988,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! This version of indexmap requires Rust 1.32 or later, or Rust 1.36+ for","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":1989,"byte_end":2064,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"! using with `alloc` (without `std`), see below.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":2065,"byte_end":2115,"line_start":57,"line_end":57,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":2116,"byte_end":2119,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! The indexmap 1.x release series will use a carefully considered version","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":2120,"byte_end":2195,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"! upgrade policy, where in a later 1.x version, we will raise the minimum","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":2196,"byte_end":2271,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"! required Rust version.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":2272,"byte_end":2298,"line_start":61,"line_end":61,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":2299,"byte_end":2302,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! ## No Standard Library Targets","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":2303,"byte_end":2337,"line_start":63,"line_end":63,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":2338,"byte_end":2341,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! From Rust 1.36, this crate supports being built without `std`, requiring","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":2342,"byte_end":2418,"line_start":65,"line_end":65,"column_start":1,"column_end":77}},{"value":"! `alloc` instead. This is enabled automatically when it is detected that","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":2419,"byte_end":2494,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"! `std` is not available. There is no crate feature to enable/disable to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":2495,"byte_end":2569,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"! trigger this. It can be tested by building for a std-less target.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":2570,"byte_end":2639,"line_start":68,"line_end":68,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":2640,"byte_end":2643,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! - Creating maps and sets using [`new`][IndexMap::new] and","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":2644,"byte_end":2705,"line_start":70,"line_end":70,"column_start":1,"column_end":62}},{"value":"! [`with_capacity`][IndexMap::with_capacity] is unavailable without `std`.  ","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":2706,"byte_end":2784,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"!   Use methods [`IndexMap::default`][def],","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":2785,"byte_end":2830,"line_start":72,"line_end":72,"column_start":1,"column_end":46}},{"value":"!   [`with_hasher`][IndexMap::with_hasher],","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":2831,"byte_end":2876,"line_start":73,"line_end":73,"column_start":1,"column_end":46}},{"value":"!   [`with_capacity_and_hasher`][IndexMap::with_capacity_and_hasher] instead.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":2877,"byte_end":2956,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"!   A no-std compatible hasher will be needed as well, for example","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":2957,"byte_end":3025,"line_start":75,"line_end":75,"column_start":1,"column_end":69}},{"value":"!   from the crate `twox-hash`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":3026,"byte_end":3059,"line_start":76,"line_end":76,"column_start":1,"column_end":34}},{"value":"! - Macros [`indexmap!`] and [`indexset!`] are unavailable without `std`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":3060,"byte_end":3135,"line_start":77,"line_end":77,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":3136,"byte_end":3139,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! [def]: map/struct.IndexMap.html#impl-Default","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":3140,"byte_end":3188,"line_start":79,"line_end":79,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":15},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/equivalent.rs","byte_start":9123,"byte_end":9133,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"name":"Equivalent","qualname":"::equivalent::Equivalent","value":"Equivalent<K: ?Sized>","parent":null,"children":[{"krate":0,"index":17}],"decl_id":null,"docs":" Key equivalence trait.","sig":null,"attributes":[{"value":"/ Key equivalence trait.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/equivalent.rs","byte_start":8733,"byte_end":8759,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/equivalent.rs","byte_start":8760,"byte_end":8763,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This trait allows hash table lookup to be customized.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/equivalent.rs","byte_start":8764,"byte_end":8821,"line_start":5,"line_end":5,"column_start":1,"column_end":58}},{"value":"/ It has one blanket implementation that uses the regular `Borrow` solution,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/equivalent.rs","byte_start":8822,"byte_end":8900,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ just like `HashMap` and `BTreeMap` do, so that you can pass `&str` to lookup","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/equivalent.rs","byte_start":8901,"byte_end":8981,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ into a map with `String` keys and so on.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/equivalent.rs","byte_start":8982,"byte_end":9026,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/equivalent.rs","byte_start":9027,"byte_end":9030,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Contract","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/equivalent.rs","byte_start":9031,"byte_end":9045,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/equivalent.rs","byte_start":9046,"byte_end":9049,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The implementor **must** hash like `K`, if it is hashable.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/equivalent.rs","byte_start":9050,"byte_end":9112,"line_start":12,"line_end":12,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/equivalent.rs","byte_start":9221,"byte_end":9231,"line_start":15,"line_end":15,"column_start":8,"column_end":18},"name":"equivalent","qualname":"::equivalent::Equivalent::equivalent","value":"pub fn equivalent(&Self, &K) -> bool","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Compare self to `key` and return `true` if they are equal.\n","sig":null,"attributes":[{"value":"/ Compare self to `key` and return `true` if they are equal.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/equivalent.rs","byte_start":9151,"byte_end":9213,"line_start":14,"line_end":14,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":29},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":9527,"byte_end":9540,"line_start":5,"line_end":5,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::mutable_keys::PrivateMarker","value":"PrivateMarker {  }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":30},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":10088,"byte_end":10099,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"name":"MutableKeys","qualname":"::mutable_keys::MutableKeys","value":"MutableKeys","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":37}],"decl_id":null,"docs":" Opt-in mutable access to keys.","sig":null,"attributes":[{"value":"/ Opt-in mutable access to keys.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":9545,"byte_end":9579,"line_start":7,"line_end":7,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":9580,"byte_end":9583,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ These methods expose `&mut K`, mutable references to the key as it is stored","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":9584,"byte_end":9664,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ in the map.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":9665,"byte_end":9680,"line_start":10,"line_end":10,"column_start":1,"column_end":16}},{"value":"/ You are allowed to modify the keys in the hashmap **if the modifcation","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":9681,"byte_end":9755,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ does not change the key’s hash and equality**.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":9756,"byte_end":9808,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":9809,"byte_end":9812,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If keys are modified erronously, you can no longer look them up.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":9813,"byte_end":9881,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ This is sound (memory safe) but a logical error hazard (just like","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":9882,"byte_end":9951,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/ implementing PartialEq, Eq, or Hash incorrectly would be).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":9952,"byte_end":10014,"line_start":16,"line_end":16,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":10015,"byte_end":10018,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `use` this trait to enable its methods for `IndexMap`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":10019,"byte_end":10077,"line_start":18,"line_end":18,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":31},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":10111,"byte_end":10114,"line_start":20,"line_end":20,"column_start":10,"column_end":13},"name":"Key","qualname":"::mutable_keys::MutableKeys::Key","value":"type Key;","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":32},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":10125,"byte_end":10130,"line_start":21,"line_end":21,"column_start":10,"column_end":15},"name":"Value","qualname":"::mutable_keys::MutableKeys::Value","value":"type Value;","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":10202,"byte_end":10215,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"get_full_mut2","qualname":"::mutable_keys::MutableKeys::get_full_mut2","value":"pub fn get_full_mut2<Q: ?Sized>(&mut Self, &Q)\n-> Option<(usize, &mut Self::Key, &mut Self::Value)> where Q: Hash +\nEquivalent<Self::Key>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Return item index, mutable reference to key and value\n","sig":null,"attributes":[{"value":"/ Return item index, mutable reference to key and value","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":10137,"byte_end":10194,"line_start":23,"line_end":23,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":10651,"byte_end":10658,"line_start":38,"line_end":38,"column_start":8,"column_end":15},"name":"retain2","qualname":"::mutable_keys::MutableKeys::retain2","value":"pub fn retain2<F>(&mut Self, F) where\nF: FnMut(&mut Self::Key, &mut Self::Value) -> bool","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each key-value pair in the map and keep those where the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":10379,"byte_end":10451,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":10456,"byte_end":10490,"line_start":32,"line_end":32,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":10495,"byte_end":10498,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":10503,"byte_end":10575,"line_start":34,"line_end":34,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":10580,"byte_end":10590,"line_start":35,"line_end":35,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":10595,"byte_end":10598,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":10603,"byte_end":10643,"line_start":37,"line_end":37,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":10950,"byte_end":10966,"line_start":45,"line_end":45,"column_start":8,"column_end":24},"name":"__private_marker","qualname":"::mutable_keys::MutableKeys::__private_marker","value":"pub fn __private_marker(&Self) -> PrivateMarker","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" This method is not useful in itself – it is there to “seal” the trait\n for external implementation, so that we can add methods without\n causing breaking changes.\n","sig":null,"attributes":[{"value":"/ This method is not useful in itself – it is there to “seal” the trait","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":10757,"byte_end":10836,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ for external implementation, so that we can add methods without","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":10841,"byte_end":10908,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ causing breaking changes.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":10913,"byte_end":10942,"line_start":44,"line_end":44,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":63},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"map","qualname":"::map","value":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":1211},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":1239},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":285},{"krate":0,"index":291},{"krate":0,"index":301},{"krate":0,"index":306},{"krate":0,"index":311},{"krate":0,"index":329},{"krate":0,"index":389},{"krate":0,"index":397},{"krate":0,"index":402},{"krate":0,"index":407},{"krate":0,"index":411},{"krate":0,"index":415},{"krate":0,"index":419},{"krate":0,"index":423},{"krate":0,"index":428},{"krate":0,"index":433},{"krate":0,"index":437},{"krate":0,"index":441},{"krate":0,"index":445},{"krate":0,"index":449},{"krate":0,"index":454},{"krate":0,"index":459},{"krate":0,"index":463},{"krate":0,"index":467},{"krate":0,"index":472},{"krate":0,"index":477},{"krate":0,"index":481},{"krate":0,"index":485},{"krate":0,"index":489},{"krate":0,"index":493},{"krate":0,"index":498},{"krate":0,"index":503},{"krate":0,"index":507},{"krate":0,"index":511},{"krate":0,"index":515},{"krate":0,"index":519},{"krate":0,"index":523},{"krate":0,"index":527},{"krate":0,"index":531},{"krate":0,"index":536},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":551},{"krate":0,"index":559},{"krate":0,"index":566},{"krate":0,"index":573},{"krate":0,"index":579},{"krate":0,"index":585},{"krate":0,"index":590},{"krate":0,"index":596},{"krate":0,"index":603},{"krate":0,"index":611},{"krate":0,"index":616},{"krate":0,"index":625}],"decl_id":null,"docs":" `IndexMap` is a hash table where the iteration order of the key-value\n pairs is independent of the hash values of the keys.\n","sig":null,"attributes":[{"value":"! `IndexMap` is a hash table where the iteration order of the key-value","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":12711,"byte_end":12784,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"! pairs is independent of the hash values of the keys.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":12785,"byte_end":12841,"line_start":2,"line_end":2,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":106},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":81860,"byte_end":81873,"line_start":261,"line_end":261,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::core::raw::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112}],"decl_id":null,"docs":" A view into an occupied entry in a `IndexMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `IndexMap`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":81588,"byte_end":81638,"line_start":255,"line_end":255,"column_start":1,"column_end":51}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":81639,"byte_end":81676,"line_start":256,"line_end":256,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":81677,"byte_end":81680,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":81681,"byte_end":81711,"line_start":258,"line_end":258,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":82281,"byte_end":82284,"line_start":273,"line_end":273,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":82336,"byte_end":82339,"line_start":277,"line_end":277,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":82419,"byte_end":82426,"line_start":281,"line_end":281,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":82838,"byte_end":82843,"line_start":295,"line_end":295,"column_start":12,"column_end":17},"name":"index","qualname":"<OccupiedEntry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the key-value pair\n","sig":null,"attributes":[{"value":"/ Return the index of the key-value pair","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":82770,"byte_end":82812,"line_start":293,"line_end":293,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":82817,"byte_end":82826,"line_start":294,"line_end":294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":82922,"byte_end":82930,"line_start":299,"line_end":299,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":83391,"byte_end":83408,"line_start":311,"line_end":311,"column_start":12,"column_end":29},"name":"swap_remove_entry","qualname":"<OccupiedEntry>::swap_remove_entry","value":"pub fn swap_remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":83040,"byte_end":83114,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":83119,"byte_end":83122,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":83127,"byte_end":83199,"line_start":306,"line_end":306,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":83204,"byte_end":83267,"line_start":307,"line_end":307,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":83272,"byte_end":83326,"line_start":308,"line_end":308,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":83331,"byte_end":83334,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":83339,"byte_end":83379,"line_start":310,"line_end":310,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":84066,"byte_end":84084,"line_start":327,"line_end":327,"column_start":12,"column_end":30},"name":"shift_remove_entry","qualname":"<OccupiedEntry>::shift_remove_entry","value":"pub fn shift_remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":83720,"byte_end":83794,"line_start":320,"line_end":320,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":83799,"byte_end":83802,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":83807,"byte_end":83873,"line_start":322,"line_end":322,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":83878,"byte_end":83939,"line_start":323,"line_end":323,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":83944,"byte_end":84001,"line_start":324,"line_end":324,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":84006,"byte_end":84009,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":84014,"byte_end":84054,"line_start":326,"line_end":326,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":195},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":66647,"byte_end":66655,"line_start":234,"line_end":234,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::core::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Existing slot with equivalent key.\n","sig":null,"attributes":[{"value":"/ Existing slot with equivalent key.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":66604,"byte_end":66642,"line_start":233,"line_end":233,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":198},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":66738,"byte_end":66744,"line_start":236,"line_end":236,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::core::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":191},"children":[],"decl_id":null,"docs":" Vacant slot (no equivalent key in the map).\n","sig":null,"attributes":[{"value":"/ Vacant slot (no equivalent key in the map).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":66686,"byte_end":66733,"line_start":235,"line_end":235,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":191},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":66582,"byte_end":66587,"line_start":232,"line_end":232,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::core::Entry","value":"pub enum Entry<'a, K, V> {\n\n    /// Existing slot with equivalent key.\n    Occupied(OccupiedEntry),\n\n    /// Vacant slot (no equivalent key in the map).\n    Vacant(VacantEntry),\n}","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":198}],"decl_id":null,"docs":" Entry for an existing key-value pair or a vacant location to\n insert one.\n","sig":null,"attributes":[{"value":"/ Entry for an existing key-value pair or a vacant location to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":66492,"byte_end":66556,"line_start":230,"line_end":230,"column_start":1,"column_end":65}},{"value":"/ insert one.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":66557,"byte_end":66572,"line_start":231,"line_end":231,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":66871,"byte_end":66880,"line_start":241,"line_end":241,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time (amortized average).\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":66809,"byte_end":66859,"line_start":240,"line_end":240,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":67133,"byte_end":67147,"line_start":249,"line_end":249,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> &'a mut V where F: FnOnce() -> V","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time (amortized average).\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":67071,"byte_end":67121,"line_start":248,"line_end":248,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":67384,"byte_end":67387,"line_start":259,"line_end":259,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":67639,"byte_end":67644,"line_start":267,"line_end":267,"column_start":12,"column_end":17},"name":"index","qualname":"<Entry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair exists or will be inserted.\n","sig":null,"attributes":[{"value":"/ Return the index where the key-value pair exists or will be inserted.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":67554,"byte_end":67627,"line_start":266,"line_end":266,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":67871,"byte_end":67881,"line_start":275,"line_end":275,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Modifies the entry if it is occupied.\n","sig":null,"attributes":[{"value":"/ Modifies the entry if it is occupied.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":67818,"byte_end":67859,"line_start":274,"line_end":274,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":68393,"byte_end":68403,"line_start":292,"line_end":292,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"pub fn or_default(Self) -> &'a mut V where V: Default","parent":null,"children":[],"decl_id":null,"docs":" Inserts a default-constructed value in the entry if it is vacant and returns a mutable\n reference to it. Otherwise a mutable reference to an already existent value is returned.","sig":null,"attributes":[{"value":"/ Inserts a default-constructed value in the entry if it is vacant and returns a mutable","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":68131,"byte_end":68221,"line_start":288,"line_end":288,"column_start":5,"column_end":95}},{"value":"/ reference to it. Otherwise a mutable reference to an already existent value is returned.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":68226,"byte_end":68318,"line_start":289,"line_end":289,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":68323,"byte_end":68326,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":68331,"byte_end":68381,"line_start":291,"line_end":291,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":69198,"byte_end":69204,"line_start":317,"line_end":317,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry to `value`, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry to `value`, and returns the entry's old value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":69108,"byte_end":69186,"line_start":316,"line_end":316,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":69447,"byte_end":69453,"line_start":324,"line_end":324,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":69283,"byte_end":69369,"line_start":321,"line_end":321,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":69374,"byte_end":69377,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove()`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":69382,"byte_end":69435,"line_start":323,"line_end":323,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":69868,"byte_end":69879,"line_start":335,"line_end":335,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<OccupiedEntry>::swap_remove","value":"pub fn swap_remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":69505,"byte_end":69591,"line_start":328,"line_end":328,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":69596,"byte_end":69599,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":69604,"byte_end":69676,"line_start":330,"line_end":330,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":69681,"byte_end":69744,"line_start":331,"line_end":331,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":69749,"byte_end":69803,"line_start":332,"line_end":332,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":69808,"byte_end":69811,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":69816,"byte_end":69856,"line_start":334,"line_end":334,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":70297,"byte_end":70309,"line_start":346,"line_end":346,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<OccupiedEntry>::shift_remove","value":"pub fn shift_remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":69939,"byte_end":70025,"line_start":339,"line_end":339,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":70030,"byte_end":70033,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":70038,"byte_end":70104,"line_start":341,"line_end":341,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":70109,"byte_end":70170,"line_start":342,"line_end":342,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":70175,"byte_end":70232,"line_start":343,"line_end":343,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":70237,"byte_end":70240,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":70245,"byte_end":70285,"line_start":345,"line_end":345,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":70528,"byte_end":70540,"line_start":353,"line_end":353,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":70370,"byte_end":70444,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":70449,"byte_end":70452,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove_entry()`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":70457,"byte_end":70516,"line_start":352,"line_end":352,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":230},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":71031,"byte_end":71042,"line_start":371,"line_end":371,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::core::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"decl_id":null,"docs":" A view into a vacant entry in a `IndexMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `IndexMap`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":70899,"byte_end":70946,"line_start":367,"line_end":367,"column_start":1,"column_end":48}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":70947,"byte_end":70984,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":70985,"byte_end":70988,"line_start":369,"line_end":369,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":70989,"byte_end":71019,"line_start":370,"line_end":370,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":71178,"byte_end":71181,"line_start":378,"line_end":378,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":71233,"byte_end":71241,"line_start":382,"line_end":382,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":71358,"byte_end":71363,"line_start":387,"line_end":387,"column_start":12,"column_end":17},"name":"index","qualname":"<VacantEntry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair will be inserted.\n","sig":null,"attributes":[{"value":"/ Return the index where the key-value pair will be inserted.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":71283,"byte_end":71346,"line_start":386,"line_end":386,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":71423,"byte_end":71429,"line_start":391,"line_end":391,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":279},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14914,"byte_end":14922,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"IndexMap","qualname":"::map::IndexMap","value":"IndexMap {  }","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284}],"decl_id":null,"docs":" A hash table where the iteration order of the key-value pairs is independent\n of the hash values of the keys.","sig":null,"attributes":[{"value":"/ A hash table where the iteration order of the key-value pairs is independent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":13478,"byte_end":13558,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ of the hash values of the keys.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":13559,"byte_end":13594,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":13595,"byte_end":13598,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The interface is closely compatible with the standard `HashMap`, but also","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":13599,"byte_end":13676,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ has additional features.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":13677,"byte_end":13705,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":13706,"byte_end":13709,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Order","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":13710,"byte_end":13721,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":13722,"byte_end":13725,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ The key-value pairs have a consistent order that is determined by","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":13726,"byte_end":13795,"line_start":37,"line_end":37,"column_start":1,"column_end":70}},{"value":"/ the sequence of insertion and removal calls on the map. The order does","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":13796,"byte_end":13870,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/ not depend on the keys or the hash function at all.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":13871,"byte_end":13926,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":13927,"byte_end":13930,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ All iterators traverse the map in *the order*.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":13931,"byte_end":13981,"line_start":41,"line_end":41,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":13982,"byte_end":13985,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The insertion order is preserved, with **notable exceptions** like the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":13986,"byte_end":14060,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ `.remove()` or `.swap_remove()` methods. Methods such as `.sort_by()` of","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14061,"byte_end":14137,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ course result in a new order, depending on the sorting order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14138,"byte_end":14203,"line_start":45,"line_end":45,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14204,"byte_end":14207,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Indices","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14208,"byte_end":14221,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14222,"byte_end":14225,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The key-value pairs are indexed in a compact range without holes in the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14226,"byte_end":14301,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ range `0..self.len()`. For example, the method `.get_full` looks up the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14302,"byte_end":14377,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/ index for a key, and the method `.get_index` looks up the key-value pair by","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14378,"byte_end":14457,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ index.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14458,"byte_end":14468,"line_start":52,"line_end":52,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14469,"byte_end":14472,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14473,"byte_end":14487,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14488,"byte_end":14491,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14492,"byte_end":14499,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use indexmap::IndexMap;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14500,"byte_end":14527,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14528,"byte_end":14531,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // count the frequency of each letter in a sentence.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14532,"byte_end":14588,"line_start":59,"line_end":59,"column_start":1,"column_end":57}},{"value":"/ let mut letters = IndexMap::new();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14589,"byte_end":14627,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ for ch in \"a short treatise on fungi\".chars() {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14628,"byte_end":14679,"line_start":61,"line_end":61,"column_start":1,"column_end":52}},{"value":"/     *letters.entry(ch).or_insert(0) += 1;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14680,"byte_end":14725,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14726,"byte_end":14731,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14732,"byte_end":14735,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(letters[&'s'], 2);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14736,"byte_end":14769,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters[&'t'], 3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14770,"byte_end":14803,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters[&'u'], 1);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14804,"byte_end":14837,"line_start":67,"line_end":67,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters.get(&'y'), None);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14838,"byte_end":14878,"line_start":68,"line_end":68,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14879,"byte_end":14886,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"cfg(has_std)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":14887,"byte_end":14902,"line_start":70,"line_end":70,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":16628,"byte_end":16631,"line_start":147,"line_end":147,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexMap<K, V>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map. (Does not allocate.)\n","sig":null,"attributes":[{"value":"/ Create a new map. (Does not allocate.)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":16560,"byte_end":16602,"line_start":145,"line_end":145,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":16607,"byte_end":16616,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":16858,"byte_end":16871,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<IndexMap<K, V>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new map with capacity for `n` key-value pairs. (Does not","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":16686,"byte_end":16755,"line_start":151,"line_end":151,"column_start":5,"column_end":74}},{"value":"/ allocate if `n` is zero.)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":16760,"byte_end":16789,"line_start":152,"line_end":152,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":16794,"byte_end":16797,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":16802,"byte_end":16832,"line_start":154,"line_end":154,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":16837,"byte_end":16846,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":17169,"byte_end":17193,"line_start":167,"line_end":167,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<IndexMap<K, V, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new map with capacity for `n` key-value pairs. (Does not","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":16997,"byte_end":17066,"line_start":162,"line_end":162,"column_start":5,"column_end":74}},{"value":"/ allocate if `n` is zero.)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":17071,"byte_end":17100,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":17105,"byte_end":17108,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":17113,"byte_end":17143,"line_start":165,"line_end":165,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":17148,"byte_end":17157,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":17572,"byte_end":17583,"line_start":182,"line_end":182,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<IndexMap<K, V, S>>::with_hasher","value":"pub fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with `hash_builder`\n","sig":null,"attributes":[{"value":"/ Create a new map with `hash_builder`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":17520,"byte_end":17560,"line_start":181,"line_end":181,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":17720,"byte_end":17728,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexMap<K, V, S>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":17678,"byte_end":17708,"line_start":186,"line_end":186,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":17849,"byte_end":17855,"line_start":192,"line_end":192,"column_start":12,"column_end":18},"name":"hasher","qualname":"<IndexMap<K, V, S>>::hasher","value":"pub fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the map's `BuildHasher`.\n","sig":null,"attributes":[{"value":"/ Return a reference to the map's `BuildHasher`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":17787,"byte_end":17837,"line_start":191,"line_end":191,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":18030,"byte_end":18033,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexMap<K, V, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of key-value pairs in the map.","sig":null,"attributes":[{"value":"/ Return the number of key-value pairs in the map.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":17909,"byte_end":17961,"line_start":196,"line_end":196,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":17966,"byte_end":17969,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":17974,"byte_end":18004,"line_start":198,"line_end":198,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":18009,"byte_end":18018,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":18205,"byte_end":18213,"line_start":208,"line_end":208,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexMap<K, V, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":18087,"byte_end":18136,"line_start":204,"line_end":204,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":18141,"byte_end":18144,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":18149,"byte_end":18179,"line_start":206,"line_end":206,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":18184,"byte_end":18193,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":18352,"byte_end":18356,"line_start":213,"line_end":213,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexMap<K, V, S>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":18266,"byte_end":18340,"line_start":212,"line_end":212,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":18550,"byte_end":18558,"line_start":220,"line_end":220,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<IndexMap<K, V, S>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":18464,"byte_end":18538,"line_start":219,"line_end":219,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":18759,"byte_end":18763,"line_start":227,"line_end":227,"column_start":12,"column_end":16},"name":"keys","qualname":"<IndexMap<K, V, S>>::keys","value":"pub fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the keys of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the keys of the map, in their order","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":18684,"byte_end":18747,"line_start":226,"line_end":226,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":18948,"byte_end":18954,"line_start":234,"line_end":234,"column_start":12,"column_end":18},"name":"values","qualname":"<IndexMap<K, V, S>>::values","value":"pub fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the map, in their order","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":18871,"byte_end":18936,"line_start":233,"line_end":233,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":19177,"byte_end":19187,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<IndexMap<K, V, S>>::values_mut","value":"pub fn values_mut(&mut Self) -> ValuesMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over mutable references to the the values of the map,\n in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over mutable references to the the values of the map,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":19066,"byte_end":19142,"line_start":240,"line_end":240,"column_start":5,"column_end":81}},{"value":"/ in their order","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":19147,"byte_end":19165,"line_start":241,"line_end":241,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":19445,"byte_end":19450,"line_start":251,"line_end":251,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexMap<K, V, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all key-value pairs in the map, while preserving its capacity.","sig":null,"attributes":[{"value":"/ Remove all key-value pairs in the map, while preserving its capacity.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":19317,"byte_end":19390,"line_start":248,"line_end":248,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":19395,"byte_end":19398,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":19403,"byte_end":19433,"line_start":250,"line_end":250,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":20184,"byte_end":20189,"line_start":268,"line_end":268,"column_start":12,"column_end":17},"name":"drain","qualname":"<IndexMap<K, V, S>>::drain","value":"pub fn drain<R>(&mut Self, R) -> Drain<, K, V> where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `IndexMap` in the given index range, returning those\n key-value pairs as a drain iterator.","sig":null,"attributes":[{"value":"/ Clears the `IndexMap` in the given index range, returning those","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":19502,"byte_end":19569,"line_start":255,"line_end":255,"column_start":5,"column_end":72}},{"value":"/ key-value pairs as a drain iterator.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":19574,"byte_end":19614,"line_start":256,"line_end":256,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":19619,"byte_end":19622,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ The range may be any type that implements `RangeBounds<usize>`,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":19627,"byte_end":19694,"line_start":258,"line_end":258,"column_start":5,"column_end":72}},{"value":"/ including all of the `std::ops::Range*` types, or even a tuple pair of","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":19699,"byte_end":19773,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/ `Bound` start and end values. To drain the map entirely, use `RangeFull`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":19778,"byte_end":19854,"line_start":260,"line_end":260,"column_start":5,"column_end":81}},{"value":"/ like `map.drain(..)`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":19859,"byte_end":19884,"line_start":261,"line_end":261,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":19889,"byte_end":19892,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ This shifts down all entries following the drained range to fill the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":19897,"byte_end":19969,"line_start":263,"line_end":263,"column_start":5,"column_end":77}},{"value":"/ gap, and keeps the allocated memory for reuse.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":19974,"byte_end":20024,"line_start":264,"line_end":264,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":20029,"byte_end":20032,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the starting point is greater than the end point or if","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":20037,"byte_end":20111,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"/ the end point is greater than the length of the map.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":20116,"byte_end":20172,"line_start":267,"line_end":267,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":20553,"byte_end":20560,"line_start":286,"line_end":286,"column_start":12,"column_end":19},"name":"reserve","qualname":"<IndexMap<K, V, S>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more key-value pairs.","sig":null,"attributes":[{"value":"/ Reserve capacity for `additional` more key-value pairs.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":20439,"byte_end":20498,"line_start":283,"line_end":283,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":20503,"byte_end":20506,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":20511,"byte_end":20541,"line_start":285,"line_end":285,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":20753,"byte_end":20766,"line_start":293,"line_end":293,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<IndexMap<K, V, S>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the capacity of the map as much as possible.","sig":null,"attributes":[{"value":"/ Shrink the capacity of the map as much as possible.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":20643,"byte_end":20698,"line_start":290,"line_end":290,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":20703,"byte_end":20706,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":20711,"byte_end":20741,"line_start":292,"line_end":292,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":21665,"byte_end":21671,"line_start":316,"line_end":316,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexMap<K, V, S>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair in the map.","sig":null,"attributes":[{"value":"/ Insert a key-value pair in the map.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":21013,"byte_end":21052,"line_start":303,"line_end":303,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":21057,"byte_end":21060,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ If an equivalent key already exists in the map: the key remains and","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":21065,"byte_end":21136,"line_start":305,"line_end":305,"column_start":5,"column_end":76}},{"value":"/ retains in its place in the order, its corresponding value is updated","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":21141,"byte_end":21214,"line_start":306,"line_end":306,"column_start":5,"column_end":78}},{"value":"/ with `value` and the older value is returned inside `Some(_)`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":21219,"byte_end":21285,"line_start":307,"line_end":307,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":21290,"byte_end":21293,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ If no equivalent key existed in the map: the new key-value pair is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":21298,"byte_end":21368,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ inserted, last in order, and `None` is returned.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":21373,"byte_end":21425,"line_start":310,"line_end":310,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":21430,"byte_end":21433,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":21438,"byte_end":21488,"line_start":312,"line_end":312,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":21493,"byte_end":21496,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ See also [`entry`](#method.entry) if you you want to insert *or* modify","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":21501,"byte_end":21576,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ or if you need to get the index of the corresponding key-value pair.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":21581,"byte_end":21653,"line_start":315,"line_end":315,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":22457,"byte_end":22468,"line_start":333,"line_end":333,"column_start":12,"column_end":23},"name":"insert_full","qualname":"<IndexMap<K, V, S>>::insert_full","value":"pub fn insert_full(&mut Self, K, V) -> (usize, Option<V>)","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair in the map, and get their index.","sig":null,"attributes":[{"value":"/ Insert a key-value pair in the map, and get their index.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":21766,"byte_end":21826,"line_start":320,"line_end":320,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":21831,"byte_end":21834,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ If an equivalent key already exists in the map: the key remains and","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":21839,"byte_end":21910,"line_start":322,"line_end":322,"column_start":5,"column_end":76}},{"value":"/ retains in its place in the order, its corresponding value is updated","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":21915,"byte_end":21988,"line_start":323,"line_end":323,"column_start":5,"column_end":78}},{"value":"/ with `value` and the older value is returned inside `(index, Some(_))`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":21993,"byte_end":22068,"line_start":324,"line_end":324,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":22073,"byte_end":22076,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ If no equivalent key existed in the map: the new key-value pair is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":22081,"byte_end":22151,"line_start":326,"line_end":326,"column_start":5,"column_end":75}},{"value":"/ inserted, last in order, and `(index, None)` is returned.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":22156,"byte_end":22217,"line_start":327,"line_end":327,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":22222,"byte_end":22225,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":22230,"byte_end":22280,"line_start":329,"line_end":329,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":22285,"byte_end":22288,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ See also [`entry`](#method.entry) if you you want to insert *or* modify","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":22293,"byte_end":22368,"line_start":331,"line_end":331,"column_start":5,"column_end":80}},{"value":"/ or if you need to get the index of the corresponding key-value pair.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":22373,"byte_end":22445,"line_start":332,"line_end":332,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":22800,"byte_end":22805,"line_start":342,"line_end":342,"column_start":12,"column_end":17},"name":"entry","qualname":"<IndexMap<K, V, S>>::entry","value":"pub fn entry(&mut Self, K) -> Entry<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get the given key’s corresponding entry in the map for insertion and/or\n in-place manipulation.","sig":null,"attributes":[{"value":"/ Get the given key’s corresponding entry in the map for insertion and/or","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":22617,"byte_end":22694,"line_start":338,"line_end":338,"column_start":5,"column_end":80}},{"value":"/ in-place manipulation.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":22699,"byte_end":22725,"line_start":339,"line_end":339,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":22730,"byte_end":22733,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":22738,"byte_end":22788,"line_start":341,"line_end":341,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":23055,"byte_end":23067,"line_start":350,"line_end":350,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<IndexMap<K, V, S>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `key` exists in the map.","sig":null,"attributes":[{"value":"/ Return `true` if an equivalent to `key` exists in the map.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":22928,"byte_end":22990,"line_start":347,"line_end":347,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":22995,"byte_end":22998,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":23003,"byte_end":23043,"line_start":349,"line_end":349,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":23361,"byte_end":23364,"line_start":361,"line_end":361,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexMap<K, V, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&V> where Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored for `key`, if it is present,\n else `None`.","sig":null,"attributes":[{"value":"/ Return a reference to the value stored for `key`, if it is present,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":23204,"byte_end":23275,"line_start":357,"line_end":357,"column_start":5,"column_end":76}},{"value":"/ else `None`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":23280,"byte_end":23296,"line_start":358,"line_end":358,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":23301,"byte_end":23304,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":23309,"byte_end":23349,"line_start":360,"line_end":360,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":23803,"byte_end":23816,"line_start":377,"line_end":377,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<IndexMap<K, V, S>>::get_key_value","value":"pub fn get_key_value<Q: ?Sized>(&Self, &Q) -> Option<(&K, &V)> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return references to the key-value pair stored for `key`,\n if it is present, else `None`.","sig":null,"attributes":[{"value":"/ Return references to the key-value pair stored for `key`,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":23638,"byte_end":23699,"line_start":373,"line_end":373,"column_start":5,"column_end":66}},{"value":"/ if it is present, else `None`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":23704,"byte_end":23738,"line_start":374,"line_end":374,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":23743,"byte_end":23746,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":23751,"byte_end":23791,"line_start":376,"line_end":376,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":24158,"byte_end":24166,"line_start":390,"line_end":390,"column_start":12,"column_end":20},"name":"get_full","qualname":"<IndexMap<K, V, S>>::get_full","value":"pub fn get_full<Q: ?Sized>(&Self, &Q) -> Option<(usize, &K, &V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, key and value\n","sig":null,"attributes":[{"value":"/ Return item index, key and value","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":24110,"byte_end":24146,"line_start":389,"line_end":389,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":24528,"byte_end":24540,"line_start":403,"line_end":403,"column_start":12,"column_end":24},"name":"get_index_of","qualname":"<IndexMap<K, V, S>>::get_index_of","value":"pub fn get_index_of<Q: ?Sized>(&Self, &Q) -> Option<usize> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, if it exists in the map\n","sig":null,"attributes":[{"value":"/ Return item index, if it exists in the map","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":24470,"byte_end":24516,"line_start":402,"line_end":402,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":24810,"byte_end":24817,"line_start":415,"line_end":415,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IndexMap<K, V, S>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":25118,"byte_end":25130,"line_start":427,"line_end":427,"column_start":12,"column_end":24},"name":"get_full_mut","qualname":"<IndexMap<K, V, S>>::get_full_mut","value":"pub fn get_full_mut<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, &K, &mut V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":26162,"byte_end":26168,"line_start":462,"line_end":462,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexMap<K, V, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":25841,"byte_end":25901,"line_start":454,"line_end":454,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":25906,"byte_end":25920,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":25925,"byte_end":25928,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove(key)`, if you need to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":25933,"byte_end":26004,"line_start":457,"line_end":457,"column_start":5,"column_end":76}},{"value":"/ preserve the order of the keys in the map, use `.shift_remove(key)`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":26009,"byte_end":26080,"line_start":458,"line_end":458,"column_start":5,"column_end":76}},{"value":"/ instead.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":26085,"byte_end":26097,"line_start":459,"line_end":459,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":26102,"byte_end":26105,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":26110,"byte_end":26150,"line_start":461,"line_end":461,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":26618,"byte_end":26630,"line_start":476,"line_end":476,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<IndexMap<K, V, S>>::remove_entry","value":"pub fn remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(K, V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key-value pair equivalent to `key`.","sig":null,"attributes":[{"value":"/ Remove and return the key-value pair equivalent to `key`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":26303,"byte_end":26364,"line_start":469,"line_end":469,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":26369,"byte_end":26372,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove_entry(key)`, if you need to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":26377,"byte_end":26454,"line_start":471,"line_end":471,"column_start":5,"column_end":82}},{"value":"/ preserve the order of the keys in the map, use `.shift_remove_entry(key)`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":26459,"byte_end":26536,"line_start":472,"line_end":472,"column_start":5,"column_end":82}},{"value":"/ instead.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":26541,"byte_end":26553,"line_start":473,"line_end":473,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":26558,"byte_end":26561,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":26566,"byte_end":26606,"line_start":475,"line_end":475,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":27186,"byte_end":27197,"line_start":493,"line_end":493,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexMap<K, V, S>>::swap_remove","value":"pub fn swap_remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":26776,"byte_end":26836,"line_start":483,"line_end":483,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":26841,"byte_end":26855,"line_start":484,"line_end":484,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":26860,"byte_end":26863,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":26868,"byte_end":26940,"line_start":486,"line_end":486,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":26945,"byte_end":27008,"line_start":487,"line_end":487,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":27013,"byte_end":27067,"line_start":488,"line_end":488,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":27072,"byte_end":27075,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":27080,"byte_end":27121,"line_start":490,"line_end":490,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":27126,"byte_end":27129,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":27134,"byte_end":27174,"line_start":492,"line_end":492,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":27740,"byte_end":27757,"line_start":509,"line_end":509,"column_start":12,"column_end":29},"name":"swap_remove_entry","qualname":"<IndexMap<K, V, S>>::swap_remove_entry","value":"pub fn swap_remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(K, V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key-value pair equivalent to `key`.","sig":null,"attributes":[{"value":"/ Remove and return the key-value pair equivalent to `key`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":27348,"byte_end":27409,"line_start":500,"line_end":500,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":27414,"byte_end":27417,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":27422,"byte_end":27494,"line_start":502,"line_end":502,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":27499,"byte_end":27562,"line_start":503,"line_end":503,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":27567,"byte_end":27621,"line_start":504,"line_end":504,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":27626,"byte_end":27629,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":27634,"byte_end":27675,"line_start":506,"line_end":506,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":27680,"byte_end":27683,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":27688,"byte_end":27728,"line_start":508,"line_end":508,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":28427,"byte_end":28443,"line_start":529,"line_end":529,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<IndexMap<K, V, S>>::swap_remove_full","value":"pub fn swap_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, K, V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return it and\n the index it had.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return it and","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":28003,"byte_end":28070,"line_start":519,"line_end":519,"column_start":5,"column_end":72}},{"value":"/ the index it had.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":28075,"byte_end":28096,"line_start":520,"line_end":520,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":28101,"byte_end":28104,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":28109,"byte_end":28181,"line_start":522,"line_end":522,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":28186,"byte_end":28249,"line_start":523,"line_end":523,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":28254,"byte_end":28308,"line_start":524,"line_end":524,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":28313,"byte_end":28316,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":28321,"byte_end":28362,"line_start":526,"line_end":526,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":28367,"byte_end":28370,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":28375,"byte_end":28415,"line_start":528,"line_end":528,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":29110,"byte_end":29122,"line_start":550,"line_end":550,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<IndexMap<K, V, S>>::shift_remove","value":"pub fn shift_remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":28705,"byte_end":28765,"line_start":540,"line_end":540,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":28770,"byte_end":28784,"line_start":541,"line_end":541,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":28789,"byte_end":28792,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":28797,"byte_end":28863,"line_start":543,"line_end":543,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":28868,"byte_end":28929,"line_start":544,"line_end":544,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":28934,"byte_end":28991,"line_start":545,"line_end":545,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":28996,"byte_end":28999,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":29004,"byte_end":29045,"line_start":547,"line_end":547,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":29050,"byte_end":29053,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":29058,"byte_end":29098,"line_start":549,"line_end":549,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":29661,"byte_end":29679,"line_start":566,"line_end":566,"column_start":12,"column_end":30},"name":"shift_remove_entry","qualname":"<IndexMap<K, V, S>>::shift_remove_entry","value":"pub fn shift_remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(K, V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key-value pair equivalent to `key`.","sig":null,"attributes":[{"value":"/ Remove and return the key-value pair equivalent to `key`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":29274,"byte_end":29335,"line_start":557,"line_end":557,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":29340,"byte_end":29343,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":29348,"byte_end":29414,"line_start":559,"line_end":559,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":29419,"byte_end":29480,"line_start":560,"line_end":560,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":29485,"byte_end":29542,"line_start":561,"line_end":561,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":29547,"byte_end":29550,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":29555,"byte_end":29596,"line_start":563,"line_end":563,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":29601,"byte_end":29604,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":29609,"byte_end":29649,"line_start":565,"line_end":565,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":30345,"byte_end":30362,"line_start":586,"line_end":586,"column_start":12,"column_end":29},"name":"shift_remove_full","qualname":"<IndexMap<K, V, S>>::shift_remove_full","value":"pub fn shift_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, K, V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return it and\n the index it had.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return it and","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":29926,"byte_end":29993,"line_start":576,"line_end":576,"column_start":5,"column_end":72}},{"value":"/ the index it had.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":29998,"byte_end":30019,"line_start":577,"line_end":577,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":30024,"byte_end":30027,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":30032,"byte_end":30098,"line_start":579,"line_end":579,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":30103,"byte_end":30164,"line_start":580,"line_end":580,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":30169,"byte_end":30226,"line_start":581,"line_end":581,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":30231,"byte_end":30234,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":30239,"byte_end":30280,"line_start":583,"line_end":583,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":30285,"byte_end":30288,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":30293,"byte_end":30333,"line_start":585,"line_end":585,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":30724,"byte_end":30727,"line_start":600,"line_end":600,"column_start":12,"column_end":15},"name":"pop","qualname":"<IndexMap<K, V, S>>::pop","value":"pub fn pop(&mut Self) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last key-value pair","sig":null,"attributes":[{"value":"/ Remove the last key-value pair","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":30625,"byte_end":30659,"line_start":597,"line_end":597,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":30664,"byte_end":30667,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":30672,"byte_end":30712,"line_start":599,"line_end":599,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":31070,"byte_end":31076,"line_start":611,"line_end":611,"column_start":12,"column_end":18},"name":"retain","qualname":"<IndexMap<K, V, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&K, &mut V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each key-value pair in the map and keep those where the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":30794,"byte_end":30866,"line_start":604,"line_end":604,"column_start":5,"column_end":77}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":30871,"byte_end":30905,"line_start":605,"line_end":605,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":30910,"byte_end":30913,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":30918,"byte_end":30990,"line_start":607,"line_end":607,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":30995,"byte_end":31005,"line_start":608,"line_end":608,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":31010,"byte_end":31013,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":31018,"byte_end":31058,"line_start":610,"line_end":610,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":31514,"byte_end":31523,"line_start":628,"line_end":628,"column_start":12,"column_end":21},"name":"sort_keys","qualname":"<IndexMap<K, V, S>>::sort_keys","value":"pub fn sort_keys(&mut Self) where K: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs by the default ordering of the keys.","sig":null,"attributes":[{"value":"/ Sort the map’s key-value pairs by the default ordering of the keys.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":31386,"byte_end":31459,"line_start":625,"line_end":625,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":31464,"byte_end":31467,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ See `sort_by` for details.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":31472,"byte_end":31502,"line_start":627,"line_end":627,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":32109,"byte_end":32116,"line_start":645,"line_end":645,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<IndexMap<K, V, S>>::sort_by","value":"pub fn sort_by<F>(&mut Self, F) where F: FnMut(&K, &V, &K, &V) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs in place using the comparison\n function `compare`.","sig":null,"attributes":[{"value":"/ Sort the map’s key-value pairs in place using the comparison","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":31690,"byte_end":31756,"line_start":637,"line_end":637,"column_start":5,"column_end":69}},{"value":"/ function `compare`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":31761,"byte_end":31784,"line_start":638,"line_end":638,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":31789,"byte_end":31792,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ The comparison function receives two key and value pairs to compare (you","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":31797,"byte_end":31873,"line_start":640,"line_end":640,"column_start":5,"column_end":81}},{"value":"/ can sort by keys or values or their combination as needed).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":31878,"byte_end":31941,"line_start":641,"line_end":641,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":31946,"byte_end":31949,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n + c)** time and **O(n)** space where *n* is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":31954,"byte_end":32025,"line_start":643,"line_end":643,"column_start":5,"column_end":76}},{"value":"/ the length of the map and *c* the capacity. The sort is stable.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":32030,"byte_end":32097,"line_start":644,"line_end":644,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":32519,"byte_end":32528,"line_start":658,"line_end":658,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<IndexMap<K, V, S>>::sorted_by","value":"pub fn sorted_by<F>(Self, F) -> IntoIter<K, V> where F: FnMut(&K, &V, &K, &V)\n-> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the key-value pairs of the map and return a by value iterator of\n the key-value pairs with the result.","sig":null,"attributes":[{"value":"/ Sort the key-value pairs of the map and return a by value iterator of","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":32353,"byte_end":32426,"line_start":654,"line_end":654,"column_start":5,"column_end":78}},{"value":"/ the key-value pairs with the result.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":32431,"byte_end":32471,"line_start":655,"line_end":655,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":32476,"byte_end":32479,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ The sort is stable.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":32484,"byte_end":32507,"line_start":657,"line_end":657,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":32971,"byte_end":32978,"line_start":672,"line_end":672,"column_start":12,"column_end":19},"name":"reverse","qualname":"<IndexMap<K, V, S>>::reverse","value":"pub fn reverse(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reverses the order of the map’s key-value pairs in place.","sig":null,"attributes":[{"value":"/ Reverses the order of the map’s key-value pairs in place.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":32834,"byte_end":32897,"line_start":669,"line_end":669,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":32902,"byte_end":32905,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time and **O(1)** space.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":32910,"byte_end":32959,"line_start":671,"line_end":671,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":33215,"byte_end":33224,"line_start":683,"line_end":683,"column_start":12,"column_end":21},"name":"get_index","qualname":"<IndexMap<K, V, S>>::get_index","value":"pub fn get_index(&Self, usize) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[{"value":"/ Get a key-value pair by index","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":33067,"byte_end":33100,"line_start":678,"line_end":678,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":33105,"byte_end":33108,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":33113,"byte_end":33160,"line_start":680,"line_end":680,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":33165,"byte_end":33168,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":33173,"byte_end":33203,"line_start":682,"line_end":682,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":33482,"byte_end":33495,"line_start":692,"line_end":692,"column_start":12,"column_end":25},"name":"get_index_mut","qualname":"<IndexMap<K, V, S>>::get_index_mut","value":"pub fn get_index_mut(&mut Self, usize) -> Option<(&mut K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[{"value":"/ Get a key-value pair by index","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":33334,"byte_end":33367,"line_start":687,"line_end":687,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":33372,"byte_end":33375,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":33380,"byte_end":33427,"line_start":689,"line_end":689,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":33432,"byte_end":33435,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":33440,"byte_end":33470,"line_start":691,"line_end":691,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":34000,"byte_end":34017,"line_start":705,"line_end":705,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<IndexMap<K, V, S>>::swap_remove_index","value":"pub fn swap_remove_index(&mut Self, usize) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":33625,"byte_end":33663,"line_start":696,"line_end":696,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":33668,"byte_end":33671,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":33676,"byte_end":33723,"line_start":698,"line_end":698,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":33728,"byte_end":33731,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":33736,"byte_end":33808,"line_start":700,"line_end":700,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":33813,"byte_end":33876,"line_start":701,"line_end":701,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":33881,"byte_end":33935,"line_start":702,"line_end":702,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":33940,"byte_end":33943,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":33948,"byte_end":33988,"line_start":704,"line_end":704,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":34487,"byte_end":34505,"line_start":718,"line_end":718,"column_start":12,"column_end":30},"name":"shift_remove_index","qualname":"<IndexMap<K, V, S>>::shift_remove_index","value":"pub fn shift_remove_index(&mut Self, usize) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":34117,"byte_end":34155,"line_start":709,"line_end":709,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":34160,"byte_end":34163,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":34168,"byte_end":34215,"line_start":711,"line_end":711,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":34220,"byte_end":34223,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":34228,"byte_end":34294,"line_start":713,"line_end":713,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":34299,"byte_end":34360,"line_start":714,"line_end":714,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":34365,"byte_end":34422,"line_start":715,"line_end":715,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":34427,"byte_end":34430,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":34435,"byte_end":34475,"line_start":717,"line_end":717,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":397},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":34861,"byte_end":34865,"line_start":730,"line_end":730,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":401}],"decl_id":null,"docs":" An iterator over the keys of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the keys of a `IndexMap`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":34604,"byte_end":34650,"line_start":723,"line_end":723,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":34651,"byte_end":34654,"line_start":724,"line_end":724,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`keys`] method on [`IndexMap`]. See its","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":34655,"byte_end":34731,"line_start":725,"line_end":725,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":34732,"byte_end":34759,"line_start":726,"line_end":726,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":34760,"byte_end":34763,"line_start":727,"line_end":727,"column_start":1,"column_end":4}},{"value":"/ [`keys`]: struct.IndexMap.html#method.keys","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":34764,"byte_end":34810,"line_start":728,"line_end":728,"column_start":1,"column_end":47}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":34811,"byte_end":34849,"line_start":729,"line_end":729,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":423},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":35959,"byte_end":35965,"line_start":774,"line_end":774,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":427}],"decl_id":null,"docs":" An iterator over the values of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the values of a `IndexMap`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":35694,"byte_end":35742,"line_start":767,"line_end":767,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":35743,"byte_end":35746,"line_start":768,"line_end":768,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values`] method on [`IndexMap`]. See its","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":35747,"byte_end":35825,"line_start":769,"line_end":769,"column_start":1,"column_end":79}},{"value":"/ documentation for more.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":35826,"byte_end":35853,"line_start":770,"line_end":770,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":35854,"byte_end":35857,"line_start":771,"line_end":771,"column_start":1,"column_end":4}},{"value":"/ [`values`]: struct.IndexMap.html#method.values","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":35858,"byte_end":35908,"line_start":772,"line_end":772,"column_start":1,"column_end":51}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":35909,"byte_end":35947,"line_start":773,"line_end":773,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":449},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":37083,"byte_end":37092,"line_start":818,"line_end":818,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":453}],"decl_id":null,"docs":" A mutable iterator over the values of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the values of a `IndexMap`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":36799,"byte_end":36854,"line_start":811,"line_end":811,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":36855,"byte_end":36858,"line_start":812,"line_end":812,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values_mut`] method on [`IndexMap`]. See its","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":36859,"byte_end":36941,"line_start":813,"line_end":813,"column_start":1,"column_end":83}},{"value":"/ documentation for more.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":36942,"byte_end":36969,"line_start":814,"line_end":814,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":36970,"byte_end":36973,"line_start":815,"line_end":815,"column_start":1,"column_end":4}},{"value":"/ [`values_mut`]: struct.IndexMap.html#method.values_mut","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":36974,"byte_end":37032,"line_start":816,"line_end":816,"column_start":1,"column_end":59}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":37033,"byte_end":37071,"line_start":817,"line_end":817,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":467},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":37821,"byte_end":37825,"line_start":847,"line_end":847,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":471}],"decl_id":null,"docs":" An iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the entries of a `IndexMap`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":37561,"byte_end":37610,"line_start":840,"line_end":840,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":37611,"byte_end":37614,"line_start":841,"line_end":841,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`IndexMap`]. See its","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":37615,"byte_end":37691,"line_start":842,"line_end":842,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":37692,"byte_end":37719,"line_start":843,"line_end":843,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":37720,"byte_end":37723,"line_start":844,"line_end":844,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: struct.IndexMap.html#method.iter","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":37724,"byte_end":37770,"line_start":845,"line_end":845,"column_start":1,"column_end":47}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":37771,"byte_end":37809,"line_start":846,"line_end":846,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":493},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":38937,"byte_end":38944,"line_start":891,"line_end":891,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":497}],"decl_id":null,"docs":" A mutable iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the entries of a `IndexMap`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":38658,"byte_end":38714,"line_start":884,"line_end":884,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":38715,"byte_end":38718,"line_start":885,"line_end":885,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter_mut`] method on [`IndexMap`]. See its","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":38719,"byte_end":38799,"line_start":886,"line_end":886,"column_start":1,"column_end":81}},{"value":"/ documentation for more.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":38800,"byte_end":38827,"line_start":887,"line_end":887,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":38828,"byte_end":38831,"line_start":888,"line_end":888,"column_start":1,"column_end":4}},{"value":"/ [`iter_mut`]: struct.IndexMap.html#method.iter_mut","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":38832,"byte_end":38886,"line_start":889,"line_end":889,"column_start":1,"column_end":55}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":38887,"byte_end":38925,"line_start":890,"line_end":890,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":511},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":39733,"byte_end":39741,"line_start":920,"line_end":920,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":514}],"decl_id":null,"docs":" An owning iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the entries of a `IndexMap`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":39412,"byte_end":39468,"line_start":913,"line_end":913,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":39469,"byte_end":39472,"line_start":914,"line_end":914,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`IndexMap`]","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":39473,"byte_end":39545,"line_start":915,"line_end":915,"column_start":1,"column_end":73}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":39546,"byte_end":39621,"line_start":916,"line_end":916,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":39622,"byte_end":39625,"line_start":917,"line_end":917,"column_start":1,"column_end":4}},{"value":"/ [`into_iter`]: struct.IndexMap.html#method.into_iter","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":39626,"byte_end":39682,"line_start":918,"line_end":918,"column_start":1,"column_end":57}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":39683,"byte_end":39721,"line_start":919,"line_end":919,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":531},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":40714,"byte_end":40719,"line_start":956,"line_end":956,"column_start":12,"column_end":17},"name":"Drain","qualname":"::map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":535}],"decl_id":null,"docs":" A draining iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A draining iterator over the entries of a `IndexMap`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":40443,"byte_end":40500,"line_start":949,"line_end":949,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":40501,"byte_end":40504,"line_start":950,"line_end":950,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`IndexMap`]. See its","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":40505,"byte_end":40582,"line_start":951,"line_end":951,"column_start":1,"column_end":78}},{"value":"/ documentation for more.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":40583,"byte_end":40610,"line_start":952,"line_end":952,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":40611,"byte_end":40614,"line_start":953,"line_end":953,"column_start":1,"column_end":4}},{"value":"/ [`drain`]: struct.IndexMap.html#method.drain","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":40615,"byte_end":40663,"line_start":954,"line_end":954,"column_start":1,"column_end":49}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":40664,"byte_end":40702,"line_start":955,"line_end":955,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":629},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"set","qualname":"::set","value":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":1259},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":656},{"krate":0,"index":660},{"krate":0,"index":665},{"krate":0,"index":674},{"krate":0,"index":678},{"krate":0,"index":682},{"krate":0,"index":695},{"krate":0,"index":760},{"krate":0,"index":769},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":793},{"krate":0,"index":797},{"krate":0,"index":800},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":813},{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":825},{"krate":0,"index":831},{"krate":0,"index":837},{"krate":0,"index":843},{"krate":0,"index":849},{"krate":0,"index":853},{"krate":0,"index":858},{"krate":0,"index":861},{"krate":0,"index":873},{"krate":0,"index":879},{"krate":0,"index":886},{"krate":0,"index":890},{"krate":0,"index":894},{"krate":0,"index":898},{"krate":0,"index":904},{"krate":0,"index":911},{"krate":0,"index":915},{"krate":0,"index":919},{"krate":0,"index":923},{"krate":0,"index":929},{"krate":0,"index":940},{"krate":0,"index":945},{"krate":0,"index":950},{"krate":0,"index":955},{"krate":0,"index":960},{"krate":0,"index":970},{"krate":0,"index":974},{"krate":0,"index":978},{"krate":0,"index":982},{"krate":0,"index":988},{"krate":0,"index":994},{"krate":0,"index":1000}],"decl_id":null,"docs":" A hash set implemented using `IndexMap`\n","sig":null,"attributes":[{"value":"! A hash set implemented using `IndexMap`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":84395,"byte_end":84438,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":656},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":86484,"byte_end":86492,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"IndexSet","qualname":"::set::IndexSet","value":"IndexSet {  }","parent":null,"children":[{"krate":0,"index":659}],"decl_id":null,"docs":" A hash set where the iteration order of the values is independent of their\n hash values.","sig":null,"attributes":[{"value":"/ A hash set where the iteration order of the values is independent of their","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":84878,"byte_end":84956,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ hash values.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":84957,"byte_end":84973,"line_start":22,"line_end":22,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":84974,"byte_end":84977,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The interface is closely compatible with the standard `HashSet`, but also","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":84978,"byte_end":85055,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ has additional features.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":85056,"byte_end":85084,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":85085,"byte_end":85088,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Order","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":85089,"byte_end":85100,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":85101,"byte_end":85104,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The values have a consistent order that is determined by the sequence of","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":85105,"byte_end":85181,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ insertion and removal calls on the set. The order does not depend on the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":85182,"byte_end":85258,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ values or the hash function at all. Note that insertion order and value","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":85259,"byte_end":85334,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ are not affected if a re-insertion is attempted once an element is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":85335,"byte_end":85405,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/ already present.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":85406,"byte_end":85426,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":85427,"byte_end":85430,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ All iterators traverse the set *in order*.  Set operation iterators like","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":85431,"byte_end":85507,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ `union` produce a concatenated order, as do their matching \"bitwise\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":85508,"byte_end":85580,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ operators.  See their documentation for specifics.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":85581,"byte_end":85635,"line_start":37,"line_end":37,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":85636,"byte_end":85639,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The insertion order is preserved, with **notable exceptions** like the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":85640,"byte_end":85714,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ `.remove()` or `.swap_remove()` methods. Methods such as `.sort_by()` of","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":85715,"byte_end":85791,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ course result in a new order, depending on the sorting order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":85792,"byte_end":85857,"line_start":41,"line_end":41,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":85858,"byte_end":85861,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Indices","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":85862,"byte_end":85875,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":85876,"byte_end":85879,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The values are indexed in a compact range without holes in the range","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":85880,"byte_end":85952,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ `0..self.len()`. For example, the method `.get_full` looks up the index for","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":85953,"byte_end":86032,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ a value, and the method `.get_index` looks up the value by index.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":86033,"byte_end":86102,"line_start":47,"line_end":47,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":86103,"byte_end":86106,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":86107,"byte_end":86121,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":86122,"byte_end":86125,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":86126,"byte_end":86133,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ use indexmap::IndexSet;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":86134,"byte_end":86161,"line_start":52,"line_end":52,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":86162,"byte_end":86165,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ // Collects which letters appear in a sentence.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":86166,"byte_end":86217,"line_start":54,"line_end":54,"column_start":1,"column_end":52}},{"value":"/ let letters: IndexSet<_> = \"a short treatise on fungi\".chars().collect();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":86218,"byte_end":86295,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":86296,"byte_end":86299,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ assert!(letters.contains(&'s'));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":86300,"byte_end":86336,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ assert!(letters.contains(&'t'));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":86337,"byte_end":86373,"line_start":58,"line_end":58,"column_start":1,"column_end":37}},{"value":"/ assert!(letters.contains(&'u'));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":86374,"byte_end":86410,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ assert!(!letters.contains(&'y'));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":86411,"byte_end":86448,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":86449,"byte_end":86456,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"cfg(has_std)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":86457,"byte_end":86472,"line_start":62,"line_end":62,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":87914,"byte_end":87917,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexSet<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set. (Does not allocate.)\n","sig":null,"attributes":[{"value":"/ Create a new set. (Does not allocate.)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":87860,"byte_end":87902,"line_start":129,"line_end":129,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":88155,"byte_end":88168,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<IndexSet<T>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new set with capacity for `n` elements.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":88004,"byte_end":88056,"line_start":136,"line_end":136,"column_start":5,"column_end":57}},{"value":"/ (Does not allocate if `n` is zero.)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":88061,"byte_end":88100,"line_start":137,"line_end":137,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":88105,"byte_end":88108,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":88113,"byte_end":88143,"line_start":139,"line_end":139,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":88455,"byte_end":88479,"line_start":152,"line_end":152,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<IndexSet<T, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new set with capacity for `n` elements.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":88304,"byte_end":88356,"line_start":148,"line_end":148,"column_start":5,"column_end":57}},{"value":"/ (Does not allocate if `n` is zero.)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":88361,"byte_end":88400,"line_start":149,"line_end":149,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":88405,"byte_end":88408,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":88413,"byte_end":88443,"line_start":151,"line_end":151,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":88679,"byte_end":88690,"line_start":159,"line_end":159,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<IndexSet<T, S>>::with_hasher","value":"pub fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with `hash_builder`\n","sig":null,"attributes":[{"value":"/ Create a new set with `hash_builder`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":88627,"byte_end":88667,"line_start":158,"line_end":158,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":88854,"byte_end":88862,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexSet<T, S>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":88812,"byte_end":88842,"line_start":165,"line_end":165,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":88982,"byte_end":88988,"line_start":171,"line_end":171,"column_start":12,"column_end":18},"name":"hasher","qualname":"<IndexSet<T, S>>::hasher","value":"pub fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the set's `BuildHasher`.\n","sig":null,"attributes":[{"value":"/ Return a reference to the set's `BuildHasher`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":88920,"byte_end":88970,"line_start":170,"line_end":170,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":89141,"byte_end":89144,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexSet<T, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of elements in the set.","sig":null,"attributes":[{"value":"/ Return the number of elements in the set.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":89041,"byte_end":89086,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":89091,"byte_end":89094,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":89099,"byte_end":89129,"line_start":177,"line_end":177,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":89301,"byte_end":89309,"line_start":185,"line_end":185,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexSet<T, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the set contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the set contains no elements.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":89197,"byte_end":89246,"line_start":182,"line_end":182,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":89251,"byte_end":89254,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":89259,"byte_end":89289,"line_start":184,"line_end":184,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":89443,"byte_end":89447,"line_start":190,"line_end":190,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexSet<T, S>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the set, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the set, in their order","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":89366,"byte_end":89431,"line_start":189,"line_end":189,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":89669,"byte_end":89674,"line_start":199,"line_end":199,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexSet<T, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all elements in the set, while preserving its capacity.","sig":null,"attributes":[{"value":"/ Remove all elements in the set, while preserving its capacity.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":89548,"byte_end":89614,"line_start":196,"line_end":196,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":89619,"byte_end":89622,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":89627,"byte_end":89657,"line_start":198,"line_end":198,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":90398,"byte_end":90403,"line_start":216,"line_end":216,"column_start":12,"column_end":17},"name":"drain","qualname":"<IndexSet<T, S>>::drain","value":"pub fn drain<R>(&mut Self, R) -> Drain<, T> where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `IndexSet` in the given index range, returning those values\n as a drain iterator.","sig":null,"attributes":[{"value":"/ Clears the `IndexSet` in the given index range, returning those values","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":89725,"byte_end":89799,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ as a drain iterator.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":89804,"byte_end":89828,"line_start":204,"line_end":204,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":89833,"byte_end":89836,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ The range may be any type that implements `RangeBounds<usize>`,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":89841,"byte_end":89908,"line_start":206,"line_end":206,"column_start":5,"column_end":72}},{"value":"/ including all of the `std::ops::Range*` types, or even a tuple pair of","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":89913,"byte_end":89987,"line_start":207,"line_end":207,"column_start":5,"column_end":79}},{"value":"/ `Bound` start and end values. To drain the set entirely, use `RangeFull`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":89992,"byte_end":90068,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/ like `set.drain(..)`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":90073,"byte_end":90098,"line_start":209,"line_end":209,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":90103,"byte_end":90106,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ This shifts down all entries following the drained range to fill the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":90111,"byte_end":90183,"line_start":211,"line_end":211,"column_start":5,"column_end":77}},{"value":"/ gap, and keeps the allocated memory for reuse.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":90188,"byte_end":90238,"line_start":212,"line_end":212,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":90243,"byte_end":90246,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the starting point is greater than the end point or if","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":90251,"byte_end":90325,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"/ the end point is greater than the length of the set.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":90330,"byte_end":90386,"line_start":215,"line_end":215,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":90753,"byte_end":90760,"line_start":234,"line_end":234,"column_start":12,"column_end":19},"name":"reserve","qualname":"<IndexSet<T, S>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more values.","sig":null,"attributes":[{"value":"/ Reserve capacity for `additional` more values.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":90648,"byte_end":90698,"line_start":231,"line_end":231,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":90703,"byte_end":90706,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":90711,"byte_end":90741,"line_start":233,"line_end":233,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":90952,"byte_end":90965,"line_start":241,"line_end":241,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<IndexSet<T, S>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the capacity of the set as much as possible.","sig":null,"attributes":[{"value":"/ Shrink the capacity of the set as much as possible.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":90842,"byte_end":90897,"line_start":238,"line_end":238,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":90902,"byte_end":90905,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":90910,"byte_end":90940,"line_start":240,"line_end":240,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":91376,"byte_end":91382,"line_start":253,"line_end":253,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexSet<T, S>>::insert","value":"pub fn insert(&mut Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the set.","sig":null,"attributes":[{"value":"/ Insert the value into the set.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":91024,"byte_end":91058,"line_start":245,"line_end":245,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":91063,"byte_end":91066,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ If an equivalent item already exists in the set, it returns","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":91071,"byte_end":91134,"line_start":247,"line_end":247,"column_start":5,"column_end":68}},{"value":"/ `false` leaving the original value in the set and without","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":91139,"byte_end":91200,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ altering its insertion order. Otherwise, it inserts the new","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":91205,"byte_end":91268,"line_start":249,"line_end":249,"column_start":5,"column_end":68}},{"value":"/ item and returns `true`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":91273,"byte_end":91301,"line_start":250,"line_end":250,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":91306,"byte_end":91309,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":91314,"byte_end":91364,"line_start":252,"line_end":252,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":91920,"byte_end":91931,"line_start":266,"line_end":266,"column_start":12,"column_end":23},"name":"insert_full","qualname":"<IndexSet<T, S>>::insert_full","value":"pub fn insert_full(&mut Self, T) -> (usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the set, and get its index.","sig":null,"attributes":[{"value":"/ Insert the value into the set, and get its index.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":91470,"byte_end":91523,"line_start":257,"line_end":257,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":91528,"byte_end":91531,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ If an equivalent item already exists in the set, it returns","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":91536,"byte_end":91599,"line_start":259,"line_end":259,"column_start":5,"column_end":68}},{"value":"/ the index of the existing item and `false`, leaving the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":91604,"byte_end":91663,"line_start":260,"line_end":260,"column_start":5,"column_end":64}},{"value":"/ original value in the set and without altering its insertion","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":91668,"byte_end":91732,"line_start":261,"line_end":261,"column_start":5,"column_end":69}},{"value":"/ order. Otherwise, it inserts the new item and returns the index","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":91737,"byte_end":91804,"line_start":262,"line_end":262,"column_start":5,"column_end":72}},{"value":"/ of the inserted item and `true`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":91809,"byte_end":91845,"line_start":263,"line_end":263,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":91850,"byte_end":91853,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":91858,"byte_end":91908,"line_start":265,"line_end":265,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":92421,"byte_end":92431,"line_start":282,"line_end":282,"column_start":12,"column_end":22},"name":"difference","qualname":"<IndexSet<T, S>>::difference","value":"pub fn difference<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> Difference where\nS2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` but not `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in `self` but not `other`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":92253,"byte_end":92327,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":92332,"byte_end":92335,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Values are produced in the same order that they appear in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":92340,"byte_end":92409,"line_start":281,"line_end":281,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":92880,"byte_end":92900,"line_start":297,"line_end":297,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<IndexSet<T, S>>::symmetric_difference","value":"pub fn symmetric_difference<'a, S2>(&'a Self, &'a IndexSet<T, S2>)\n-> SymmetricDifference where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` or `other`,\n but not in both.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in `self` or `other`,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":92636,"byte_end":92705,"line_start":292,"line_end":292,"column_start":5,"column_end":74}},{"value":"/ but not in both.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":92710,"byte_end":92730,"line_start":293,"line_end":293,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":92735,"byte_end":92738,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Values from `self` are produced in their original order, followed by","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":92743,"byte_end":92815,"line_start":295,"line_end":295,"column_start":5,"column_end":77}},{"value":"/ values from `other` in their original order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":92820,"byte_end":92868,"line_start":296,"line_end":296,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":93340,"byte_end":93352,"line_start":312,"line_end":312,"column_start":12,"column_end":24},"name":"intersection","qualname":"<IndexSet<T, S>>::intersection","value":"pub fn intersection<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> Intersection\nwhere S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in both `self` and `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in both `self` and `other`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":93171,"byte_end":93246,"line_start":309,"line_end":309,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":93251,"byte_end":93254,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Values are produced in the same order that they appear in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":93259,"byte_end":93328,"line_start":311,"line_end":311,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":93794,"byte_end":93799,"line_start":326,"line_end":326,"column_start":12,"column_end":17},"name":"union","qualname":"<IndexSet<T, S>>::union","value":"pub fn union<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> Union where\nS2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all values that are in `self` or `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over all values that are in `self` or `other`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":93561,"byte_end":93630,"line_start":322,"line_end":322,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":93635,"byte_end":93638,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ Values from `self` are produced in their original order, followed by","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":93643,"byte_end":93715,"line_start":324,"line_end":324,"column_start":5,"column_end":77}},{"value":"/ values that are unique to `other` in their original order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":93720,"byte_end":93782,"line_start":325,"line_end":325,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":94133,"byte_end":94141,"line_start":338,"line_end":338,"column_start":12,"column_end":20},"name":"contains","qualname":"<IndexSet<T, S>>::contains","value":"pub fn contains<Q: ?Sized>(&Self, &Q) -> bool where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `value` exists in the set.","sig":null,"attributes":[{"value":"/ Return `true` if an equivalent to `value` exists in the set.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":94004,"byte_end":94068,"line_start":335,"line_end":335,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":94073,"byte_end":94076,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":94081,"byte_end":94121,"line_start":337,"line_end":337,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":94434,"byte_end":94437,"line_start":349,"line_end":349,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexSet<T, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&T> where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored in the set, if it is present,\n else `None`.","sig":null,"attributes":[{"value":"/ Return a reference to the value stored in the set, if it is present,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":94276,"byte_end":94348,"line_start":345,"line_end":345,"column_start":5,"column_end":77}},{"value":"/ else `None`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":94353,"byte_end":94369,"line_start":346,"line_end":346,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":94374,"byte_end":94377,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":94382,"byte_end":94422,"line_start":348,"line_end":348,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":94640,"byte_end":94648,"line_start":357,"line_end":357,"column_start":12,"column_end":20},"name":"get_full","qualname":"<IndexSet<T, S>>::get_full","value":"pub fn get_full<Q: ?Sized>(&Self, &Q) -> Option<(usize, &T)> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return item index and value\n","sig":null,"attributes":[{"value":"/ Return item index and value","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":94597,"byte_end":94628,"line_start":356,"line_end":356,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":94878,"byte_end":94890,"line_start":365,"line_end":365,"column_start":12,"column_end":24},"name":"get_index_of","qualname":"<IndexSet<T, S>>::get_index_of","value":"pub fn get_index_of<Q: ?Sized>(&Self, &Q) -> Option<usize> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, if it exists in the set\n","sig":null,"attributes":[{"value":"/ Return item index, if it exists in the set","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":94820,"byte_end":94866,"line_start":364,"line_end":364,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":95233,"byte_end":95240,"line_start":376,"line_end":376,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexSet<T, S>>::replace","value":"pub fn replace(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is\n equal to the given one. Returns the replaced value.","sig":null,"attributes":[{"value":"/ Adds a value to the set, replacing the existing value, if any, that is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":95034,"byte_end":95108,"line_start":372,"line_end":372,"column_start":5,"column_end":79}},{"value":"/ equal to the given one. Returns the replaced value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":95113,"byte_end":95168,"line_start":373,"line_end":373,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":95173,"byte_end":95176,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":95181,"byte_end":95221,"line_start":375,"line_end":375,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":95816,"byte_end":95822,"line_start":394,"line_end":394,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexSet<T, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":95513,"byte_end":95584,"line_start":388,"line_end":388,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":95589,"byte_end":95592,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove(value)`, if you want","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":95597,"byte_end":95667,"line_start":390,"line_end":390,"column_start":5,"column_end":75}},{"value":"/ to preserve the order of the values in the set, use `.shift_remove(value)`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":95672,"byte_end":95751,"line_start":391,"line_end":391,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":95756,"byte_end":95759,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":95764,"byte_end":95804,"line_start":393,"line_end":393,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":96367,"byte_end":96378,"line_start":410,"line_end":410,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexSet<T, S>>::swap_remove","value":"pub fn swap_remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":95956,"byte_end":96027,"line_start":401,"line_end":401,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":96032,"byte_end":96035,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":96040,"byte_end":96113,"line_start":403,"line_end":403,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":96118,"byte_end":96181,"line_start":404,"line_end":404,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":96186,"byte_end":96240,"line_start":405,"line_end":405,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":96245,"byte_end":96248,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Return `false` if `value` was not in the set.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":96253,"byte_end":96302,"line_start":407,"line_end":407,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":96307,"byte_end":96310,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":96315,"byte_end":96355,"line_start":409,"line_end":409,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":96932,"byte_end":96944,"line_start":426,"line_end":426,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<IndexSet<T, S>>::shift_remove","value":"pub fn shift_remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":96526,"byte_end":96597,"line_start":417,"line_end":417,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":96602,"byte_end":96605,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":96610,"byte_end":96677,"line_start":419,"line_end":419,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":96682,"byte_end":96743,"line_start":420,"line_end":420,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":96748,"byte_end":96805,"line_start":421,"line_end":421,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":96810,"byte_end":96813,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ Return `false` if `value` was not in the set.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":96818,"byte_end":96867,"line_start":423,"line_end":423,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":96872,"byte_end":96875,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":96880,"byte_end":96920,"line_start":425,"line_end":425,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":97430,"byte_end":97434,"line_start":441,"line_end":441,"column_start":12,"column_end":16},"name":"take","qualname":"<IndexSet<T, S>>::take","value":"pub fn take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":97093,"byte_end":97167,"line_start":433,"line_end":433,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":97172,"byte_end":97186,"line_start":434,"line_end":434,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":97191,"byte_end":97194,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_take(value)`, if you need to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":97199,"byte_end":97270,"line_start":436,"line_end":436,"column_start":5,"column_end":76}},{"value":"/ preserve the order of the values in the set, use `.shift_take(value)`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":97275,"byte_end":97348,"line_start":437,"line_end":437,"column_start":5,"column_end":78}},{"value":"/ instead.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":97353,"byte_end":97365,"line_start":438,"line_end":438,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":97370,"byte_end":97373,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":97378,"byte_end":97418,"line_start":440,"line_end":440,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":98003,"byte_end":98012,"line_start":458,"line_end":458,"column_start":12,"column_end":21},"name":"swap_take","qualname":"<IndexSet<T, S>>::swap_take","value":"pub fn swap_take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":97571,"byte_end":97645,"line_start":448,"line_end":448,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":97650,"byte_end":97664,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":97669,"byte_end":97672,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":97677,"byte_end":97750,"line_start":451,"line_end":451,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":97755,"byte_end":97818,"line_start":452,"line_end":452,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":97823,"byte_end":97877,"line_start":453,"line_end":453,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":97882,"byte_end":97885,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":97890,"byte_end":97938,"line_start":455,"line_end":455,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":97943,"byte_end":97946,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":97951,"byte_end":97991,"line_start":457,"line_end":457,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":98605,"byte_end":98615,"line_start":475,"line_end":475,"column_start":12,"column_end":22},"name":"shift_take","qualname":"<IndexSet<T, S>>::shift_take","value":"pub fn shift_take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":98178,"byte_end":98252,"line_start":465,"line_end":465,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":98257,"byte_end":98271,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":98276,"byte_end":98279,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":98284,"byte_end":98351,"line_start":468,"line_end":468,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":98356,"byte_end":98417,"line_start":469,"line_end":469,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":98422,"byte_end":98479,"line_start":470,"line_end":470,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":98484,"byte_end":98487,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":98492,"byte_end":98540,"line_start":472,"line_end":472,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":98545,"byte_end":98548,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":98553,"byte_end":98593,"line_start":474,"line_end":474,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":99133,"byte_end":99149,"line_start":489,"line_end":489,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<IndexSet<T, S>>::swap_remove_full","value":"pub fn swap_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, T)> where\nQ: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set return it and the index it had.","sig":null,"attributes":[{"value":"/ Remove the value from the set return it and the index it had.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":98782,"byte_end":98847,"line_start":482,"line_end":482,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":98852,"byte_end":98855,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":98860,"byte_end":98933,"line_start":484,"line_end":484,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":98938,"byte_end":99001,"line_start":485,"line_end":485,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":99006,"byte_end":99060,"line_start":486,"line_end":486,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":99065,"byte_end":99068,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":99073,"byte_end":99121,"line_start":488,"line_end":488,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":99677,"byte_end":99694,"line_start":503,"line_end":503,"column_start":12,"column_end":29},"name":"shift_remove_full","qualname":"<IndexSet<T, S>>::shift_remove_full","value":"pub fn shift_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, T)> where\nQ: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set return it and the index it had.","sig":null,"attributes":[{"value":"/ Remove the value from the set return it and the index it had.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":99331,"byte_end":99396,"line_start":496,"line_end":496,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":99401,"byte_end":99404,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":99409,"byte_end":99476,"line_start":498,"line_end":498,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":99481,"byte_end":99542,"line_start":499,"line_end":499,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":99547,"byte_end":99604,"line_start":500,"line_end":500,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":99609,"byte_end":99612,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":99617,"byte_end":99665,"line_start":502,"line_end":502,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":99967,"byte_end":99970,"line_start":513,"line_end":513,"column_start":12,"column_end":15},"name":"pop","qualname":"<IndexSet<T, S>>::pop","value":"pub fn pop(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last value","sig":null,"attributes":[{"value":"/ Remove the last value","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":99877,"byte_end":99902,"line_start":510,"line_end":510,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":99907,"byte_end":99910,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":99915,"byte_end":99955,"line_start":512,"line_end":512,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":100315,"byte_end":100321,"line_start":524,"line_end":524,"column_start":12,"column_end":18},"name":"retain","qualname":"<IndexSet<T, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Scan through each value in the set and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each value in the set and keep those where the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":100048,"byte_end":100111,"line_start":517,"line_end":517,"column_start":5,"column_end":68}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":100116,"byte_end":100150,"line_start":518,"line_end":518,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":100155,"byte_end":100158,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":100163,"byte_end":100235,"line_start":520,"line_end":520,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":100240,"byte_end":100250,"line_start":521,"line_end":521,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":100255,"byte_end":100258,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":100263,"byte_end":100303,"line_start":523,"line_end":523,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":100566,"byte_end":100570,"line_start":534,"line_end":534,"column_start":12,"column_end":16},"name":"sort","qualname":"<IndexSet<T, S>>::sort","value":"pub fn sort(&mut Self) where T: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values by their default ordering.","sig":null,"attributes":[{"value":"/ Sort the set’s values by their default ordering.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":100457,"byte_end":100511,"line_start":531,"line_end":531,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":100516,"byte_end":100519,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ See `sort_by` for details.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":100524,"byte_end":100554,"line_start":533,"line_end":533,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":100831,"byte_end":100838,"line_start":544,"line_end":544,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<IndexSet<T, S>>::sort_by","value":"pub fn sort_by<F>(&mut Self, F) where F: FnMut(&T, &T) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values in place using the comparison function `compare`.","sig":null,"attributes":[{"value":"/ Sort the set’s values in place using the comparison function `compare`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":100654,"byte_end":100731,"line_start":541,"line_end":541,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":100736,"byte_end":100739,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n)** time and **O(n)** space. The sort is stable.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":100744,"byte_end":100819,"line_start":543,"line_end":543,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":101141,"byte_end":101150,"line_start":555,"line_end":555,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<IndexSet<T, S>>::sorted_by","value":"pub fn sorted_by<F>(Self, F) -> IntoIter<T> where F: FnMut(&T, &T) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the values of the set and return a by value iterator of\n the values with the result.","sig":null,"attributes":[{"value":"/ Sort the values of the set and return a by value iterator of","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":100993,"byte_end":101057,"line_start":551,"line_end":551,"column_start":5,"column_end":69}},{"value":"/ the values with the result.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":101062,"byte_end":101093,"line_start":552,"line_end":552,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":101098,"byte_end":101101,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ The sort is stable.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":101106,"byte_end":101129,"line_start":554,"line_end":554,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":101485,"byte_end":101492,"line_start":567,"line_end":567,"column_start":12,"column_end":19},"name":"reverse","qualname":"<IndexSet<T, S>>::reverse","value":"pub fn reverse(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reverses the order of the set’s values in place.","sig":null,"attributes":[{"value":"/ Reverses the order of the set’s values in place.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":101357,"byte_end":101411,"line_start":564,"line_end":564,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":101416,"byte_end":101419,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time and **O(1)** space.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":101424,"byte_end":101473,"line_start":566,"line_end":566,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":101713,"byte_end":101722,"line_start":578,"line_end":578,"column_start":12,"column_end":21},"name":"get_index","qualname":"<IndexSet<T, S>>::get_index","value":"pub fn get_index(&Self, usize) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a value by index","sig":null,"attributes":[{"value":"/ Get a value by index","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":101574,"byte_end":101598,"line_start":573,"line_end":573,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":101603,"byte_end":101606,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":101611,"byte_end":101658,"line_start":575,"line_end":575,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":101663,"byte_end":101666,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":101671,"byte_end":101701,"line_start":577,"line_end":577,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":102199,"byte_end":102216,"line_start":591,"line_end":591,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<IndexSet<T, S>>::swap_remove_index","value":"pub fn swap_remove_index(&mut Self, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":101823,"byte_end":101861,"line_start":582,"line_end":582,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":101866,"byte_end":101869,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":101874,"byte_end":101921,"line_start":584,"line_end":584,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":101926,"byte_end":101929,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":101934,"byte_end":102007,"line_start":586,"line_end":586,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":102012,"byte_end":102075,"line_start":587,"line_end":587,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":102080,"byte_end":102134,"line_start":588,"line_end":588,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":102139,"byte_end":102142,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":102147,"byte_end":102187,"line_start":590,"line_end":590,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":102698,"byte_end":102716,"line_start":604,"line_end":604,"column_start":12,"column_end":30},"name":"shift_remove_index","qualname":"<IndexSet<T, S>>::shift_remove_index","value":"pub fn shift_remove_index(&mut Self, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":102327,"byte_end":102365,"line_start":595,"line_end":595,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":102370,"byte_end":102373,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":102378,"byte_end":102425,"line_start":597,"line_end":597,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":102430,"byte_end":102433,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":102438,"byte_end":102505,"line_start":599,"line_end":599,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":102510,"byte_end":102571,"line_start":600,"line_end":600,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":102576,"byte_end":102633,"line_start":601,"line_end":601,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":102638,"byte_end":102641,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":102646,"byte_end":102686,"line_start":603,"line_end":603,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":774},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":104130,"byte_end":104138,"line_start":656,"line_end":656,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":776}],"decl_id":null,"docs":" An owning iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ An owning iterator over the items of a `IndexSet`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":103811,"byte_end":103865,"line_start":649,"line_end":649,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":103866,"byte_end":103869,"line_start":650,"line_end":650,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`IndexSet`]","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":103870,"byte_end":103942,"line_start":651,"line_end":651,"column_start":1,"column_end":73}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":103943,"byte_end":104018,"line_start":652,"line_end":652,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":104019,"byte_end":104022,"line_start":653,"line_end":653,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":104023,"byte_end":104061,"line_start":654,"line_end":654,"column_start":1,"column_end":39}},{"value":"/ [`into_iter`]: struct.IndexSet.html#method.into_iter","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":104062,"byte_end":104118,"line_start":655,"line_end":655,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":789},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":105031,"byte_end":105035,"line_start":692,"line_end":692,"column_start":12,"column_end":16},"name":"Iter","qualname":"::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":792}],"decl_id":null,"docs":" An iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ An iterator over the items of a `IndexSet`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":104773,"byte_end":104820,"line_start":685,"line_end":685,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":104821,"byte_end":104824,"line_start":686,"line_end":686,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`IndexSet`].","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":104825,"byte_end":104893,"line_start":687,"line_end":687,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":104894,"byte_end":104929,"line_start":688,"line_end":688,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":104930,"byte_end":104933,"line_start":689,"line_end":689,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":104934,"byte_end":104972,"line_start":690,"line_end":690,"column_start":1,"column_end":39}},{"value":"/ [`iter`]: struct.IndexSet.html#method.iter","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":104973,"byte_end":105019,"line_start":691,"line_end":691,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":809},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":106033,"byte_end":106038,"line_start":735,"line_end":735,"column_start":12,"column_end":17},"name":"Drain","qualname":"::set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":812}],"decl_id":null,"docs":" A draining iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ A draining iterator over the items of a `IndexSet`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":105764,"byte_end":105819,"line_start":728,"line_end":728,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":105820,"byte_end":105823,"line_start":729,"line_end":729,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`IndexSet`].","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":105824,"byte_end":105893,"line_start":730,"line_end":730,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":105894,"byte_end":105929,"line_start":731,"line_end":731,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":105930,"byte_end":105933,"line_start":732,"line_end":732,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":105934,"byte_end":105972,"line_start":733,"line_end":733,"column_start":1,"column_end":39}},{"value":"/ [`drain`]: struct.IndexSet.html#method.drain","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":105973,"byte_end":106021,"line_start":734,"line_end":734,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":108236,"byte_end":108247,"line_start":840,"line_end":840,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<IndexSet<T, S>>::is_disjoint","value":"pub fn is_disjoint<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":108156,"byte_end":108224,"line_start":839,"line_end":839,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":108622,"byte_end":108631,"line_start":852,"line_end":852,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<IndexSet<T, S>>::is_subset","value":"pub fn is_subset<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `self` are contained in `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all elements of `self` are contained in `other`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":108540,"byte_end":108610,"line_start":851,"line_end":851,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":108899,"byte_end":108910,"line_start":860,"line_end":860,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<IndexSet<T, S>>::is_superset","value":"pub fn is_superset<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `other` are contained in `self`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all elements of `other` are contained in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":108817,"byte_end":108887,"line_start":859,"line_end":859,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":873},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":109336,"byte_end":109346,"line_start":875,"line_end":875,"column_start":12,"column_end":22},"name":"Difference","qualname":"::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878}],"decl_id":null,"docs":" A lazy iterator producing elements in the difference of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the difference of `IndexSet`s.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":109035,"byte_end":109107,"line_start":868,"line_end":868,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":109108,"byte_end":109111,"line_start":869,"line_end":869,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`difference`] method on [`IndexSet`].","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":109112,"byte_end":109186,"line_start":870,"line_end":870,"column_start":1,"column_end":75}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":109187,"byte_end":109222,"line_start":871,"line_end":871,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":109223,"byte_end":109226,"line_start":872,"line_end":872,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":109227,"byte_end":109265,"line_start":873,"line_end":873,"column_start":1,"column_end":39}},{"value":"/ [`difference`]: struct.IndexSet.html#method.difference","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":109266,"byte_end":109324,"line_start":874,"line_end":874,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":898},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":110899,"byte_end":110911,"line_start":942,"line_end":942,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":902},{"krate":0,"index":903}],"decl_id":null,"docs":" A lazy iterator producing elements in the intersection of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the intersection of `IndexSet`s.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":110590,"byte_end":110664,"line_start":935,"line_end":935,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":110665,"byte_end":110668,"line_start":936,"line_end":936,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`intersection`] method on [`IndexSet`].","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":110669,"byte_end":110745,"line_start":937,"line_end":937,"column_start":1,"column_end":77}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":110746,"byte_end":110781,"line_start":938,"line_end":938,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":110782,"byte_end":110785,"line_start":939,"line_end":939,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":110786,"byte_end":110824,"line_start":940,"line_end":940,"column_start":1,"column_end":39}},{"value":"/ [`intersection`]: struct.IndexSet.html#method.intersection","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":110825,"byte_end":110887,"line_start":941,"line_end":941,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":923},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":112504,"byte_end":112523,"line_start":1009,"line_end":1009,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":928}],"decl_id":null,"docs":" A lazy iterator producing elements in the symmetric difference of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the symmetric difference of `IndexSet`s.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":112163,"byte_end":112245,"line_start":1002,"line_end":1002,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":112246,"byte_end":112249,"line_start":1003,"line_end":1003,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`symmetric_difference`] method on","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":112250,"byte_end":112320,"line_start":1004,"line_end":1004,"column_start":1,"column_end":71}},{"value":"/ [`IndexSet`]. See its documentation for more.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":112321,"byte_end":112370,"line_start":1005,"line_end":1005,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":112371,"byte_end":112374,"line_start":1006,"line_end":1006,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":112375,"byte_end":112413,"line_start":1007,"line_end":1007,"column_start":1,"column_end":39}},{"value":"/ [`symmetric_difference`]: struct.IndexSet.html#method.symmetric_difference","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":112414,"byte_end":112492,"line_start":1008,"line_end":1008,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":955},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":114041,"byte_end":114046,"line_start":1074,"line_end":1074,"column_start":12,"column_end":17},"name":"Union","qualname":"::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":959}],"decl_id":null,"docs":" A lazy iterator producing elements in the union of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the union of `IndexSet`s.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":113760,"byte_end":113827,"line_start":1067,"line_end":1067,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":113828,"byte_end":113831,"line_start":1068,"line_end":1068,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`union`] method on [`IndexSet`].","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":113832,"byte_end":113901,"line_start":1069,"line_end":1069,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":113902,"byte_end":113937,"line_start":1070,"line_end":1070,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":113938,"byte_end":113941,"line_start":1071,"line_end":1071,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":113942,"byte_end":113980,"line_start":1072,"line_end":1072,"column_start":1,"column_end":39}},{"value":"/ [`union`]: struct.IndexSet.html#method.union","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":113981,"byte_end":114029,"line_start":1073,"line_end":1073,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1028},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":5248,"byte_end":5253,"line_start":184,"line_end":184,"column_start":10,"column_end":15},"name":"Entry","qualname":"::Entries::Entry","value":"type Entry;","parent":{"krate":0,"index":1027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/equivalent.rs","byte_start":9305,"byte_end":9306,"line_start":18,"line_end":18,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":11134,"byte_end":11142,"line_start":51,"line_end":51,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":72431,"byte_end":72443,"line_start":14,"line_end":14,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":72666,"byte_end":72678,"line_start":21,"line_end":21,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":82116,"byte_end":82129,"line_start":269,"line_end":269,"column_start":40,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":82244,"byte_end":82257,"line_start":272,"line_end":272,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":60830,"byte_end":60842,"line_start":37,"line_end":37,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":61528,"byte_end":61540,"line_start":60,"line_end":60,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":61859,"byte_end":61871,"line_start":73,"line_end":73,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":62374,"byte_end":62386,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":66787,"byte_end":66792,"line_start":239,"line_end":239,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":68669,"byte_end":68674,"line_start":303,"line_end":303,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":69078,"byte_end":69091,"line_start":315,"line_end":315,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":70651,"byte_end":70664,"line_start":358,"line_end":358,"column_start":51,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":71143,"byte_end":71154,"line_start":377,"line_end":377,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":71606,"byte_end":71617,"line_start":397,"line_end":397,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":15131,"byte_end":15139,"line_start":81,"line_end":81,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":15537,"byte_end":15545,"line_start":100,"line_end":100,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":16069,"byte_end":16077,"line_start":126,"line_end":126,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":16539,"byte_end":16547,"line_start":144,"line_end":144,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":16973,"byte_end":16981,"line_start":161,"line_end":161,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":20371,"byte_end":20379,"line_start":278,"line_end":278,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":385},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":33043,"byte_end":33051,"line_start":677,"line_end":677,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":34959,"byte_end":34963,"line_start":734,"line_end":734,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":35078,"byte_end":35082,"line_start":740,"line_end":740,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":35240,"byte_end":35244,"line_start":746,"line_end":746,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":35395,"byte_end":35399,"line_start":753,"line_end":753,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":35551,"byte_end":35555,"line_start":761,"line_end":761,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":36048,"byte_end":36054,"line_start":778,"line_end":778,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":36171,"byte_end":36177,"line_start":784,"line_end":784,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":36337,"byte_end":36343,"line_start":790,"line_end":790,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":36494,"byte_end":36500,"line_start":797,"line_end":797,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":36654,"byte_end":36660,"line_start":805,"line_end":805,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":37178,"byte_end":37187,"line_start":822,"line_end":822,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":37308,"byte_end":37317,"line_start":828,"line_end":828,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":37477,"byte_end":37486,"line_start":834,"line_end":834,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":37908,"byte_end":37912,"line_start":851,"line_end":851,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":38033,"byte_end":38037,"line_start":857,"line_end":857,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":38192,"byte_end":38196,"line_start":863,"line_end":863,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":38347,"byte_end":38351,"line_start":870,"line_end":870,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":38515,"byte_end":38519,"line_start":878,"line_end":878,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":39030,"byte_end":39037,"line_start":895,"line_end":895,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":39165,"byte_end":39172,"line_start":901,"line_end":901,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":39330,"byte_end":39337,"line_start":907,"line_end":907,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":39827,"byte_end":39835,"line_start":924,"line_end":924,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":39949,"byte_end":39957,"line_start":930,"line_end":930,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":40113,"byte_end":40121,"line_start":936,"line_end":936,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":40242,"byte_end":40250,"line_start":942,"line_end":942,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":40810,"byte_end":40815,"line_start":960,"line_end":960,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":40933,"byte_end":40938,"line_start":966,"line_end":966,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":41453,"byte_end":41461,"line_start":986,"line_end":986,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":42245,"byte_end":42253,"line_start":1018,"line_end":1018,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":43421,"byte_end":43429,"line_start":1063,"line_end":1063,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":44506,"byte_end":44514,"line_start":1105,"line_end":1105,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":45608,"byte_end":45616,"line_start":1147,"line_end":1147,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":45964,"byte_end":45972,"line_start":1158,"line_end":1158,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":46556,"byte_end":46564,"line_start":1177,"line_end":1177,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":47863,"byte_end":47871,"line_start":1210,"line_end":1210,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":48267,"byte_end":48275,"line_start":1224,"line_end":1224,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":48495,"byte_end":48503,"line_start":1234,"line_end":1234,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":48868,"byte_end":48876,"line_start":1251,"line_end":1251,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":86648,"byte_end":86656,"line_start":71,"line_end":71,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":86918,"byte_end":86926,"line_start":87,"line_end":87,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":87437,"byte_end":87445,"line_start":113,"line_end":113,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":87842,"byte_end":87850,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":88283,"byte_end":88291,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":90583,"byte_end":90591,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":703},{"krate":0,"index":706},{"krate":0,"index":709},{"krate":0,"index":712},{"krate":0,"index":715},{"krate":0,"index":717},{"krate":0,"index":720},{"krate":0,"index":723},{"krate":0,"index":725},{"krate":0,"index":727},{"krate":0,"index":729},{"krate":0,"index":731},{"krate":0,"index":733},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":741},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":749},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":101553,"byte_end":101561,"line_start":572,"line_end":572,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":765},{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":103514,"byte_end":103522,"line_start":637,"line_end":637,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":104204,"byte_end":104212,"line_start":660,"line_end":660,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":104309,"byte_end":104317,"line_start":666,"line_end":666,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":104461,"byte_end":104469,"line_start":672,"line_end":672,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":104572,"byte_end":104580,"line_start":678,"line_end":678,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":105111,"byte_end":105115,"line_start":696,"line_end":696,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":105224,"byte_end":105228,"line_start":702,"line_end":702,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":105380,"byte_end":105384,"line_start":708,"line_end":708,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":105474,"byte_end":105478,"line_start":714,"line_end":714,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":105624,"byte_end":105628,"line_start":722,"line_end":722,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":106109,"byte_end":106114,"line_start":739,"line_end":739,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":106215,"byte_end":106220,"line_start":745,"line_end":745,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":106492,"byte_end":106500,"line_start":758,"line_end":758,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":106719,"byte_end":106727,"line_start":769,"line_end":769,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":107022,"byte_end":107030,"line_start":782,"line_end":782,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":107281,"byte_end":107289,"line_start":793,"line_end":793,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":107570,"byte_end":107578,"line_start":804,"line_end":804,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":107794,"byte_end":107802,"line_start":816,"line_end":816,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":108016,"byte_end":108024,"line_start":827,"line_end":827,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":108091,"byte_end":108099,"line_start":834,"line_end":834,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":868},{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":109444,"byte_end":109454,"line_start":880,"line_end":880,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":109888,"byte_end":109898,"line_start":901,"line_end":901,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":110208,"byte_end":110218,"line_start":916,"line_end":916,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":110384,"byte_end":110394,"line_start":925,"line_end":925,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":111009,"byte_end":111021,"line_start":947,"line_end":947,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":111454,"byte_end":111466,"line_start":968,"line_end":968,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":111775,"byte_end":111787,"line_start":983,"line_end":983,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":111955,"byte_end":111967,"line_start":992,"line_end":992,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":112640,"byte_end":112659,"line_start":1013,"line_end":1013,"column_start":34,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":113114,"byte_end":113133,"line_start":1037,"line_end":1037,"column_start":41,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":113334,"byte_end":113353,"line_start":1048,"line_end":1048,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":113518,"byte_end":113537,"line_start":1056,"line_end":1056,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":114142,"byte_end":114147,"line_start":1078,"line_end":1078,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":114570,"byte_end":114575,"line_start":1101,"line_end":1101,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":114744,"byte_end":114749,"line_start":1111,"line_end":1111,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":114890,"byte_end":114895,"line_start":1119,"line_end":1119,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":3975,"byte_end":3984,"line_start":121,"line_end":121,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":4182,"byte_end":4188,"line_start":135,"line_end":135,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":4581,"byte_end":4587,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":3492,"byte_end":3495,"line_start":102,"line_end":102,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":63}},{"kind":"Mod","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":3505,"byte_end":3508,"line_start":103,"line_end":103,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":629}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/equivalent.rs","byte_start":9305,"byte_end":9306,"line_start":18,"line_end":18,"column_start":46,"column_end":47},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":19},"to":{"krate":0,"index":15}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/mutable_keys.rs","byte_start":11134,"byte_end":11142,"line_start":51,"line_end":51,"column_start":31,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":279},"to":{"krate":0,"index":30}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":72431,"byte_end":72443,"line_start":14,"line_end":14,"column_start":21,"column_end":33},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":77},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":72666,"byte_end":72678,"line_start":21,"line_end":21,"column_start":12,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":82116,"byte_end":82129,"line_start":269,"line_end":269,"column_start":40,"column_end":53},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":106},"to":{"krate":1,"index":1939}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core/raw.rs","byte_start":82244,"byte_end":82257,"line_start":272,"line_end":272,"column_start":16,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":60830,"byte_end":60842,"line_start":37,"line_end":37,"column_start":22,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":144},"to":{"krate":1,"index":1625}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":61528,"byte_end":61540,"line_start":60,"line_end":60,"column_start":27,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":144},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":61859,"byte_end":61871,"line_start":73,"line_end":73,"column_start":24,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":144},"to":{"krate":0,"index":1027}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":62374,"byte_end":62386,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":66787,"byte_end":66792,"line_start":239,"line_end":239,"column_start":16,"column_end":21},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":68669,"byte_end":68674,"line_start":303,"line_end":303,"column_start":51,"column_end":56},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":191},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":69078,"byte_end":69091,"line_start":315,"line_end":315,"column_start":12,"column_end":25},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":70651,"byte_end":70664,"line_start":358,"line_end":358,"column_start":51,"column_end":64},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":106},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":71143,"byte_end":71154,"line_start":377,"line_end":377,"column_start":16,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map/core.rs","byte_start":71606,"byte_end":71617,"line_start":397,"line_end":397,"column_start":39,"column_end":50},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":230},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":15131,"byte_end":15139,"line_start":81,"line_end":81,"column_start":25,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":279},"to":{"krate":1,"index":1625}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":15537,"byte_end":15545,"line_start":100,"line_end":100,"column_start":27,"column_end":35},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":279},"to":{"krate":0,"index":1027}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":16069,"byte_end":16077,"line_start":126,"line_end":126,"column_start":30,"column_end":38},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":279},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":16539,"byte_end":16547,"line_start":144,"line_end":144,"column_start":12,"column_end":20},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":16973,"byte_end":16981,"line_start":161,"line_end":161,"column_start":15,"column_end":23},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":20371,"byte_end":20379,"line_start":278,"line_end":278,"column_start":15,"column_end":23},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":33043,"byte_end":33051,"line_start":677,"line_end":677,"column_start":15,"column_end":23},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":34959,"byte_end":34963,"line_start":734,"line_end":734,"column_start":29,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":397},"to":{"krate":1,"index":4989}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":35078,"byte_end":35082,"line_start":740,"line_end":740,"column_start":36,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":397},"to":{"krate":1,"index":4921}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":35240,"byte_end":35244,"line_start":746,"line_end":746,"column_start":34,"column_end":38},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":397},"to":{"krate":1,"index":4944}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":35395,"byte_end":35399,"line_start":753,"line_end":753,"column_start":22,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":397},"to":{"krate":1,"index":1625}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":35551,"byte_end":35555,"line_start":761,"line_end":761,"column_start":39,"column_end":43},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":397},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":36048,"byte_end":36054,"line_start":778,"line_end":778,"column_start":29,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":423},"to":{"krate":1,"index":4989}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":36171,"byte_end":36177,"line_start":784,"line_end":784,"column_start":36,"column_end":42},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":423},"to":{"krate":1,"index":4921}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":36337,"byte_end":36343,"line_start":790,"line_end":790,"column_start":34,"column_end":40},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":423},"to":{"krate":1,"index":4944}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":36494,"byte_end":36500,"line_start":797,"line_end":797,"column_start":22,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":423},"to":{"krate":1,"index":1625}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":36654,"byte_end":36660,"line_start":805,"line_end":805,"column_start":39,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":423},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":37178,"byte_end":37187,"line_start":822,"line_end":822,"column_start":29,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":449},"to":{"krate":1,"index":4989}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":37308,"byte_end":37317,"line_start":828,"line_end":828,"column_start":36,"column_end":45},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":449},"to":{"krate":1,"index":4921}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":37477,"byte_end":37486,"line_start":834,"line_end":834,"column_start":34,"column_end":43},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":449},"to":{"krate":1,"index":4944}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":37908,"byte_end":37912,"line_start":851,"line_end":851,"column_start":29,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":467},"to":{"krate":1,"index":4989}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":38033,"byte_end":38037,"line_start":857,"line_end":857,"column_start":36,"column_end":40},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":467},"to":{"krate":1,"index":4921}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":38192,"byte_end":38196,"line_start":863,"line_end":863,"column_start":34,"column_end":38},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":467},"to":{"krate":1,"index":4944}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":38347,"byte_end":38351,"line_start":870,"line_end":870,"column_start":22,"column_end":26},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":467},"to":{"krate":1,"index":1625}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":38515,"byte_end":38519,"line_start":878,"line_end":878,"column_start":51,"column_end":55},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":467},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":39030,"byte_end":39037,"line_start":895,"line_end":895,"column_start":29,"column_end":36},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":493},"to":{"krate":1,"index":4989}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":39165,"byte_end":39172,"line_start":901,"line_end":901,"column_start":36,"column_end":43},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":493},"to":{"krate":1,"index":4921}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":39330,"byte_end":39337,"line_start":907,"line_end":907,"column_start":34,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":493},"to":{"krate":1,"index":4944}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":39827,"byte_end":39835,"line_start":924,"line_end":924,"column_start":25,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":511},"to":{"krate":1,"index":4989}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":39949,"byte_end":39957,"line_start":930,"line_end":930,"column_start":36,"column_end":44},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":511},"to":{"krate":1,"index":4921}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":40113,"byte_end":40121,"line_start":936,"line_end":936,"column_start":34,"column_end":42},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":511},"to":{"krate":1,"index":4944}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":40242,"byte_end":40250,"line_start":942,"line_end":942,"column_start":51,"column_end":59},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":511},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":40810,"byte_end":40815,"line_start":960,"line_end":960,"column_start":25,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":531},"to":{"krate":1,"index":4989}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":40933,"byte_end":40938,"line_start":966,"line_end":966,"column_start":36,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":531},"to":{"krate":1,"index":4921}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":41453,"byte_end":41461,"line_start":986,"line_end":986,"column_start":32,"column_end":40},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":279},"to":{"krate":1,"index":4899}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":42245,"byte_end":42253,"line_start":1018,"line_end":1018,"column_start":40,"column_end":48},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":279},"to":{"krate":1,"index":2179}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":43421,"byte_end":43429,"line_start":1063,"line_end":1063,"column_start":43,"column_end":51},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":279},"to":{"krate":1,"index":2183}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":44506,"byte_end":44514,"line_start":1105,"line_end":1105,"column_start":32,"column_end":40},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":279},"to":{"krate":1,"index":2179}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":45608,"byte_end":45616,"line_start":1147,"line_end":1147,"column_start":35,"column_end":43},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":279},"to":{"krate":1,"index":2183}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":45964,"byte_end":45972,"line_start":1158,"line_end":1158,"column_start":40,"column_end":48},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":279},"to":{"krate":1,"index":4895}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":46556,"byte_end":46564,"line_start":1177,"line_end":1177,"column_start":34,"column_end":42},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":279},"to":{"krate":1,"index":4908}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":47863,"byte_end":47871,"line_start":1210,"line_end":1210,"column_start":46,"column_end":54},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":279},"to":{"krate":1,"index":4908}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":48267,"byte_end":48275,"line_start":1224,"line_end":1224,"column_start":27,"column_end":35},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":279},"to":{"krate":1,"index":1915}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":48495,"byte_end":48503,"line_start":1234,"line_end":1234,"column_start":60,"column_end":68},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":279},"to":{"krate":1,"index":1653}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/map.rs","byte_start":48868,"byte_end":48876,"line_start":1251,"line_end":1251,"column_start":22,"column_end":30},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":279},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":86648,"byte_end":86656,"line_start":71,"line_end":71,"column_start":22,"column_end":30},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":656},"to":{"krate":1,"index":1625}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":86918,"byte_end":86926,"line_start":87,"line_end":87,"column_start":24,"column_end":32},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":656},"to":{"krate":0,"index":1027}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":87437,"byte_end":87445,"line_start":113,"line_end":113,"column_start":27,"column_end":35},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":656},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":87842,"byte_end":87850,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":88283,"byte_end":88291,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":90583,"byte_end":90591,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":101553,"byte_end":101561,"line_start":572,"line_end":572,"column_start":12,"column_end":20},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":103514,"byte_end":103522,"line_start":637,"line_end":637,"column_start":29,"column_end":37},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":656},"to":{"krate":1,"index":2179}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":104204,"byte_end":104212,"line_start":660,"line_end":660,"column_start":22,"column_end":30},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":774},"to":{"krate":1,"index":4989}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":104309,"byte_end":104317,"line_start":666,"line_end":666,"column_start":33,"column_end":41},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":774},"to":{"krate":1,"index":4921}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":104461,"byte_end":104469,"line_start":672,"line_end":672,"column_start":31,"column_end":39},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":774},"to":{"krate":1,"index":4944}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":104572,"byte_end":104580,"line_start":678,"line_end":678,"column_start":36,"column_end":44},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":774},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":105111,"byte_end":105115,"line_start":696,"line_end":696,"column_start":26,"column_end":30},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":789},"to":{"krate":1,"index":4989}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":105224,"byte_end":105228,"line_start":702,"line_end":702,"column_start":33,"column_end":37},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":789},"to":{"krate":1,"index":4921}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":105380,"byte_end":105384,"line_start":708,"line_end":708,"column_start":31,"column_end":35},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":789},"to":{"krate":1,"index":4944}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":105474,"byte_end":105478,"line_start":714,"line_end":714,"column_start":19,"column_end":23},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":789},"to":{"krate":1,"index":1625}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":105624,"byte_end":105628,"line_start":722,"line_end":722,"column_start":36,"column_end":40},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":789},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":106109,"byte_end":106114,"line_start":739,"line_end":739,"column_start":22,"column_end":27},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":809},"to":{"krate":1,"index":4989}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":106215,"byte_end":106220,"line_start":745,"line_end":745,"column_start":33,"column_end":38},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":809},"to":{"krate":1,"index":4921}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":106492,"byte_end":106500,"line_start":758,"line_end":758,"column_start":29,"column_end":37},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":656},"to":{"krate":1,"index":4899}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":106719,"byte_end":106727,"line_start":769,"line_end":769,"column_start":32,"column_end":40},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":656},"to":{"krate":1,"index":4895}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":107022,"byte_end":107030,"line_start":782,"line_end":782,"column_start":26,"column_end":34},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":656},"to":{"krate":1,"index":4908}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":107281,"byte_end":107289,"line_start":793,"line_end":793,"column_start":34,"column_end":42},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":656},"to":{"krate":1,"index":4908}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":107570,"byte_end":107578,"line_start":804,"line_end":804,"column_start":24,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":656},"to":{"krate":1,"index":1915}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":107794,"byte_end":107802,"line_start":816,"line_end":816,"column_start":48,"column_end":56},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":656},"to":{"krate":1,"index":1653}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":108016,"byte_end":108024,"line_start":827,"line_end":827,"column_start":19,"column_end":27},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":656},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":108091,"byte_end":108099,"line_start":834,"line_end":834,"column_start":12,"column_end":20},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":109444,"byte_end":109454,"line_start":880,"line_end":880,"column_start":29,"column_end":39},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":873},"to":{"krate":1,"index":4989}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":109888,"byte_end":109898,"line_start":901,"line_end":901,"column_start":36,"column_end":46},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":873},"to":{"krate":1,"index":4921}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":110208,"byte_end":110218,"line_start":916,"line_end":916,"column_start":22,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":873},"to":{"krate":1,"index":1625}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":110384,"byte_end":110394,"line_start":925,"line_end":925,"column_start":27,"column_end":37},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":873},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":111009,"byte_end":111021,"line_start":947,"line_end":947,"column_start":29,"column_end":41},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":898},"to":{"krate":1,"index":4989}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":111454,"byte_end":111466,"line_start":968,"line_end":968,"column_start":36,"column_end":48},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":898},"to":{"krate":1,"index":4921}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":111775,"byte_end":111787,"line_start":983,"line_end":983,"column_start":22,"column_end":34},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":898},"to":{"krate":1,"index":1625}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":111955,"byte_end":111967,"line_start":992,"line_end":992,"column_start":27,"column_end":39},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":898},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":112640,"byte_end":112659,"line_start":1013,"line_end":1013,"column_start":34,"column_end":53},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":923},"to":{"krate":1,"index":4989}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":113114,"byte_end":113133,"line_start":1037,"line_end":1037,"column_start":41,"column_end":60},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":923},"to":{"krate":1,"index":4921}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":113334,"byte_end":113353,"line_start":1048,"line_end":1048,"column_start":27,"column_end":46},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":923},"to":{"krate":1,"index":1625}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":113518,"byte_end":113537,"line_start":1056,"line_end":1056,"column_start":32,"column_end":51},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":923},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":114142,"byte_end":114147,"line_start":1078,"line_end":1078,"column_start":29,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":955},"to":{"krate":1,"index":4989}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":114570,"byte_end":114575,"line_start":1101,"line_end":1101,"column_start":36,"column_end":41},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":955},"to":{"krate":1,"index":4921}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":114744,"byte_end":114749,"line_start":1111,"line_end":1111,"column_start":22,"column_end":27},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":955},"to":{"krate":1,"index":1625}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/set.rs","byte_start":114890,"byte_end":114895,"line_start":1119,"line_end":1119,"column_start":27,"column_end":32},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":955},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":3975,"byte_end":3984,"line_start":121,"line_end":121,"column_start":6,"column_end":15},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":4182,"byte_end":4188,"line_start":135,"line_end":135,"column_start":22,"column_end":28},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1118},"to":{"krate":1,"index":1625}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.6.0/src/lib.rs","byte_start":4581,"byte_end":4587,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1118},"to":{"krate":4294967295,"index":4294967295}}]}