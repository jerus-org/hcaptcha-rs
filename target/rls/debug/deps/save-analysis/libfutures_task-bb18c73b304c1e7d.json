{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7","program":"/home/gorta/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_task","--edition=2018","/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=bb18c73b304c1e7d","-C","extra-filename=-bb18c73b304c1e7d","--out-dir","/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps","-L","dependency=/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/gorta/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps/libfutures_task-bb18c73b304c1e7d.rmeta"},"prelude":{"crate_id":{"name":"futures_task","disambiguator":[2474850285057534667,9778541337613146272]},"crate_root":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src","external_crates":[{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16851962707842592855,4932765248485690217]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3049591816127030880,10952373373500329976]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[11587085401131637304,2097967498245787009]}}],"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/lib.rs","byte_start":0,"byte_end":2042,"line_start":1,"line_end":62,"column_start":1,"column_end":70}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":10},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/lib.rs","byte_start":1341,"byte_end":1346,"line_start":35,"line_end":35,"column_start":24,"column_end":29},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":16},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/lib.rs","byte_start":1348,"byte_end":1358,"line_start":35,"line_end":35,"column_start":31,"column_end":41},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":13},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/lib.rs","byte_start":1360,"byte_end":1370,"line_start":35,"line_end":35,"column_start":43,"column_end":53},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":89},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/lib.rs","byte_start":1804,"byte_end":1813,"line_start":55,"line_end":55,"column_start":29,"column_end":38},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":55},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/lib.rs","byte_start":1815,"byte_end":1829,"line_start":55,"line_end":55,"column_start":40,"column_end":54},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/lib.rs","byte_start":1831,"byte_end":1846,"line_start":55,"line_end":55,"column_start":56,"column_end":71},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":151},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/lib.rs","byte_start":1893,"byte_end":1903,"line_start":58,"line_end":58,"column_start":28,"column_end":38},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":8495},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/lib.rs","byte_start":1994,"byte_end":2001,"line_start":62,"line_end":62,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":32543},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/lib.rs","byte_start":2003,"byte_end":2007,"line_start":62,"line_end":62,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":8505},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/lib.rs","byte_start":2009,"byte_end":2014,"line_start":62,"line_end":62,"column_start":37,"column_end":42},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":32583},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/lib.rs","byte_start":2016,"byte_end":2024,"line_start":62,"line_end":62,"column_start":44,"column_end":52},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":32592},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/lib.rs","byte_start":2026,"byte_end":2040,"line_start":62,"line_end":62,"column_start":54,"column_end":68},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/lib.rs","byte_start":0,"byte_end":2042,"line_start":1,"line_end":62,"column_start":1,"column_end":70},"name":"","qualname":"::","value":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":5},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158}],"decl_id":null,"docs":" Tools for working with tasks.\n","sig":null,"attributes":[{"value":"! Tools for working with tasks.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/lib.rs","byte_start":0,"byte_end":33,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"no_std","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/lib.rs","byte_start":150,"byte_end":156,"line_start":5,"line_end":5,"column_start":35,"column_end":41}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/lib.rs","byte_start":160,"byte_end":248,"line_start":7,"line_end":7,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/lib.rs","byte_start":416,"byte_end":437,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"allow(clippy :: mem_replace_with_default, clippy ::\n        match_like_matches_macro)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/lib.rs","byte_start":642,"byte_end":719,"line_start":15,"line_end":15,"column_start":1,"column_end":78}}]},{"kind":"Trait","id":{"krate":0,"index":10},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":2214,"byte_end":2219,"line_start":6,"line_end":6,"column_start":11,"column_end":16},"name":"Spawn","qualname":"::spawn::Spawn","value":"Spawn","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12}],"decl_id":null,"docs":" The `Spawn` trait allows for pushing futures onto an executor that will\n run them to completion.\n","sig":null,"attributes":[{"value":"/ The `Spawn` trait allows for pushing futures onto an executor that will","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":2100,"byte_end":2175,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ run them to completion.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":2176,"byte_end":2203,"line_start":5,"line_end":5,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":2539,"byte_end":2548,"line_start":15,"line_end":15,"column_start":8,"column_end":17},"name":"spawn_obj","qualname":"::spawn::Spawn::spawn_obj","value":"pub fn spawn_obj(&Self, FutureObj) -> Result<(), SpawnError>","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Spawns a future that will be run to completion.","sig":null,"attributes":[{"value":"/ Spawns a future that will be run to completion.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":2226,"byte_end":2277,"line_start":7,"line_end":7,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":2282,"byte_end":2285,"line_start":8,"line_end":8,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":2290,"byte_end":2302,"line_start":9,"line_end":9,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":2307,"byte_end":2310,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ The executor may be unable to spawn tasks. Spawn errors should","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":2315,"byte_end":2381,"line_start":11,"line_end":11,"column_start":5,"column_end":71}},{"value":"/ represent relatively rare scenarios, such as the executor","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":2386,"byte_end":2447,"line_start":12,"line_end":12,"column_start":5,"column_end":66}},{"value":"/ having been shut down so that it is no longer able to accept","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":2452,"byte_end":2516,"line_start":13,"line_end":13,"column_start":5,"column_end":69}},{"value":"/ tasks.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":2521,"byte_end":2531,"line_start":14,"line_end":14,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":2958,"byte_end":2964,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"status","qualname":"::spawn::Spawn::status","value":"pub fn status(&Self) -> Result<(), SpawnError>","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Determines whether the executor is able to spawn new tasks.","sig":null,"attributes":[{"value":"/ Determines whether the executor is able to spawn new tasks.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":2620,"byte_end":2683,"line_start":17,"line_end":17,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":2688,"byte_end":2691,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will return `Ok` when the executor is *likely*","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":2696,"byte_end":2758,"line_start":19,"line_end":19,"column_start":5,"column_end":67}},{"value":"/ (but not guaranteed) to accept a subsequent spawn attempt.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":2763,"byte_end":2825,"line_start":20,"line_end":20,"column_start":5,"column_end":67}},{"value":"/ Likewise, an `Err` return means that `spawn` is likely, but","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":2830,"byte_end":2893,"line_start":21,"line_end":21,"column_start":5,"column_end":68}},{"value":"/ not guaranteed, to yield an error.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":2898,"byte_end":2936,"line_start":22,"line_end":22,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":2941,"byte_end":2950,"line_start":23,"line_end":23,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":13},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":3141,"byte_end":3151,"line_start":31,"line_end":31,"column_start":11,"column_end":21},"name":"LocalSpawn","qualname":"::spawn::LocalSpawn","value":"LocalSpawn","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":15}],"decl_id":null,"docs":" The `LocalSpawn` is similar to [`Spawn`], but allows spawning futures\n that don't implement `Send`.\n","sig":null,"attributes":[{"value":"/ The `LocalSpawn` is similar to [`Spawn`], but allows spawning futures","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":3024,"byte_end":3097,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/ that don't implement `Send`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":3098,"byte_end":3130,"line_start":30,"line_end":30,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":3471,"byte_end":3486,"line_start":40,"line_end":40,"column_start":8,"column_end":23},"name":"spawn_local_obj","qualname":"::spawn::LocalSpawn::spawn_local_obj","value":"pub fn spawn_local_obj(&Self, LocalFutureObj) -> Result<(), SpawnError>","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Spawns a future that will be run to completion.","sig":null,"attributes":[{"value":"/ Spawns a future that will be run to completion.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":3158,"byte_end":3209,"line_start":32,"line_end":32,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":3214,"byte_end":3217,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":3222,"byte_end":3234,"line_start":34,"line_end":34,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":3239,"byte_end":3242,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ The executor may be unable to spawn tasks. Spawn errors should","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":3247,"byte_end":3313,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ represent relatively rare scenarios, such as the executor","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":3318,"byte_end":3379,"line_start":37,"line_end":37,"column_start":5,"column_end":66}},{"value":"/ having been shut down so that it is no longer able to accept","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":3384,"byte_end":3448,"line_start":38,"line_end":38,"column_start":5,"column_end":69}},{"value":"/ tasks.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":3453,"byte_end":3463,"line_start":39,"line_end":39,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":3901,"byte_end":3913,"line_start":49,"line_end":49,"column_start":8,"column_end":20},"name":"status_local","qualname":"::spawn::LocalSpawn::status_local","value":"pub fn status_local(&Self) -> Result<(), SpawnError>","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Determines whether the executor is able to spawn new tasks.","sig":null,"attributes":[{"value":"/ Determines whether the executor is able to spawn new tasks.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":3563,"byte_end":3626,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":3631,"byte_end":3634,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method will return `Ok` when the executor is *likely*","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":3639,"byte_end":3701,"line_start":44,"line_end":44,"column_start":5,"column_end":67}},{"value":"/ (but not guaranteed) to accept a subsequent spawn attempt.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":3706,"byte_end":3768,"line_start":45,"line_end":45,"column_start":5,"column_end":67}},{"value":"/ Likewise, an `Err` return means that `spawn` is likely, but","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":3773,"byte_end":3836,"line_start":46,"line_end":46,"column_start":5,"column_end":68}},{"value":"/ not guaranteed, to yield an error.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":3841,"byte_end":3879,"line_start":47,"line_end":47,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":3884,"byte_end":3893,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":16},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":4028,"byte_end":4038,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"SpawnError","qualname":"::spawn::SpawnError","value":"SpawnError {  }","parent":null,"children":[{"krate":0,"index":17}],"decl_id":null,"docs":" An error that occurred during spawning.\n","sig":null,"attributes":[{"value":"/ An error that occurred during spawning.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":3973,"byte_end":4016,"line_start":54,"line_end":54,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":4537,"byte_end":4545,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<SpawnError>::shutdown","value":"pub fn shutdown() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Spawning failed because the executor has been shut down.\n","sig":null,"attributes":[{"value":"/ Spawning failed because the executor has been shut down.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":4465,"byte_end":4525,"line_start":75,"line_end":75,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":4674,"byte_end":4685,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<SpawnError>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether spawning failed to the executor being shut down.\n","sig":null,"attributes":[{"value":"/ Check whether spawning failed to the executor being shut down.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":4596,"byte_end":4662,"line_start":80,"line_end":80,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":55},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":8296,"byte_end":8310,"line_start":16,"line_end":16,"column_start":12,"column_end":26},"name":"LocalFutureObj","qualname":"::future_obj::LocalFutureObj","value":"LocalFutureObj {  }","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60}],"decl_id":null,"docs":" A custom trait object for polling futures, roughly akin to\n `Box<dyn Future<Output = T> + 'a>`.","sig":null,"attributes":[{"value":"/ A custom trait object for polling futures, roughly akin to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":8007,"byte_end":8069,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/ `Box<dyn Future<Output = T> + 'a>`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":8070,"byte_end":8109,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":8110,"byte_end":8113,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This custom trait object was introduced as currently it is not possible to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":8114,"byte_end":8192,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ take `dyn Trait` by value and `Box<dyn Trait>` is not available in no_std","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":8193,"byte_end":8270,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ contexts.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":8271,"byte_end":8284,"line_start":15,"line_end":15,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":9313,"byte_end":9316,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalFutureObj>::new","value":"pub fn new<F: UnsafeFutureObj + 'a>(F) -> LocalFutureObj","parent":null,"children":[],"decl_id":null,"docs":" Create a `LocalFutureObj` from a custom trait object representation.\n","sig":null,"attributes":[{"value":"/ Create a `LocalFutureObj` from a custom trait object representation.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":9215,"byte_end":9287,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":9292,"byte_end":9301,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":9892,"byte_end":9907,"line_start":61,"line_end":61,"column_start":19,"column_end":34},"name":"into_future_obj","qualname":"<LocalFutureObj>::into_future_obj","value":"pub unsafe fn into_future_obj(Self) -> FutureObj","parent":null,"children":[],"decl_id":null,"docs":" Converts the `LocalFutureObj` into a `FutureObj`.","sig":null,"attributes":[{"value":"/ Converts the `LocalFutureObj` into a `FutureObj`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":9594,"byte_end":9647,"line_start":53,"line_end":53,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":9652,"byte_end":9655,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":9660,"byte_end":9672,"line_start":55,"line_end":55,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":9677,"byte_end":9680,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ To make this operation safe one has to ensure that the `UnsafeFutureObj`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":9685,"byte_end":9761,"line_start":57,"line_end":57,"column_start":5,"column_end":81}},{"value":"/ instance from which this `LocalFutureObj` was created actually","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":9766,"byte_end":9832,"line_start":58,"line_end":58,"column_start":5,"column_end":71}},{"value":"/ implements `Send`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":9837,"byte_end":9859,"line_start":59,"line_end":59,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":9864,"byte_end":9873,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":89},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":11139,"byte_end":11148,"line_start":108,"line_end":108,"column_start":12,"column_end":21},"name":"FutureObj","qualname":"::future_obj::FutureObj","value":"","parent":null,"children":[],"decl_id":null,"docs":" A custom trait object for polling futures, roughly akin to\n `Box<dyn Future<Output = T> + Send + 'a>`.","sig":null,"attributes":[{"value":"/ A custom trait object for polling futures, roughly akin to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":10698,"byte_end":10760,"line_start":99,"line_end":99,"column_start":1,"column_end":63}},{"value":"/ `Box<dyn Future<Output = T> + Send + 'a>`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":10761,"byte_end":10807,"line_start":100,"line_end":100,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":10808,"byte_end":10811,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ This custom trait object was introduced as currently it is not possible to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":10812,"byte_end":10890,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ take `dyn Trait` by value and `Box<dyn Trait>` is not available in no_std","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":10891,"byte_end":10968,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ contexts.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":10969,"byte_end":10982,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":10983,"byte_end":10986,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ You should generally not need to use this type outside of `no_std` or when","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":10987,"byte_end":11065,"line_start":106,"line_end":106,"column_start":1,"column_end":79}},{"value":"/ implementing `Spawn`, consider using `BoxFuture` instead.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":11066,"byte_end":11127,"line_start":107,"line_end":107,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":11392,"byte_end":11395,"line_start":116,"line_end":116,"column_start":12,"column_end":15},"name":"new","qualname":"<FutureObj>::new","value":"pub fn new<F: UnsafeFutureObj + Send>(F) -> FutureObj","parent":null,"children":[],"decl_id":null,"docs":" Create a `FutureObj` from a custom trait object representation.\n","sig":null,"attributes":[{"value":"/ Create a `FutureObj` from a custom trait object representation.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":11299,"byte_end":11366,"line_start":114,"line_end":114,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":11371,"byte_end":11380,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":110},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12275,"byte_end":12290,"line_start":147,"line_end":147,"column_start":18,"column_end":33},"name":"UnsafeFutureObj","qualname":"::future_obj::UnsafeFutureObj","value":"UnsafeFutureObj<'a, T>: 'a","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114}],"decl_id":null,"docs":" A custom implementation of a future trait object for `FutureObj`, providing\n a vtable with drop support.","sig":null,"attributes":[{"value":"/ A custom implementation of a future trait object for `FutureObj`, providing","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":11878,"byte_end":11957,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"/ a vtable with drop support.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":11958,"byte_end":11989,"line_start":138,"line_end":138,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":11990,"byte_end":11993,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ This custom representation is typically used only in `no_std` contexts,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":11994,"byte_end":12069,"line_start":140,"line_end":140,"column_start":1,"column_end":76}},{"value":"/ where the default `Box`-based implementation is not available.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12070,"byte_end":12136,"line_start":141,"line_end":141,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12137,"byte_end":12140,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12141,"byte_end":12153,"line_start":143,"line_end":143,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12154,"byte_end":12157,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ See the safety notes on individual methods for what guarantees an","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12158,"byte_end":12227,"line_start":145,"line_end":145,"column_start":1,"column_end":70}},{"value":"/ implementor must provide.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12228,"byte_end":12257,"line_start":146,"line_end":146,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12735,"byte_end":12743,"line_start":158,"line_end":158,"column_start":8,"column_end":16},"name":"into_raw","qualname":"::future_obj::UnsafeFutureObj::into_raw","value":"pub fn into_raw(Self) -> *mut Future<Output = T> + 'a","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" Convert an owned instance into a (conceptually owned) fat pointer.","sig":null,"attributes":[{"value":"/ Convert an owned instance into a (conceptually owned) fat pointer.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12308,"byte_end":12378,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12383,"byte_end":12386,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12391,"byte_end":12403,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12408,"byte_end":12411,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ## Implementor","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12416,"byte_end":12434,"line_start":152,"line_end":152,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12439,"byte_end":12442,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ The trait implementor must guarantee that it is safe to convert the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12447,"byte_end":12518,"line_start":154,"line_end":154,"column_start":5,"column_end":76}},{"value":"/ provided `*mut (dyn Future<Output = T> + 'a)` into a `Pin<&mut (dyn","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12523,"byte_end":12594,"line_start":155,"line_end":155,"column_start":5,"column_end":76}},{"value":"/ Future<Output = T> + 'a)>` and call methods on it, non-reentrantly,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12599,"byte_end":12670,"line_start":156,"line_end":156,"column_start":5,"column_end":76}},{"value":"/ until `UnsafeFutureObj::drop` is called with it.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12675,"byte_end":12727,"line_start":157,"line_end":157,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":13421,"byte_end":13425,"line_start":178,"line_end":178,"column_start":15,"column_end":19},"name":"drop","qualname":"::future_obj::UnsafeFutureObj::drop","value":"pub unsafe fn drop(*mut Future<Output = T> + 'a)","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" Drops the future represented by the given fat pointer.","sig":null,"attributes":[{"value":"/ Drops the future represented by the given fat pointer.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12794,"byte_end":12852,"line_start":160,"line_end":160,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12857,"byte_end":12860,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12865,"byte_end":12877,"line_start":162,"line_end":162,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12882,"byte_end":12885,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ## Implementor","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12890,"byte_end":12908,"line_start":164,"line_end":164,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12913,"byte_end":12916,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ The trait implementor must guarantee that it is safe to call this","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12921,"byte_end":12990,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ function once per `into_raw` invocation.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":12995,"byte_end":13039,"line_start":167,"line_end":167,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":13044,"byte_end":13047,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ## Caller","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":13052,"byte_end":13065,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":13070,"byte_end":13073,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure:","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":13078,"byte_end":13105,"line_start":171,"line_end":171,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":13110,"byte_end":13113,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/  * the pointer passed was obtained from an `into_raw` invocation from","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":13118,"byte_end":13191,"line_start":173,"line_end":173,"column_start":5,"column_end":78}},{"value":"/    this same trait object","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":13196,"byte_end":13225,"line_start":174,"line_end":174,"column_start":5,"column_end":34}},{"value":"/  * the pointer is not currently in use as a `Pin<&mut (dyn Future<Output","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":13230,"byte_end":13306,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/    = T> + 'a)>`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":13311,"byte_end":13330,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/  * the pointer must not be used again after this function is called","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":13335,"byte_end":13406,"line_start":177,"line_end":177,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":151},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/noop_waker.rs","byte_start":19341,"byte_end":19351,"line_start":31,"line_end":31,"column_start":8,"column_end":18},"name":"noop_waker","qualname":"::noop_waker::noop_waker","value":"pub fn noop_waker() -> Waker","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Waker`] which does\n nothing when `wake()` is called on it.","sig":null,"attributes":[{"value":"/ Create a new [`Waker`] which does","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/noop_waker.rs","byte_start":19121,"byte_end":19158,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/ nothing when `wake()` is called on it.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/noop_waker.rs","byte_start":19159,"byte_end":19201,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/noop_waker.rs","byte_start":19202,"byte_end":19205,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/noop_waker.rs","byte_start":19206,"byte_end":19220,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/noop_waker.rs","byte_start":19221,"byte_end":19224,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/noop_waker.rs","byte_start":19225,"byte_end":19232,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use futures::task::noop_waker;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/noop_waker.rs","byte_start":19233,"byte_end":19267,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ let waker = noop_waker();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/noop_waker.rs","byte_start":19268,"byte_end":19297,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ waker.wake();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/noop_waker.rs","byte_start":19298,"byte_end":19315,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/noop_waker.rs","byte_start":19316,"byte_end":19323,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/noop_waker.rs","byte_start":19324,"byte_end":19333,"line_start":30,"line_end":30,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":4079,"byte_end":4089,"line_start":59,"line_end":59,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":4250,"byte_end":4260,"line_start":65,"line_end":65,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":4448,"byte_end":4458,"line_start":74,"line_end":74,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":8713,"byte_end":8727,"line_start":25,"line_end":25,"column_start":19,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":9187,"byte_end":9201,"line_start":42,"line_end":42,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":9992,"byte_end":10006,"line_start":66,"line_end":66,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":10190,"byte_end":10204,"line_start":73,"line_end":73,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":10328,"byte_end":10342,"line_start":80,"line_end":80,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":10573,"byte_end":10587,"line_start":91,"line_end":91,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":11199,"byte_end":11208,"line_start":110,"line_end":110,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":11243,"byte_end":11252,"line_start":111,"line_end":111,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":11276,"byte_end":11285,"line_start":113,"line_end":113,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":11532,"byte_end":11541,"line_start":121,"line_end":121,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":11700,"byte_end":11709,"line_start":128,"line_end":128,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":14080,"byte_end":14083,"line_start":201,"line_end":201,"column_start":50,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":14391,"byte_end":14394,"line_start":212,"line_end":212,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":4079,"byte_end":4089,"line_start":59,"line_end":59,"column_start":21,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":16},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":4250,"byte_end":4260,"line_start":65,"line_end":65,"column_start":23,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":16},"to":{"krate":1,"index":6208}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/spawn.rs","byte_start":4448,"byte_end":4458,"line_start":74,"line_end":74,"column_start":6,"column_end":16},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":16},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":8713,"byte_end":8727,"line_start":25,"line_end":25,"column_start":19,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":55},"to":{"krate":1,"index":1968}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":9187,"byte_end":9201,"line_start":42,"line_end":42,"column_start":13,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":55},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":9992,"byte_end":10006,"line_start":66,"line_end":66,"column_start":24,"column_end":38},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":55},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":10190,"byte_end":10204,"line_start":73,"line_end":73,"column_start":40,"column_end":54},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":55},"to":{"krate":1,"index":1845}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":10328,"byte_end":10342,"line_start":80,"line_end":80,"column_start":20,"column_end":34},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":55},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":10573,"byte_end":10587,"line_start":91,"line_end":91,"column_start":18,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":55},"to":{"krate":1,"index":2122}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":11199,"byte_end":11208,"line_start":110,"line_end":110,"column_start":19,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":89},"to":{"krate":1,"index":1968}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":11243,"byte_end":11252,"line_start":111,"line_end":111,"column_start":25,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":89},"to":{"krate":1,"index":1927}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":11276,"byte_end":11285,"line_start":113,"line_end":113,"column_start":13,"column_end":22},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":89},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":11532,"byte_end":11541,"line_start":121,"line_end":121,"column_start":24,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":89},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":11700,"byte_end":11709,"line_start":128,"line_end":128,"column_start":20,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":89},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":14080,"byte_end":14083,"line_start":201,"line_end":201,"column_start":50,"column_end":53},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":30110},"to":{"krate":0,"index":110}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.7/src/future_obj.rs","byte_start":14391,"byte_end":14394,"line_start":212,"line_end":212,"column_start":47,"column_end":50},"kind":{"Impl":{"id":15}},"from":{"krate":1,"index":30110},"to":{"krate":0,"index":110}}]}