{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0","program":"/home/gorta/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tower_service","--edition=2018","/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=1745b3499300a411","-C","extra-filename=-1745b3499300a411","--out-dir","/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps","-L","dependency=/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/gorta/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps/libtower_service-1745b3499300a411.rmeta"},"prelude":{"crate_id":{"name":"tower_service","disambiguator":[1851566348782798380,95627883202767816]},"crate_root":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src","external_crates":[{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18437716656233032650,2349106724991734091]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16851962707842592855,4932765248485690217]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3049591816127030880,10952373373500329976]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11587085401131637304,2097967498245787009]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[697141649018154369,16548652339936893370]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[15777040323210795675,4562741973928336648]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15931681355194650171,7679759071890480571]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16378405889910241769,9643272937548158260]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[8261542656080474758,5147161130074218296]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[1712641478249352838,12464696676097716113]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[3715598662871405823,1939556143240013170]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4641845549064414815,7418938888650694907]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18127448783747998133,9149995038350923488]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[8742225116956546677,8424782546207546390]}}],"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":0,"byte_end":8964,"line_start":1,"line_end":271,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":0,"byte_end":8964,"line_start":1,"line_end":271,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":14},{"krate":0,"index":23}],"decl_id":null,"docs":" Definition of the core `Service` trait to Tower","sig":null,"attributes":[{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":63,"byte_end":169,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"! Definition of the core `Service` trait to Tower","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":171,"byte_end":222,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":223,"byte_end":226,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! The [`Service`] trait provides the necessary abstractions for defining","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":227,"byte_end":301,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"! request / response clients and servers. It is simple but powerful and is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":302,"byte_end":378,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"! used as the foundation for the rest of Tower.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":379,"byte_end":428,"line_start":13,"line_end":13,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":7},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":6479,"byte_end":6486,"line_start":199,"line_end":199,"column_start":11,"column_end":18},"name":"Service","qualname":"::Service","value":"Service<Request>","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13}],"decl_id":null,"docs":" An asynchronous function from a `Request` to a `Response`.","sig":null,"attributes":[{"value":"/ An asynchronous function from a `Request` to a `Response`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":488,"byte_end":550,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":551,"byte_end":554,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The `Service` trait is a simplified interface making it easy to write","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":555,"byte_end":628,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ network applications in a modular and reusable way, decoupled from the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":629,"byte_end":703,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ underlying protocol. It is one of Tower's fundamental abstractions.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":704,"byte_end":775,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":776,"byte_end":779,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Functional","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":780,"byte_end":796,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":797,"byte_end":800,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ A `Service` is a function of a `Request`. It immediately returns a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":801,"byte_end":871,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"/ `Future` representing the eventual completion of processing the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":872,"byte_end":939,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/ request. The actual request processing may happen at any time in the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":940,"byte_end":1012,"line_start":28,"line_end":28,"column_start":1,"column_end":73}},{"value":"/ future, on any thread or executor. The processing may depend on calling","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1013,"byte_end":1088,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"/ other services. At some point in the future, the processing will complete,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1089,"byte_end":1167,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ and the `Future` will resolve to a response or error.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1168,"byte_end":1225,"line_start":31,"line_end":31,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1226,"byte_end":1229,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ At a high level, the `Service::call` function represents an RPC request. The","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1230,"byte_end":1310,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ `Service` value can be a server or a client.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1311,"byte_end":1359,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1360,"byte_end":1363,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Server","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1364,"byte_end":1376,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1377,"byte_end":1380,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ An RPC server *implements* the `Service` trait. Requests received by the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1381,"byte_end":1457,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ server over the network are deserialized and then passed as an argument to the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1458,"byte_end":1540,"line_start":39,"line_end":39,"column_start":1,"column_end":83}},{"value":"/ server value. The returned response is sent back over the network.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1541,"byte_end":1611,"line_start":40,"line_end":40,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1612,"byte_end":1615,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ As an example, here is how an HTTP request is processed by a server:","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1616,"byte_end":1688,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1689,"byte_end":1692,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1693,"byte_end":1704,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1705,"byte_end":1729,"line_start":45,"line_end":45,"column_start":1,"column_end":25}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1730,"byte_end":1767,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/ # use std::future::Future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1768,"byte_end":1798,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ # use tower_service::Service;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1799,"byte_end":1832,"line_start":48,"line_end":48,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1833,"byte_end":1836,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ use http::{Request, Response, StatusCode};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1837,"byte_end":1883,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1884,"byte_end":1887,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ struct HelloWorld;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1888,"byte_end":1910,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1911,"byte_end":1914,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ impl Service<Request<Vec<u8>>> for HelloWorld {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1915,"byte_end":1966,"line_start":54,"line_end":54,"column_start":1,"column_end":52}},{"value":"/     type Response = Response<Vec<u8>>;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":1967,"byte_end":2009,"line_start":55,"line_end":55,"column_start":1,"column_end":43}},{"value":"/     type Error = http::Error;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2010,"byte_end":2043,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/     type Future = Pin<Box<dyn Future<Output = Result<Self::Response, Self::Error>>>>;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2044,"byte_end":2133,"line_start":57,"line_end":57,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2134,"byte_end":2137,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2138,"byte_end":2227,"line_start":59,"line_end":59,"column_start":1,"column_end":90}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2228,"byte_end":2259,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2260,"byte_end":2269,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2270,"byte_end":2273,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/     fn call(&mut self, req: Request<Vec<u8>>) -> Self::Future {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2274,"byte_end":2341,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/         // create the body","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2342,"byte_end":2372,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/         let body: Vec<u8> = \"hello, world!\\n\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2373,"byte_end":2422,"line_start":65,"line_end":65,"column_start":1,"column_end":50}},{"value":"/             .as_bytes()","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2423,"byte_end":2450,"line_start":66,"line_end":66,"column_start":1,"column_end":28}},{"value":"/             .to_owned();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2451,"byte_end":2479,"line_start":67,"line_end":67,"column_start":1,"column_end":29}},{"value":"/         // Create the HTTP response","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2480,"byte_end":2519,"line_start":68,"line_end":68,"column_start":1,"column_end":40}},{"value":"/         let resp = Response::builder()","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2520,"byte_end":2562,"line_start":69,"line_end":69,"column_start":1,"column_end":43}},{"value":"/             .status(StatusCode::OK)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2563,"byte_end":2602,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/             .body(body)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2603,"byte_end":2630,"line_start":71,"line_end":71,"column_start":1,"column_end":28}},{"value":"/             .expect(\"Unable to create `http::Response`\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2631,"byte_end":2692,"line_start":72,"line_end":72,"column_start":1,"column_end":62}},{"value":"/         ","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2693,"byte_end":2705,"line_start":73,"line_end":73,"column_start":1,"column_end":13}},{"value":"/         // create a response in a future.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2706,"byte_end":2751,"line_start":74,"line_end":74,"column_start":1,"column_end":46}},{"value":"/         let fut = async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2752,"byte_end":2781,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"/             Ok(resp)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2782,"byte_end":2806,"line_start":76,"line_end":76,"column_start":1,"column_end":25}},{"value":"/         };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2807,"byte_end":2821,"line_start":77,"line_end":77,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2822,"byte_end":2825,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/         // Return the response as an immediate future","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2826,"byte_end":2883,"line_start":79,"line_end":79,"column_start":1,"column_end":58}},{"value":"/         Box::pin(fut)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2884,"byte_end":2909,"line_start":80,"line_end":80,"column_start":1,"column_end":26}},{"value":"/     }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2910,"byte_end":2919,"line_start":81,"line_end":81,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2920,"byte_end":2925,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2926,"byte_end":2933,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2934,"byte_end":2937,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # Client","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2938,"byte_end":2950,"line_start":85,"line_end":85,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2951,"byte_end":2954,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ A client consumes a service by using a `Service` value. The client may","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":2955,"byte_end":3029,"line_start":87,"line_end":87,"column_start":1,"column_end":75}},{"value":"/ issue requests by invoking `call` and passing the request as an argument.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3030,"byte_end":3107,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"/ It then receives the response by waiting for the returned future.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3108,"byte_end":3177,"line_start":89,"line_end":89,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3178,"byte_end":3181,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ As an example, here is how a Redis request would be issued:","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3182,"byte_end":3245,"line_start":91,"line_end":91,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3246,"byte_end":3249,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3250,"byte_end":3268,"line_start":93,"line_end":93,"column_start":1,"column_end":19}},{"value":"/ let client = redis::Client::new()","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3269,"byte_end":3306,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/     .connect(\"127.0.0.1:6379\".parse().unwrap())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3307,"byte_end":3358,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/     .unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3359,"byte_end":3377,"line_start":96,"line_end":96,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3378,"byte_end":3381,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ let resp = client.call(Cmd::set(\"foo\", \"this is the value of foo\")).await?;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3382,"byte_end":3461,"line_start":98,"line_end":98,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3462,"byte_end":3465,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // Wait for the future to resolve","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3466,"byte_end":3503,"line_start":100,"line_end":100,"column_start":1,"column_end":38}},{"value":"/ println!(\"Redis response: {:?}\", resp);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3504,"byte_end":3547,"line_start":101,"line_end":101,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3548,"byte_end":3555,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3556,"byte_end":3559,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ # Middleware / Layer","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3560,"byte_end":3584,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3585,"byte_end":3588,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ More often than not, all the pieces needed for writing robust, scalable","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3589,"byte_end":3664,"line_start":106,"line_end":106,"column_start":1,"column_end":76}},{"value":"/ network applications are the same no matter the underlying protocol. By","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3665,"byte_end":3740,"line_start":107,"line_end":107,"column_start":1,"column_end":76}},{"value":"/ unifying the API for both clients and servers in a protocol agnostic way,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3741,"byte_end":3818,"line_start":108,"line_end":108,"column_start":1,"column_end":78}},{"value":"/ it is possible to write middleware that provide these pieces in a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3819,"byte_end":3888,"line_start":109,"line_end":109,"column_start":1,"column_end":70}},{"value":"/ reusable way.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3889,"byte_end":3906,"line_start":110,"line_end":110,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3907,"byte_end":3910,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ Take timeouts as an example:","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3911,"byte_end":3943,"line_start":112,"line_end":112,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3944,"byte_end":3947,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3948,"byte_end":3966,"line_start":114,"line_end":114,"column_start":1,"column_end":19}},{"value":"/ use tower_service::Service;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3967,"byte_end":3998,"line_start":115,"line_end":115,"column_start":1,"column_end":32}},{"value":"/ use tower_layer::Layer;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":3999,"byte_end":4026,"line_start":116,"line_end":116,"column_start":1,"column_end":28}},{"value":"/ use futures::FutureExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4027,"byte_end":4054,"line_start":117,"line_end":117,"column_start":1,"column_end":28}},{"value":"/ use std::future::Future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4055,"byte_end":4083,"line_start":118,"line_end":118,"column_start":1,"column_end":29}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4084,"byte_end":4119,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4120,"byte_end":4148,"line_start":120,"line_end":120,"column_start":1,"column_end":29}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4149,"byte_end":4171,"line_start":121,"line_end":121,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4172,"byte_end":4175,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4176,"byte_end":4179,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ pub struct Timeout<T> {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4180,"byte_end":4207,"line_start":124,"line_end":124,"column_start":1,"column_end":28}},{"value":"/     inner: T,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4208,"byte_end":4225,"line_start":125,"line_end":125,"column_start":1,"column_end":18}},{"value":"/     timeout: Duration,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4226,"byte_end":4252,"line_start":126,"line_end":126,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4253,"byte_end":4258,"line_start":127,"line_end":127,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4259,"byte_end":4262,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ pub struct TimeoutLayer(Duration);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4263,"byte_end":4301,"line_start":129,"line_end":129,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4302,"byte_end":4305,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ pub struct Expired;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4306,"byte_end":4329,"line_start":131,"line_end":131,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4330,"byte_end":4333,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ impl<T> Timeout<T> {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4334,"byte_end":4358,"line_start":133,"line_end":133,"column_start":1,"column_end":25}},{"value":"/     pub fn new(inner: T, timeout: Duration) -> Timeout<T> {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4359,"byte_end":4422,"line_start":134,"line_end":134,"column_start":1,"column_end":64}},{"value":"/         Timeout {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4423,"byte_end":4444,"line_start":135,"line_end":135,"column_start":1,"column_end":22}},{"value":"/             inner,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4445,"byte_end":4467,"line_start":136,"line_end":136,"column_start":1,"column_end":23}},{"value":"/             timeout","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4468,"byte_end":4491,"line_start":137,"line_end":137,"column_start":1,"column_end":24}},{"value":"/         }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4492,"byte_end":4505,"line_start":138,"line_end":138,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4506,"byte_end":4515,"line_start":139,"line_end":139,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4516,"byte_end":4521,"line_start":140,"line_end":140,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4522,"byte_end":4525,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ impl<T, Request> Service<Request> for Timeout<T>","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4526,"byte_end":4578,"line_start":142,"line_end":142,"column_start":1,"column_end":53}},{"value":"/ where","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4579,"byte_end":4588,"line_start":143,"line_end":143,"column_start":1,"column_end":10}},{"value":"/     T: Service<Request>,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4589,"byte_end":4617,"line_start":144,"line_end":144,"column_start":1,"column_end":29}},{"value":"/     T::Future: 'static,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4618,"byte_end":4645,"line_start":145,"line_end":145,"column_start":1,"column_end":28}},{"value":"/     T::Error: From<Expired> + 'static,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4646,"byte_end":4688,"line_start":146,"line_end":146,"column_start":1,"column_end":43}},{"value":"/     T::Response: 'static","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4689,"byte_end":4717,"line_start":147,"line_end":147,"column_start":1,"column_end":29}},{"value":"/ {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4718,"byte_end":4723,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/     type Response = T::Response;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4724,"byte_end":4760,"line_start":149,"line_end":149,"column_start":1,"column_end":37}},{"value":"/     type Error = T::Error;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4761,"byte_end":4791,"line_start":150,"line_end":150,"column_start":1,"column_end":31}},{"value":"/     type Future = Pin<Box<dyn Future<Output = Result<Self::Response, Self::Error>>>>;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4792,"byte_end":4881,"line_start":151,"line_end":151,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4882,"byte_end":4885,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/     fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4886,"byte_end":4975,"line_start":153,"line_end":153,"column_start":1,"column_end":90}},{"value":"/        self.inner.poll_ready(cx).map_err(Into::into)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":4976,"byte_end":5032,"line_start":154,"line_end":154,"column_start":1,"column_end":57}},{"value":"/     }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5033,"byte_end":5042,"line_start":155,"line_end":155,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5043,"byte_end":5046,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/     fn call(&mut self, req: Request) -> Self::Future {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5047,"byte_end":5105,"line_start":157,"line_end":157,"column_start":1,"column_end":59}},{"value":"/         let timeout = tokio_timer::delay_for(self.timeout)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5106,"byte_end":5168,"line_start":158,"line_end":158,"column_start":1,"column_end":63}},{"value":"/             .map(|_| Err(Self::Error::from(Expired)));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5169,"byte_end":5227,"line_start":159,"line_end":159,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5228,"byte_end":5231,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/         let fut = Box::pin(self.inner.call(req));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5232,"byte_end":5285,"line_start":161,"line_end":161,"column_start":1,"column_end":54}},{"value":"/         let f = futures::select(fut, timeout)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5286,"byte_end":5335,"line_start":162,"line_end":162,"column_start":1,"column_end":50}},{"value":"/             .map(|either| either.factor_first().0);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5336,"byte_end":5391,"line_start":163,"line_end":163,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5392,"byte_end":5395,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/         Box::pin(f)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5396,"byte_end":5419,"line_start":165,"line_end":165,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5420,"byte_end":5429,"line_start":166,"line_end":166,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5430,"byte_end":5435,"line_start":167,"line_end":167,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5436,"byte_end":5439,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ impl TimeoutLayer {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5440,"byte_end":5463,"line_start":169,"line_end":169,"column_start":1,"column_end":24}},{"value":"/     pub fn new(delay: Duration) -> Self {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5464,"byte_end":5509,"line_start":170,"line_end":170,"column_start":1,"column_end":46}},{"value":"/         TimeoutLayer(delay)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5510,"byte_end":5541,"line_start":171,"line_end":171,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5542,"byte_end":5551,"line_start":172,"line_end":172,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5552,"byte_end":5557,"line_start":173,"line_end":173,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5558,"byte_end":5561,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ impl<S> Layer<S> for TimeoutLayer","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5562,"byte_end":5599,"line_start":175,"line_end":175,"column_start":1,"column_end":38}},{"value":"/ {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5600,"byte_end":5605,"line_start":176,"line_end":176,"column_start":1,"column_end":6}},{"value":"/     type Service = Timeout<S>;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5606,"byte_end":5640,"line_start":177,"line_end":177,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5641,"byte_end":5644,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/     fn layer(&self, service: S) -> Timeout<S> {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5645,"byte_end":5696,"line_start":179,"line_end":179,"column_start":1,"column_end":52}},{"value":"/         Timeout::new(service, self.0)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5697,"byte_end":5738,"line_start":180,"line_end":180,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5739,"byte_end":5748,"line_start":181,"line_end":181,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5749,"byte_end":5754,"line_start":182,"line_end":182,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5755,"byte_end":5758,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5759,"byte_end":5766,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5767,"byte_end":5770,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ The above timeout implementation is decoupled from the underlying protocol","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5771,"byte_end":5849,"line_start":186,"line_end":186,"column_start":1,"column_end":79}},{"value":"/ and is also decoupled from client or server concerns. In other words, the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5850,"byte_end":5927,"line_start":187,"line_end":187,"column_start":1,"column_end":78}},{"value":"/ same timeout middleware could be used in either a client or a server.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":5928,"byte_end":6001,"line_start":188,"line_end":188,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":6002,"byte_end":6005,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ # Backpressure","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":6006,"byte_end":6024,"line_start":190,"line_end":190,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":6025,"byte_end":6028,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ Calling a `Service` which is at capacity (i.e., it is temporarily unable to process a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":6029,"byte_end":6118,"line_start":192,"line_end":192,"column_start":1,"column_end":90}},{"value":"/ request) should result in an error. The caller is responsible for ensuring","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":6119,"byte_end":6197,"line_start":193,"line_end":193,"column_start":1,"column_end":79}},{"value":"/ that the service is ready to receive the request before calling it.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":6198,"byte_end":6269,"line_start":194,"line_end":194,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":6270,"byte_end":6273,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ `Service` provides a mechanism by which the caller is able to coordinate","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":6274,"byte_end":6350,"line_start":196,"line_end":196,"column_start":1,"column_end":77}},{"value":"/ readiness. `Service::poll_ready` returns `Ready` if the service expects that","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":6351,"byte_end":6431,"line_start":197,"line_end":197,"column_start":1,"column_end":81}},{"value":"/ it is able to process a request.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":6432,"byte_end":6468,"line_start":198,"line_end":198,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":9},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":6547,"byte_end":6555,"line_start":201,"line_end":201,"column_start":10,"column_end":18},"name":"Response","qualname":"::Service::Response","value":"type Response;","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Responses given by the service.\n","sig":null,"attributes":[{"value":"/ Responses given by the service.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":6502,"byte_end":6537,"line_start":200,"line_end":200,"column_start":5,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":10},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":6607,"byte_end":6612,"line_start":204,"line_end":204,"column_start":10,"column_end":15},"name":"Error","qualname":"::Service::Error","value":"type Error;","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Errors produced by the service.\n","sig":null,"attributes":[{"value":"/ Errors produced by the service.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":6562,"byte_end":6597,"line_start":203,"line_end":203,"column_start":5,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":11},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":6659,"byte_end":6665,"line_start":207,"line_end":207,"column_start":10,"column_end":16},"name":"Future","qualname":"::Service::Future","value":"type Future: Future<Output = Result<Self::Response, Self::Error>>;","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" The future response value.\n","sig":null,"attributes":[{"value":"/ The future response value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":6619,"byte_end":6649,"line_start":206,"line_end":206,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":7542,"byte_end":7552,"line_start":222,"line_end":222,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"::Service::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Returns `Poll::Ready(Ok(()))` when the service is able to process requests.","sig":null,"attributes":[{"value":"/ Returns `Poll::Ready(Ok(()))` when the service is able to process requests.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":6726,"byte_end":6805,"line_start":209,"line_end":209,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":6810,"byte_end":6813,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ If the service is at capacity, then `Poll::Pending` is returned and the task","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":6818,"byte_end":6898,"line_start":211,"line_end":211,"column_start":5,"column_end":85}},{"value":"/ is notified when the service becomes ready again. This function is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":6903,"byte_end":6973,"line_start":212,"line_end":212,"column_start":5,"column_end":75}},{"value":"/ expected to be called while on a task. Generally, this can be done with","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":6978,"byte_end":7053,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/ a simple `futures::future::poll_fn` call.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":7058,"byte_end":7103,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":7108,"byte_end":7111,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If `Poll::Ready(Err(_))` is returned, the service is no longer able to service requests","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":7116,"byte_end":7207,"line_start":216,"line_end":216,"column_start":5,"column_end":96}},{"value":"/ and the caller should discard the service instance.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":7212,"byte_end":7267,"line_start":217,"line_end":217,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":7272,"byte_end":7275,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ Once `poll_ready` returns `Poll::Ready(Ok(()))`, a request may be dispatched to the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":7280,"byte_end":7367,"line_start":219,"line_end":219,"column_start":5,"column_end":92}},{"value":"/ service using `call`. Until a request is dispatched, repeated calls to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":7372,"byte_end":7446,"line_start":220,"line_end":220,"column_start":5,"column_end":79}},{"value":"/ `poll_ready` must return either `Poll::Ready(Ok(()))` or `Poll::Ready(Err(_))`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":7451,"byte_end":7534,"line_start":221,"line_end":221,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":8123,"byte_end":8127,"line_start":236,"line_end":236,"column_start":8,"column_end":12},"name":"call","qualname":"::Service::call","value":"pub fn call(&mut Self, Request) -> Self::Future","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Process the request and return the response asynchronously.","sig":null,"attributes":[{"value":"/ Process the request and return the response asynchronously.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":7625,"byte_end":7688,"line_start":224,"line_end":224,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":7693,"byte_end":7696,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This function is expected to be callable off task. As such,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":7701,"byte_end":7764,"line_start":226,"line_end":226,"column_start":5,"column_end":68}},{"value":"/ implementations should take care to not call `poll_ready`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":7769,"byte_end":7831,"line_start":227,"line_end":227,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":7836,"byte_end":7839,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Before dispatching a request, `poll_ready` must be called and return","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":7844,"byte_end":7916,"line_start":229,"line_end":229,"column_start":5,"column_end":77}},{"value":"/ `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":7921,"byte_end":7947,"line_start":230,"line_end":230,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":7952,"byte_end":7955,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":7960,"byte_end":7972,"line_start":232,"line_end":232,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":7977,"byte_end":7980,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Implementations are permitted to panic if `call` is invoked without","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":7985,"byte_end":8056,"line_start":234,"line_end":234,"column_start":5,"column_end":76}},{"value":"/ obtaining `Poll::Ready(Ok(()))` from `poll_ready`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":8061,"byte_end":8115,"line_start":235,"line_end":235,"column_start":5,"column_end":59}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":8609,"byte_end":8612,"line_start":256,"line_end":256,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.0/src/lib.rs","byte_start":8609,"byte_end":8612,"line_start":256,"line_end":256,"column_start":39,"column_end":42},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":7}}]}