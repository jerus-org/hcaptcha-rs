{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3","program":"/home/gorta/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","adler","/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=92151b1f98ffff92","-C","extra-filename=-92151b1f98ffff92","--out-dir","/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps","-L","dependency=/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/gorta/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps/libadler-92151b1f98ffff92.rmeta"},"prelude":{"crate_id":{"name":"adler","disambiguator":[5187650568935261061,13495781184541923472]},"crate_root":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src","external_crates":[{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16851962707842592855,4932765248485690217]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3049591816127030880,10952373373500329976]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[11587085401131637304,2097967498245787009]}}],"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":0,"byte_end":6277,"line_start":1,"line_end":215,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":0,"byte_end":6277,"line_start":1,"line_end":215,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":24},{"krate":0,"index":44},{"krate":0,"index":50},{"krate":0,"index":49},{"krate":0,"index":47},{"krate":0,"index":25},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":35}],"decl_id":null,"docs":" Adler-32 checksum implementation.","sig":null,"attributes":[{"value":"! Adler-32 checksum implementation.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":0,"byte_end":37,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":38,"byte_end":41,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This implementation features:","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":42,"byte_end":75,"line_start":3,"line_end":3,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":76,"byte_end":79,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! - Permissively licensed (0BSD) clean-room implementation.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":80,"byte_end":141,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"! - Zero dependencies.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":142,"byte_end":166,"line_start":6,"line_end":6,"column_start":1,"column_end":25}},{"value":"! - Decent performance (3-4 GB/s).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":167,"byte_end":203,"line_start":7,"line_end":7,"column_start":1,"column_end":37}},{"value":"! - `#![no_std]` support (with `default-features = false`).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":204,"byte_end":265,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"warn(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":504,"byte_end":543,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":544,"byte_end":567,"line_start":15,"line_end":15,"column_start":1,"column_end":24}},{"value":"no_std","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":602,"byte_end":608,"line_start":16,"line_end":16,"column_start":35,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":44},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":1544,"byte_end":1551,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"Adler32","qualname":"::Adler32","value":"Adler32 {  }","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46}],"decl_id":null,"docs":" Adler-32 checksum calculator.","sig":null,"attributes":[{"value":"/ Adler-32 checksum calculator.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":758,"byte_end":791,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":792,"byte_end":795,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ An instance of this type is equivalent to an Adler-32 checksum: It can be created in the default","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":796,"byte_end":896,"line_start":30,"line_end":30,"column_start":1,"column_end":101}},{"value":"/ state via [`new`] (or the provided `Default` impl), or from a precalculated checksum via","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":897,"byte_end":989,"line_start":31,"line_end":31,"column_start":1,"column_end":93}},{"value":"/ [`from_checksum`], and the currently stored checksum can be fetched via [`checksum`].","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":990,"byte_end":1079,"line_start":32,"line_end":32,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":1080,"byte_end":1083,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This type also implements `Hasher`, which makes it easy to calculate Adler-32 checksums of any","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":1084,"byte_end":1182,"line_start":34,"line_end":34,"column_start":1,"column_end":99}},{"value":"/ type that implements or derives `Hash`. This also allows using Adler-32 in a `HashMap`, although","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":1183,"byte_end":1283,"line_start":35,"line_end":35,"column_start":1,"column_end":101}},{"value":"/ that is not recommended (while every checksum is a hash, they are not necessarily good at being","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":1284,"byte_end":1383,"line_start":36,"line_end":36,"column_start":1,"column_end":100}},{"value":"/ one).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":1384,"byte_end":1393,"line_start":37,"line_end":37,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":1394,"byte_end":1397,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`new`]: #method.new","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":1398,"byte_end":1422,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [`from_checksum`]: #method.from_checksum","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":1423,"byte_end":1467,"line_start":40,"line_end":40,"column_start":1,"column_end":45}},{"value":"/ [`checksum`]: #method.checksum","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":1468,"byte_end":1502,"line_start":41,"line_end":41,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":1681,"byte_end":1684,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<Adler32>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Adler-32 instance with default state.\n","sig":null,"attributes":[{"value":"/ Creates a new Adler-32 instance with default state.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":1600,"byte_end":1655,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":1660,"byte_end":1669,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2477,"byte_end":2490,"line_start":81,"line_end":81,"column_start":12,"column_end":25},"name":"from_checksum","qualname":"<Adler32>::from_checksum","value":"pub fn from_checksum(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an `Adler32` instance from a precomputed Adler-32 checksum.","sig":null,"attributes":[{"value":"/ Creates an `Adler32` instance from a precomputed Adler-32 checksum.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":1732,"byte_end":1803,"line_start":55,"line_end":55,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":1808,"byte_end":1811,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This allows resuming checksum calculation without having to keep the `Adler32` instance","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":1816,"byte_end":1907,"line_start":57,"line_end":57,"column_start":5,"column_end":96}},{"value":"/ around.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":1912,"byte_end":1923,"line_start":58,"line_end":58,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":1928,"byte_end":1931,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":1936,"byte_end":1949,"line_start":60,"line_end":60,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":1954,"byte_end":1957,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":1962,"byte_end":1969,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"/ # use adler::Adler32;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":1974,"byte_end":1999,"line_start":63,"line_end":63,"column_start":5,"column_end":30}},{"value":"/ let parts = [","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2004,"byte_end":2021,"line_start":64,"line_end":64,"column_start":5,"column_end":22}},{"value":"/     \"rust\",","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2026,"byte_end":2041,"line_start":65,"line_end":65,"column_start":5,"column_end":20}},{"value":"/     \"acean\",","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2046,"byte_end":2062,"line_start":66,"line_end":66,"column_start":5,"column_end":21}},{"value":"/ ];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2067,"byte_end":2073,"line_start":67,"line_end":67,"column_start":5,"column_end":11}},{"value":"/ let whole = adler::adler32_slice(b\"rustacean\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2078,"byte_end":2129,"line_start":68,"line_end":68,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2134,"byte_end":2137,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let mut sum = Adler32::new();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2142,"byte_end":2175,"line_start":70,"line_end":70,"column_start":5,"column_end":38}},{"value":"/ sum.write_slice(parts[0].as_bytes());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2180,"byte_end":2221,"line_start":71,"line_end":71,"column_start":5,"column_end":46}},{"value":"/ let partial = sum.checksum();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2226,"byte_end":2259,"line_start":72,"line_end":72,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2264,"byte_end":2267,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ // ...later","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2272,"byte_end":2287,"line_start":74,"line_end":74,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2292,"byte_end":2295,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let mut sum = Adler32::from_checksum(partial);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2300,"byte_end":2350,"line_start":76,"line_end":76,"column_start":5,"column_end":55}},{"value":"/ sum.write_slice(parts[1].as_bytes());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2355,"byte_end":2396,"line_start":77,"line_end":77,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(sum.checksum(), whole);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2401,"byte_end":2439,"line_start":78,"line_end":78,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2444,"byte_end":2451,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2456,"byte_end":2465,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2696,"byte_end":2704,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"checksum","qualname":"<Adler32>::checksum","value":"pub fn checksum(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the calculated checksum at this point in time.\n","sig":null,"attributes":[{"value":"/ Returns the calculated checksum at this point in time.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2612,"byte_end":2670,"line_start":88,"line_end":88,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2675,"byte_end":2684,"line_start":89,"line_end":89,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2973,"byte_end":2984,"line_start":98,"line_end":98,"column_start":12,"column_end":23},"name":"write_slice","qualname":"<Adler32>::write_slice","value":"pub fn write_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Adds `bytes` to the checksum calculation.","sig":null,"attributes":[{"value":"/ Adds `bytes` to the checksum calculation.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2786,"byte_end":2831,"line_start":94,"line_end":94,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2836,"byte_end":2839,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ If efficiency matters, this should be called with Byte slices that contain at least a few","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2844,"byte_end":2937,"line_start":96,"line_end":96,"column_start":5,"column_end":98}},{"value":"/ thousand Bytes.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":2942,"byte_end":2961,"line_start":97,"line_end":97,"column_start":5,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":35},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":3413,"byte_end":3426,"line_start":122,"line_end":122,"column_start":8,"column_end":21},"name":"adler32_slice","qualname":"::adler32_slice","value":"pub fn adler32_slice(&[u8]) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Calculates the Adler-32 checksum of a byte slice.\n","sig":null,"attributes":[{"value":"/ Calculates the Adler-32 checksum of a byte slice.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":3352,"byte_end":3405,"line_start":121,"line_end":121,"column_start":1,"column_end":54}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/algo.rs","byte_start":6354,"byte_end":6361,"line_start":4,"line_end":4,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/algo.rs","byte_start":10753,"byte_end":10758,"line_start":113,"line_end":113,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/algo.rs","byte_start":10990,"byte_end":10995,"line_start":124,"line_end":124,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/algo.rs","byte_start":11168,"byte_end":11173,"line_start":132,"line_end":132,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/algo.rs","byte_start":11330,"byte_end":11335,"line_start":140,"line_end":140,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":1586,"byte_end":1593,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":3067,"byte_end":3074,"line_start":103,"line_end":103,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":3174,"byte_end":3181,"line_start":110,"line_end":110,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/algo.rs","byte_start":6354,"byte_end":6361,"line_start":4,"line_end":4,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":44},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/algo.rs","byte_start":10753,"byte_end":10758,"line_start":113,"line_end":113,"column_start":6,"column_end":11},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":36},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/algo.rs","byte_start":10990,"byte_end":10995,"line_start":124,"line_end":124,"column_start":26,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":36},"to":{"krate":1,"index":2023}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/algo.rs","byte_start":11168,"byte_end":11173,"line_start":132,"line_end":132,"column_start":25,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":36},"to":{"krate":1,"index":2039}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/algo.rs","byte_start":11330,"byte_end":11335,"line_start":140,"line_end":140,"column_start":25,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":36},"to":{"krate":1,"index":2031}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":1586,"byte_end":1593,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":44},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":3067,"byte_end":3074,"line_start":103,"line_end":103,"column_start":18,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":44},"to":{"krate":1,"index":1915}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/adler-0.2.3/src/lib.rs","byte_start":3174,"byte_end":3181,"line_start":110,"line_end":110,"column_start":17,"column_end":24},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":44},"to":{"krate":1,"index":6399}}]}