{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0","program":"/home/gorta/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","bytes","--edition=2018","/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=af5dd5efffd15f36","-C","extra-filename=-af5dd5efffd15f36","--out-dir","/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps","-L","dependency=/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/gorta/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps/libbytes-af5dd5efffd15f36.rmeta"},"prelude":{"crate_id":{"name":"bytes","disambiguator":[9368719025881436653,16656299433756717884]},"crate_root":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src","external_crates":[{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16851962707842592855,4932765248485690217]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3049591816127030880,10952373373500329976]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[11587085401131637304,2097967498245787009]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[697141649018154369,16548652339936893370]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[18437716656233032650,2349106724991734091]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[15777040323210795675,4562741973928336648]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15931681355194650171,7679759071890480571]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16378405889910241769,9643272937548158260]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[8261542656080474758,5147161130074218296]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[1712641478249352838,12464696676097716113]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[3715598662871405823,1939556143240013170]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4641845549064414815,7418938888650694907]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18127448783747998133,9149995038350923488]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[8742225116956546677,8424782546207546390]}}],"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":0,"byte_end":3535,"line_start":1,"line_end":117,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":22},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":4472,"byte_end":4475,"line_start":32,"line_end":32,"column_start":25,"column_end":28},"alias_span":null,"name":"Buf","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":99},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":4500,"byte_end":4506,"line_start":33,"line_end":33,"column_start":24,"column_end":30},"alias_span":null,"name":"BufMut","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":952},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":4529,"byte_end":4534,"line_start":34,"line_end":34,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":961},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":4556,"byte_end":4564,"line_start":35,"line_end":35,"column_start":21,"column_end":29},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":967},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":4587,"byte_end":4592,"line_start":36,"line_end":36,"column_start":22,"column_end":27},"alias_span":null,"name":"Limit","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":980},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":4614,"byte_end":4618,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":272},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":4648,"byte_end":4659,"line_start":38,"line_end":38,"column_start":29,"column_end":40},"alias_span":null,"name":"UninitSlice","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":974},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":4709,"byte_end":4715,"line_start":41,"line_end":41,"column_start":24,"column_end":30},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":1017},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":4725,"byte_end":4731,"line_start":41,"line_end":41,"column_start":40,"column_end":46},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":22},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":3000,"byte_end":3003,"line_start":85,"line_end":85,"column_start":22,"column_end":25},"alias_span":null,"name":"Buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":99},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":3005,"byte_end":3011,"line_start":85,"line_end":85,"column_start":27,"column_end":33},"alias_span":null,"name":"BufMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":348},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":3082,"byte_end":3087,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":544},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":3115,"byte_end":3123,"line_start":92,"line_end":92,"column_start":27,"column_end":35},"alias_span":null,"name":"BytesMut","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":0,"byte_end":3535,"line_start":1,"line_end":117,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":503},{"krate":0,"index":740},{"krate":0,"index":775},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795}],"decl_id":null,"docs":" Provides abstractions for working with bytes.","sig":null,"attributes":[{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":0,"byte_end":71,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"no_std","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":244,"byte_end":254,"line_start":7,"line_end":7,"column_start":1,"column_end":11}},{"value":"! Provides abstractions for working with bytes.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":256,"byte_end":305,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":306,"byte_end":309,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! The `bytes` crate provides an efficient byte buffer structure","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":310,"byte_end":375,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"! ([`Bytes`](struct.Bytes.html)) and traits for working with buffer","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":376,"byte_end":445,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"! implementations ([`Buf`], [`BufMut`]).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":446,"byte_end":488,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":489,"byte_end":492,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! [`Buf`]: trait.Buf.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":493,"byte_end":520,"line_start":15,"line_end":15,"column_start":1,"column_end":28}},{"value":"! [`BufMut`]: trait.BufMut.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":521,"byte_end":554,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":555,"byte_end":558,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! # `Bytes`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":559,"byte_end":572,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":573,"byte_end":576,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! `Bytes` is an efficient container for storing and operating on contiguous","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":577,"byte_end":654,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"! slices of memory. It is intended for use primarily in networking code, but","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":655,"byte_end":733,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"! could have applications elsewhere as well.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":734,"byte_end":780,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":781,"byte_end":784,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! `Bytes` values facilitate zero-copy network programming by allowing multiple","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":785,"byte_end":865,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"! `Bytes` objects to point to the same underlying memory. This is managed by","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":866,"byte_end":944,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"! using a reference count to track when the memory is no longer needed and can","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":945,"byte_end":1025,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"! be freed.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1026,"byte_end":1039,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1040,"byte_end":1043,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! A `Bytes` handle can be created directly from an existing byte store (such as `&[u8]`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1044,"byte_end":1133,"line_start":29,"line_end":29,"column_start":1,"column_end":90}},{"value":"! or `Vec<u8>`), but usually a `BytesMut` is used first and written to. For","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1134,"byte_end":1211,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"! example:","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1212,"byte_end":1224,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1225,"byte_end":1228,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1229,"byte_end":1240,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"! use bytes::{BytesMut, BufMut};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1241,"byte_end":1275,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1276,"byte_end":1279,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! let mut buf = BytesMut::with_capacity(1024);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1280,"byte_end":1328,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"! buf.put(&b\"hello world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1329,"byte_end":1362,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"! buf.put_u16(1234);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1363,"byte_end":1385,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1386,"byte_end":1389,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! let a = buf.split();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1390,"byte_end":1414,"line_start":40,"line_end":40,"column_start":1,"column_end":25}},{"value":"! assert_eq!(a, b\"hello world\\x04\\xD2\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1415,"byte_end":1461,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1462,"byte_end":1465,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"! buf.put(&b\"goodbye world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1466,"byte_end":1501,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1502,"byte_end":1505,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! let b = buf.split();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1506,"byte_end":1530,"line_start":45,"line_end":45,"column_start":1,"column_end":25}},{"value":"! assert_eq!(b, b\"goodbye world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1531,"byte_end":1571,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1572,"byte_end":1575,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! assert_eq!(buf.capacity(), 998);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1576,"byte_end":1612,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"! ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1613,"byte_end":1620,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1621,"byte_end":1624,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! In the above example, only a single buffer of 1024 is allocated. The handles","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1625,"byte_end":1705,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"! `a` and `b` will share the underlying buffer and maintain indices tracking","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1706,"byte_end":1784,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"! the view into the buffer represented by the handle.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1785,"byte_end":1840,"line_start":53,"line_end":53,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1841,"byte_end":1844,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! See the [struct docs] for more details.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1845,"byte_end":1888,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1889,"byte_end":1892,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! [struct docs]: struct.Bytes.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1893,"byte_end":1929,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1930,"byte_end":1933,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! # `Buf`, `BufMut`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1934,"byte_end":1955,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1956,"byte_end":1959,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! These two traits provide read and write access to buffers. The underlying","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":1960,"byte_end":2037,"line_start":61,"line_end":61,"column_start":1,"column_end":78}},{"value":"! storage may or may not be in contiguous memory. For example, `Bytes` is a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":2038,"byte_end":2115,"line_start":62,"line_end":62,"column_start":1,"column_end":78}},{"value":"! buffer that guarantees contiguous memory, but a [rope] stores the bytes in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":2116,"byte_end":2194,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"! disjoint chunks. `Buf` and `BufMut` maintain cursors tracking the current","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":2195,"byte_end":2272,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"! position in the underlying byte storage. When bytes are read or written, the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":2273,"byte_end":2353,"line_start":65,"line_end":65,"column_start":1,"column_end":81}},{"value":"! cursor is advanced.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":2354,"byte_end":2377,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":2378,"byte_end":2381,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! [rope]: https://en.wikipedia.org/wiki/Rope_(data_structure)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":2382,"byte_end":2445,"line_start":68,"line_end":68,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":2446,"byte_end":2449,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! ## Relation with `Read` and `Write`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":2450,"byte_end":2489,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":2490,"byte_end":2493,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"! At first glance, it may seem that `Buf` and `BufMut` overlap in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":2494,"byte_end":2561,"line_start":72,"line_end":72,"column_start":1,"column_end":68}},{"value":"! functionality with `std::io::Read` and `std::io::Write`. However, they","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":2562,"byte_end":2636,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"! serve different purposes. A buffer is the value that is provided as an","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":2637,"byte_end":2711,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"! argument to `Read::read` and `Write::write`. `Read` and `Write` may then","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":2712,"byte_end":2788,"line_start":75,"line_end":75,"column_start":1,"column_end":77}},{"value":"! perform a syscall, which has the potential of failing. Operations on `Buf`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":2789,"byte_end":2867,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"! and `BufMut` are infallible.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":2868,"byte_end":2900,"line_start":77,"line_end":77,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buf","qualname":"::buf","value":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":82},{"krate":0,"index":154},{"krate":0,"index":191},{"krate":0,"index":206},{"krate":0,"index":224},{"krate":0,"index":243},{"krate":0,"index":260},{"krate":0,"index":286},{"krate":0,"index":293},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318}],"decl_id":null,"docs":" Utilities for working with buffers.","sig":null,"attributes":[{"value":"! Utilities for working with buffers.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":3537,"byte_end":3576,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":3577,"byte_end":3580,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! A buffer is any structure that contains a sequence of bytes. The bytes may","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":3581,"byte_end":3659,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"! or may not be stored in contiguous memory. This module contains traits used","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":3660,"byte_end":3739,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"! to abstract over buffers as well as utilities for working with buffer types.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":3740,"byte_end":3820,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":3821,"byte_end":3824,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! # `Buf`, `BufMut`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":3825,"byte_end":3846,"line_start":7,"line_end":7,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":3847,"byte_end":3850,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! These are the two foundational traits for abstractly working with buffers.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":3851,"byte_end":3929,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"! They can be thought as iterators for byte structures. They offer additional","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":3930,"byte_end":4009,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"! performance over `Iterator` by providing an API optimized for byte slices.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":4010,"byte_end":4088,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":4089,"byte_end":4092,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! See [`Buf`] and [`BufMut`] for more details.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":4093,"byte_end":4141,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":4142,"byte_end":4145,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! [rope]: https://en.wikipedia.org/wiki/Rope_(data_structure)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":4146,"byte_end":4209,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"! [`Buf`]: trait.Buf.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":4210,"byte_end":4237,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"! [`BufMut`]: trait.BufMut.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/mod.rs","byte_start":4238,"byte_end":4271,"line_start":17,"line_end":17,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":22},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7281,"byte_end":7284,"line_start":76,"line_end":76,"column_start":11,"column_end":14},"name":"Buf","qualname":"::buf::buf_impl::Buf","value":"Buf","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":61}],"decl_id":null,"docs":" Read bytes from a buffer.","sig":null,"attributes":[{"value":"/ Read bytes from a buffer.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":6564,"byte_end":6593,"line_start":52,"line_end":52,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":6594,"byte_end":6597,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ A buffer stores bytes in memory such that read operations are infallible.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":6598,"byte_end":6675,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/ The underlying storage may or may not be in contiguous memory. A `Buf` value","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":6676,"byte_end":6756,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ is a cursor into the buffer. Reading from `Buf` advances the cursor","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":6757,"byte_end":6828,"line_start":56,"line_end":56,"column_start":1,"column_end":72}},{"value":"/ position. It can be thought of as an efficient `Iterator` for collections of","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":6829,"byte_end":6909,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"/ bytes.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":6910,"byte_end":6920,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":6921,"byte_end":6924,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The simplest `Buf` is a `&[u8]`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":6925,"byte_end":6961,"line_start":60,"line_end":60,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":6962,"byte_end":6965,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":6966,"byte_end":6973,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":6974,"byte_end":6993,"line_start":63,"line_end":63,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":6994,"byte_end":6997,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":6998,"byte_end":7036,"line_start":65,"line_end":65,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7037,"byte_end":7040,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(b'h', buf.get_u8());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7041,"byte_end":7076,"line_start":67,"line_end":67,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(b'e', buf.get_u8());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7077,"byte_end":7112,"line_start":68,"line_end":68,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(b'l', buf.get_u8());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7113,"byte_end":7148,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7149,"byte_end":7152,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ let mut rest = [0; 8];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7153,"byte_end":7179,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/ buf.copy_to_slice(&mut rest);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7180,"byte_end":7213,"line_start":72,"line_end":72,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7214,"byte_end":7217,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&rest[..], &b\"lo world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7218,"byte_end":7262,"line_start":74,"line_end":74,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7263,"byte_end":7270,"line_start":75,"line_end":75,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8031,"byte_end":8040,"line_start":102,"line_end":102,"column_start":8,"column_end":17},"name":"remaining","qualname":"::buf::buf_impl::Buf::remaining","value":"pub fn remaining(&Self) -> usize","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Returns the number of bytes between the current position and the end of\n the buffer.","sig":null,"attributes":[{"value":"/ Returns the number of bytes between the current position and the end of","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7291,"byte_end":7366,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ the buffer.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7371,"byte_end":7386,"line_start":78,"line_end":78,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7391,"byte_end":7394,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This value is greater than or equal to the length of the slice returned","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7399,"byte_end":7474,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ by `bytes`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7479,"byte_end":7494,"line_start":81,"line_end":81,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7499,"byte_end":7502,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7507,"byte_end":7521,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7526,"byte_end":7529,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7534,"byte_end":7541,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7546,"byte_end":7565,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7570,"byte_end":7573,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7578,"byte_end":7616,"line_start":88,"line_end":88,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7621,"byte_end":7624,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.remaining(), 11);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7629,"byte_end":7665,"line_start":90,"line_end":90,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7670,"byte_end":7673,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ buf.get_u8();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7678,"byte_end":7695,"line_start":92,"line_end":92,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7700,"byte_end":7703,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.remaining(), 10);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7708,"byte_end":7744,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7749,"byte_end":7756,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7761,"byte_end":7764,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7769,"byte_end":7792,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7797,"byte_end":7800,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Implementations of `remaining` should ensure that the return value does","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7805,"byte_end":7880,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ not change unless a call is made to `advance` or any other function that","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7885,"byte_end":7961,"line_start":100,"line_end":100,"column_start":5,"column_end":81}},{"value":"/ is documented to change the `Buf`'s current position.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":7966,"byte_end":8023,"line_start":101,"line_end":101,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8892,"byte_end":8897,"line_start":130,"line_end":130,"column_start":8,"column_end":13},"name":"bytes","qualname":"::buf::buf_impl::Buf::bytes","value":"pub fn bytes(&Self) -> &[u8]","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Returns a slice starting at the current position and of length between 0\n and `Buf::remaining()`. Note that this *can* return shorter slice (this allows\n non-continuous internal representation).","sig":null,"attributes":[{"value":"/ Returns a slice starting at the current position and of length between 0","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8063,"byte_end":8139,"line_start":104,"line_end":104,"column_start":5,"column_end":81}},{"value":"/ and `Buf::remaining()`. Note that this *can* return shorter slice (this allows","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8144,"byte_end":8226,"line_start":105,"line_end":105,"column_start":5,"column_end":87}},{"value":"/ non-continuous internal representation).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8231,"byte_end":8275,"line_start":106,"line_end":106,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8280,"byte_end":8283,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This is a lower level function. Most operations are done with other","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8288,"byte_end":8359,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ functions.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8364,"byte_end":8378,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8383,"byte_end":8386,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8391,"byte_end":8405,"line_start":111,"line_end":111,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8410,"byte_end":8413,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8418,"byte_end":8425,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8430,"byte_end":8449,"line_start":114,"line_end":114,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8454,"byte_end":8457,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8462,"byte_end":8500,"line_start":116,"line_end":116,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8505,"byte_end":8508,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.bytes(), &b\"hello world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8513,"byte_end":8562,"line_start":118,"line_end":118,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8567,"byte_end":8570,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buf.advance(6);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8575,"byte_end":8594,"line_start":120,"line_end":120,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8599,"byte_end":8602,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.bytes(), &b\"world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8607,"byte_end":8650,"line_start":122,"line_end":122,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8655,"byte_end":8662,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8667,"byte_end":8670,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8675,"byte_end":8698,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8703,"byte_end":8706,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function should never panic. Once the end of the buffer is reached,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8711,"byte_end":8787,"line_start":127,"line_end":127,"column_start":5,"column_end":81}},{"value":"/ i.e., `Buf::remaining` returns 0, calls to `bytes` should return an","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8792,"byte_end":8863,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ empty slice.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8868,"byte_end":8884,"line_start":129,"line_end":129,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10268,"byte_end":10282,"line_start":160,"line_end":160,"column_start":8,"column_end":22},"name":"bytes_vectored","qualname":"::buf::buf_impl::Buf::bytes_vectored","value":"pub fn bytes_vectored<'a>(&'a Self, &mut [IoSlice]) -> usize","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Fills `dst` with potentially multiple slices starting at `self`'s\n current position.","sig":null,"attributes":[{"value":"/ Fills `dst` with potentially multiple slices starting at `self`'s","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8920,"byte_end":8989,"line_start":132,"line_end":132,"column_start":5,"column_end":74}},{"value":"/ current position.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":8994,"byte_end":9015,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":9020,"byte_end":9023,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If the `Buf` is backed by disjoint slices of bytes, `bytes_vectored` enables","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":9028,"byte_end":9108,"line_start":135,"line_end":135,"column_start":5,"column_end":85}},{"value":"/ fetching more than one slice at once. `dst` is a slice of `IoSlice`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":9113,"byte_end":9184,"line_start":136,"line_end":136,"column_start":5,"column_end":76}},{"value":"/ references, enabling the slice to be directly used with [`writev`]","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":9189,"byte_end":9259,"line_start":137,"line_end":137,"column_start":5,"column_end":75}},{"value":"/ without any further conversion. The sum of the lengths of all the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":9264,"byte_end":9333,"line_start":138,"line_end":138,"column_start":5,"column_end":74}},{"value":"/ buffers in `dst` will be less than or equal to `Buf::remaining()`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":9338,"byte_end":9408,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":9413,"byte_end":9416,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ The entries in `dst` will be overwritten, but the data **contained** by","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":9421,"byte_end":9496,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ the slices **will not** be modified. If `bytes_vectored` does not fill every","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":9501,"byte_end":9581,"line_start":142,"line_end":142,"column_start":5,"column_end":85}},{"value":"/ entry in `dst`, then `dst` is guaranteed to contain all remaining slices","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":9586,"byte_end":9662,"line_start":143,"line_end":143,"column_start":5,"column_end":81}},{"value":"/ in `self.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":9667,"byte_end":9680,"line_start":144,"line_end":144,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":9685,"byte_end":9688,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ This is a lower level function. Most operations are done with other","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":9693,"byte_end":9764,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ functions.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":9769,"byte_end":9783,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":9788,"byte_end":9791,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":9796,"byte_end":9819,"line_start":149,"line_end":149,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":9824,"byte_end":9827,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ This function should never panic. Once the end of the buffer is reached,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":9832,"byte_end":9908,"line_start":151,"line_end":151,"column_start":5,"column_end":81}},{"value":"/ i.e., `Buf::remaining` returns 0, calls to `bytes_vectored` must return 0","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":9913,"byte_end":9990,"line_start":152,"line_end":152,"column_start":5,"column_end":82}},{"value":"/ without mutating `dst`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":9995,"byte_end":10022,"line_start":153,"line_end":153,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10027,"byte_end":10030,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Implementations should also take care to properly handle being called","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10035,"byte_end":10108,"line_start":155,"line_end":155,"column_start":5,"column_end":78}},{"value":"/ with `dst` being a zero length slice.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10113,"byte_end":10154,"line_start":156,"line_end":156,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10159,"byte_end":10162,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ [`writev`]: http://man7.org/linux/man-pages/man2/readv.2.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10167,"byte_end":10232,"line_start":158,"line_end":158,"column_start":5,"column_end":70}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10237,"byte_end":10260,"line_start":159,"line_end":159,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11424,"byte_end":11431,"line_start":203,"line_end":203,"column_start":8,"column_end":15},"name":"advance","qualname":"::buf::buf_impl::Buf::advance","value":"pub fn advance(&mut Self, usize)","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Advance the internal cursor of the Buf","sig":null,"attributes":[{"value":"/ Advance the internal cursor of the Buf","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10543,"byte_end":10585,"line_start":173,"line_end":173,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10590,"byte_end":10593,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The next call to `bytes` will return a slice starting `cnt` bytes","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10598,"byte_end":10667,"line_start":175,"line_end":175,"column_start":5,"column_end":74}},{"value":"/ further into the underlying buffer.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10672,"byte_end":10711,"line_start":176,"line_end":176,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10716,"byte_end":10719,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10724,"byte_end":10738,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10743,"byte_end":10746,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10751,"byte_end":10758,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10763,"byte_end":10782,"line_start":181,"line_end":181,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10787,"byte_end":10790,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10795,"byte_end":10833,"line_start":183,"line_end":183,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10838,"byte_end":10841,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.bytes(), &b\"hello world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10846,"byte_end":10895,"line_start":185,"line_end":185,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10900,"byte_end":10903,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ buf.advance(6);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10908,"byte_end":10927,"line_start":187,"line_end":187,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10932,"byte_end":10935,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.bytes(), &b\"world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10940,"byte_end":10983,"line_start":189,"line_end":189,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":10988,"byte_end":10995,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11000,"byte_end":11003,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11008,"byte_end":11020,"line_start":192,"line_end":192,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11025,"byte_end":11028,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This function **may** panic if `cnt > self.remaining()`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11033,"byte_end":11093,"line_start":194,"line_end":194,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11098,"byte_end":11101,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11106,"byte_end":11129,"line_start":196,"line_end":196,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11134,"byte_end":11137,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ It is recommended for implementations of `advance` to panic if `cnt >","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11142,"byte_end":11215,"line_start":198,"line_end":198,"column_start":5,"column_end":78}},{"value":"/ self.remaining()`. If the implementation does not panic, the call must","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11220,"byte_end":11294,"line_start":199,"line_end":199,"column_start":5,"column_end":79}},{"value":"/ behave as if `cnt == self.remaining()`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11299,"byte_end":11342,"line_start":200,"line_end":200,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11347,"byte_end":11350,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ A call with `cnt == 0` should never panic and be a no-op.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11355,"byte_end":11416,"line_start":202,"line_end":202,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11834,"byte_end":11847,"line_start":222,"line_end":222,"column_start":8,"column_end":21},"name":"has_remaining","qualname":"::buf::buf_impl::Buf::has_remaining","value":"pub fn has_remaining(&Self) -> bool","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Returns true if there are any more bytes to consume","sig":null,"attributes":[{"value":"/ Returns true if there are any more bytes to consume","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11461,"byte_end":11516,"line_start":205,"line_end":205,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11521,"byte_end":11524,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.remaining() != 0`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11529,"byte_end":11579,"line_start":207,"line_end":207,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11584,"byte_end":11587,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11592,"byte_end":11606,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11611,"byte_end":11614,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11619,"byte_end":11626,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11631,"byte_end":11650,"line_start":212,"line_end":212,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11655,"byte_end":11658,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"a\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11663,"byte_end":11691,"line_start":214,"line_end":214,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11696,"byte_end":11699,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ assert!(buf.has_remaining());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11704,"byte_end":11737,"line_start":216,"line_end":216,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11742,"byte_end":11745,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ buf.get_u8();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11750,"byte_end":11767,"line_start":218,"line_end":218,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11772,"byte_end":11775,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ assert!(!buf.has_remaining());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11780,"byte_end":11814,"line_start":220,"line_end":220,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11819,"byte_end":11826,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":12472,"byte_end":12485,"line_start":247,"line_end":247,"column_start":8,"column_end":21},"name":"copy_to_slice","qualname":"::buf::buf_impl::Buf::copy_to_slice","value":"pub fn copy_to_slice(&mut Self, &mut [u8])","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Copies bytes from `self` into `dst`.","sig":null,"attributes":[{"value":"/ Copies bytes from `self` into `dst`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11905,"byte_end":11945,"line_start":226,"line_end":226,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11950,"byte_end":11953,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ The cursor is advanced by the number of bytes copied. `self` must have","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":11958,"byte_end":12032,"line_start":228,"line_end":228,"column_start":5,"column_end":79}},{"value":"/ enough remaining bytes to fill `dst`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":12037,"byte_end":12078,"line_start":229,"line_end":229,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":12083,"byte_end":12086,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":12091,"byte_end":12105,"line_start":231,"line_end":231,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":12110,"byte_end":12113,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":12118,"byte_end":12125,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":12130,"byte_end":12149,"line_start":234,"line_end":234,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":12154,"byte_end":12157,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"hello world\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":12162,"byte_end":12200,"line_start":236,"line_end":236,"column_start":5,"column_end":43}},{"value":"/ let mut dst = [0; 5];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":12205,"byte_end":12230,"line_start":237,"line_end":237,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":12235,"byte_end":12238,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ buf.copy_to_slice(&mut dst);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":12243,"byte_end":12275,"line_start":239,"line_end":239,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(&b\"hello\"[..], &dst);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":12280,"byte_end":12316,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(6, buf.remaining());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":12321,"byte_end":12356,"line_start":241,"line_end":241,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":12361,"byte_end":12368,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":12373,"byte_end":12376,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":12381,"byte_end":12393,"line_start":244,"line_end":244,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":12398,"byte_end":12401,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ This function panics if `self.remaining() < dst.len()`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":12406,"byte_end":12464,"line_start":246,"line_end":246,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13336,"byte_end":13342,"line_start":284,"line_end":284,"column_start":8,"column_end":14},"name":"get_u8","qualname":"::buf::buf_impl::Buf::get_u8","value":"pub fn get_u8(&mut Self) -> u8","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets an unsigned 8 bit integer from `self`.","sig":null,"attributes":[{"value":"/ Gets an unsigned 8 bit integer from `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":12948,"byte_end":12995,"line_start":268,"line_end":268,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13000,"byte_end":13003,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 1.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13008,"byte_end":13050,"line_start":270,"line_end":270,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13055,"byte_end":13058,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13063,"byte_end":13077,"line_start":272,"line_end":272,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13082,"byte_end":13085,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13090,"byte_end":13097,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13102,"byte_end":13121,"line_start":275,"line_end":275,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13126,"byte_end":13129,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08 hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13134,"byte_end":13171,"line_start":277,"line_end":277,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(8, buf.get_u8());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13176,"byte_end":13208,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13213,"byte_end":13220,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13225,"byte_end":13228,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13233,"byte_end":13245,"line_start":281,"line_end":281,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13250,"byte_end":13253,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is no more remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13258,"byte_end":13328,"line_start":283,"line_end":283,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13870,"byte_end":13876,"line_start":307,"line_end":307,"column_start":8,"column_end":14},"name":"get_i8","qualname":"::buf::buf_impl::Buf::get_i8","value":"pub fn get_i8(&mut Self) -> i8","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets a signed 8 bit integer from `self`.","sig":null,"attributes":[{"value":"/ Gets a signed 8 bit integer from `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13485,"byte_end":13529,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13534,"byte_end":13537,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 1.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13542,"byte_end":13584,"line_start":293,"line_end":293,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13589,"byte_end":13592,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13597,"byte_end":13611,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13616,"byte_end":13619,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13624,"byte_end":13631,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13636,"byte_end":13655,"line_start":298,"line_end":298,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13660,"byte_end":13663,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08 hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13668,"byte_end":13705,"line_start":300,"line_end":300,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(8, buf.get_i8());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13710,"byte_end":13742,"line_start":301,"line_end":301,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13747,"byte_end":13754,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13759,"byte_end":13762,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13767,"byte_end":13779,"line_start":304,"line_end":304,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13784,"byte_end":13787,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is no more remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":13792,"byte_end":13862,"line_start":306,"line_end":306,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14452,"byte_end":14459,"line_start":330,"line_end":330,"column_start":8,"column_end":15},"name":"get_u16","qualname":"::buf::buf_impl::Buf::get_u16","value":"pub fn get_u16(&mut Self) -> u16","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets an unsigned 16 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 16 bit integer from `self` in big-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14025,"byte_end":14098,"line_start":314,"line_end":314,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14103,"byte_end":14106,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14111,"byte_end":14153,"line_start":316,"line_end":316,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14158,"byte_end":14161,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14166,"byte_end":14180,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14185,"byte_end":14188,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14193,"byte_end":14200,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14205,"byte_end":14224,"line_start":321,"line_end":321,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14229,"byte_end":14232,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x09 hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14237,"byte_end":14278,"line_start":323,"line_end":323,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(0x0809, buf.get_u16());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14283,"byte_end":14321,"line_start":324,"line_end":324,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14326,"byte_end":14333,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14338,"byte_end":14341,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14346,"byte_end":14358,"line_start":327,"line_end":327,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14363,"byte_end":14366,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14371,"byte_end":14444,"line_start":329,"line_end":329,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14973,"byte_end":14983,"line_start":350,"line_end":350,"column_start":8,"column_end":18},"name":"get_u16_le","qualname":"::buf::buf_impl::Buf::get_u16_le","value":"pub fn get_u16_le(&mut Self) -> u16","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets an unsigned 16 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 16 bit integer from `self` in little-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14540,"byte_end":14616,"line_start":334,"line_end":334,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14621,"byte_end":14624,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14629,"byte_end":14671,"line_start":336,"line_end":336,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14676,"byte_end":14679,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14684,"byte_end":14698,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14703,"byte_end":14706,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14711,"byte_end":14718,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14723,"byte_end":14742,"line_start":341,"line_end":341,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14747,"byte_end":14750,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x09\\x08 hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14755,"byte_end":14796,"line_start":343,"line_end":343,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(0x0809, buf.get_u16_le());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14801,"byte_end":14842,"line_start":344,"line_end":344,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14847,"byte_end":14854,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14859,"byte_end":14862,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14867,"byte_end":14879,"line_start":347,"line_end":347,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14884,"byte_end":14887,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":14892,"byte_end":14965,"line_start":349,"line_end":349,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15488,"byte_end":15495,"line_start":370,"line_end":370,"column_start":8,"column_end":15},"name":"get_i16","qualname":"::buf::buf_impl::Buf::get_i16","value":"pub fn get_i16(&mut Self) -> i16","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets a signed 16 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 16 bit integer from `self` in big-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15064,"byte_end":15134,"line_start":354,"line_end":354,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15139,"byte_end":15142,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15147,"byte_end":15189,"line_start":356,"line_end":356,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15194,"byte_end":15197,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15202,"byte_end":15216,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15221,"byte_end":15224,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15229,"byte_end":15236,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15241,"byte_end":15260,"line_start":361,"line_end":361,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15265,"byte_end":15268,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x09 hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15273,"byte_end":15314,"line_start":363,"line_end":363,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(0x0809, buf.get_i16());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15319,"byte_end":15357,"line_start":364,"line_end":364,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15362,"byte_end":15369,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15374,"byte_end":15377,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15382,"byte_end":15394,"line_start":367,"line_end":367,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15399,"byte_end":15402,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15407,"byte_end":15480,"line_start":369,"line_end":369,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16006,"byte_end":16016,"line_start":390,"line_end":390,"column_start":8,"column_end":18},"name":"get_i16_le","qualname":"::buf::buf_impl::Buf::get_i16_le","value":"pub fn get_i16_le(&mut Self) -> i16","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets a signed 16 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 16 bit integer from `self` in little-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15576,"byte_end":15649,"line_start":374,"line_end":374,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15654,"byte_end":15657,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15662,"byte_end":15704,"line_start":376,"line_end":376,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15709,"byte_end":15712,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15717,"byte_end":15731,"line_start":378,"line_end":378,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15736,"byte_end":15739,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15744,"byte_end":15751,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15756,"byte_end":15775,"line_start":381,"line_end":381,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15780,"byte_end":15783,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x09\\x08 hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15788,"byte_end":15829,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(0x0809, buf.get_i16_le());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15834,"byte_end":15875,"line_start":384,"line_end":384,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15880,"byte_end":15887,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15892,"byte_end":15895,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15900,"byte_end":15912,"line_start":387,"line_end":387,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15917,"byte_end":15920,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":15925,"byte_end":15998,"line_start":389,"line_end":389,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16540,"byte_end":16547,"line_start":410,"line_end":410,"column_start":8,"column_end":15},"name":"get_u32","qualname":"::buf::buf_impl::Buf::get_u32","value":"pub fn get_u32(&mut Self) -> u32","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets an unsigned 32 bit integer from `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 32 bit integer from `self` in the big-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16097,"byte_end":16174,"line_start":394,"line_end":394,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16179,"byte_end":16182,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16187,"byte_end":16229,"line_start":396,"line_end":396,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16234,"byte_end":16237,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16242,"byte_end":16256,"line_start":398,"line_end":398,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16261,"byte_end":16264,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16269,"byte_end":16276,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16281,"byte_end":16300,"line_start":401,"line_end":401,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16305,"byte_end":16308,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x09\\xA0\\xA1 hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16313,"byte_end":16362,"line_start":403,"line_end":403,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_u32());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16367,"byte_end":16409,"line_start":404,"line_end":404,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16414,"byte_end":16421,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16426,"byte_end":16429,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16434,"byte_end":16446,"line_start":407,"line_end":407,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16451,"byte_end":16454,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16459,"byte_end":16532,"line_start":409,"line_end":409,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17077,"byte_end":17087,"line_start":430,"line_end":430,"column_start":8,"column_end":18},"name":"get_u32_le","qualname":"::buf::buf_impl::Buf::get_u32_le","value":"pub fn get_u32_le(&mut Self) -> u32","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets an unsigned 32 bit integer from `self` in the little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 32 bit integer from `self` in the little-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16628,"byte_end":16708,"line_start":414,"line_end":414,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16713,"byte_end":16716,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16721,"byte_end":16763,"line_start":416,"line_end":416,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16768,"byte_end":16771,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16776,"byte_end":16790,"line_start":418,"line_end":418,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16795,"byte_end":16798,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16803,"byte_end":16810,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16815,"byte_end":16834,"line_start":421,"line_end":421,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16839,"byte_end":16842,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16847,"byte_end":16896,"line_start":423,"line_end":423,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_u32_le());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16901,"byte_end":16946,"line_start":424,"line_end":424,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16951,"byte_end":16958,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16963,"byte_end":16966,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16971,"byte_end":16983,"line_start":427,"line_end":427,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16988,"byte_end":16991,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":16996,"byte_end":17069,"line_start":429,"line_end":429,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17604,"byte_end":17611,"line_start":450,"line_end":450,"column_start":8,"column_end":15},"name":"get_i32","qualname":"::buf::buf_impl::Buf::get_i32","value":"pub fn get_i32(&mut Self) -> i32","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets a signed 32 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 32 bit integer from `self` in big-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17168,"byte_end":17238,"line_start":434,"line_end":434,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17243,"byte_end":17246,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17251,"byte_end":17293,"line_start":436,"line_end":436,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17298,"byte_end":17301,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17306,"byte_end":17320,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17325,"byte_end":17328,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17333,"byte_end":17340,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17345,"byte_end":17364,"line_start":441,"line_end":441,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17369,"byte_end":17372,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x09\\xA0\\xA1 hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17377,"byte_end":17426,"line_start":443,"line_end":443,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_i32());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17431,"byte_end":17473,"line_start":444,"line_end":444,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17478,"byte_end":17485,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17490,"byte_end":17493,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17498,"byte_end":17510,"line_start":447,"line_end":447,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17515,"byte_end":17518,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17523,"byte_end":17596,"line_start":449,"line_end":449,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18134,"byte_end":18144,"line_start":470,"line_end":470,"column_start":8,"column_end":18},"name":"get_i32_le","qualname":"::buf::buf_impl::Buf::get_i32_le","value":"pub fn get_i32_le(&mut Self) -> i32","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets a signed 32 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 32 bit integer from `self` in little-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17692,"byte_end":17765,"line_start":454,"line_end":454,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17770,"byte_end":17773,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17778,"byte_end":17820,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17825,"byte_end":17828,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17833,"byte_end":17847,"line_start":458,"line_end":458,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17852,"byte_end":17855,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17860,"byte_end":17867,"line_start":460,"line_end":460,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17872,"byte_end":17891,"line_start":461,"line_end":461,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17896,"byte_end":17899,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\xA1\\xA0\\x09\\x08 hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17904,"byte_end":17953,"line_start":463,"line_end":463,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(0x0809A0A1, buf.get_i32_le());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":17958,"byte_end":18003,"line_start":464,"line_end":464,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18008,"byte_end":18015,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18020,"byte_end":18023,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18028,"byte_end":18040,"line_start":467,"line_end":467,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18045,"byte_end":18048,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18053,"byte_end":18126,"line_start":469,"line_end":469,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18688,"byte_end":18695,"line_start":490,"line_end":490,"column_start":8,"column_end":15},"name":"get_u64","qualname":"::buf::buf_impl::Buf::get_u64","value":"pub fn get_u64(&mut Self) -> u64","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets an unsigned 64 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 64 bit integer from `self` in big-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18225,"byte_end":18298,"line_start":474,"line_end":474,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18303,"byte_end":18306,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18311,"byte_end":18353,"line_start":476,"line_end":476,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18358,"byte_end":18361,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18366,"byte_end":18380,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18385,"byte_end":18388,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18393,"byte_end":18400,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18405,"byte_end":18424,"line_start":481,"line_end":481,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18429,"byte_end":18432,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18437,"byte_end":18502,"line_start":483,"line_end":483,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_u64());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18507,"byte_end":18557,"line_start":484,"line_end":484,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18562,"byte_end":18569,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18574,"byte_end":18577,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18582,"byte_end":18594,"line_start":487,"line_end":487,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18599,"byte_end":18602,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18607,"byte_end":18680,"line_start":489,"line_end":489,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19245,"byte_end":19255,"line_start":510,"line_end":510,"column_start":8,"column_end":18},"name":"get_u64_le","qualname":"::buf::buf_impl::Buf::get_u64_le","value":"pub fn get_u64_le(&mut Self) -> u64","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets an unsigned 64 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 64 bit integer from `self` in little-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18776,"byte_end":18852,"line_start":494,"line_end":494,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18857,"byte_end":18860,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18865,"byte_end":18907,"line_start":496,"line_end":496,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18912,"byte_end":18915,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18920,"byte_end":18934,"line_start":498,"line_end":498,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18939,"byte_end":18942,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18947,"byte_end":18954,"line_start":500,"line_end":500,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18959,"byte_end":18978,"line_start":501,"line_end":501,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18983,"byte_end":18986,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":18991,"byte_end":19056,"line_start":503,"line_end":503,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_u64_le());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19061,"byte_end":19114,"line_start":504,"line_end":504,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19119,"byte_end":19126,"line_start":505,"line_end":505,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19131,"byte_end":19134,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19139,"byte_end":19151,"line_start":507,"line_end":507,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19156,"byte_end":19159,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19164,"byte_end":19237,"line_start":509,"line_end":509,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19796,"byte_end":19803,"line_start":530,"line_end":530,"column_start":8,"column_end":15},"name":"get_i64","qualname":"::buf::buf_impl::Buf::get_i64","value":"pub fn get_i64(&mut Self) -> i64","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets a signed 64 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 64 bit integer from `self` in big-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19336,"byte_end":19406,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19411,"byte_end":19414,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19419,"byte_end":19461,"line_start":516,"line_end":516,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19466,"byte_end":19469,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19474,"byte_end":19488,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19493,"byte_end":19496,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19501,"byte_end":19508,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19513,"byte_end":19532,"line_start":521,"line_end":521,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19537,"byte_end":19540,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08 hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19545,"byte_end":19610,"line_start":523,"line_end":523,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_i64());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19615,"byte_end":19665,"line_start":524,"line_end":524,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19670,"byte_end":19677,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19682,"byte_end":19685,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19690,"byte_end":19702,"line_start":527,"line_end":527,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19707,"byte_end":19710,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19715,"byte_end":19788,"line_start":529,"line_end":529,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20350,"byte_end":20360,"line_start":550,"line_end":550,"column_start":8,"column_end":18},"name":"get_i64_le","qualname":"::buf::buf_impl::Buf::get_i64_le","value":"pub fn get_i64_le(&mut Self) -> i64","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets a signed 64 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 64 bit integer from `self` in little-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19884,"byte_end":19957,"line_start":534,"line_end":534,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19962,"byte_end":19965,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":19970,"byte_end":20012,"line_start":536,"line_end":536,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20017,"byte_end":20020,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20025,"byte_end":20039,"line_start":538,"line_end":538,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20044,"byte_end":20047,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20052,"byte_end":20059,"line_start":540,"line_end":540,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20064,"byte_end":20083,"line_start":541,"line_end":541,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20088,"byte_end":20091,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20096,"byte_end":20161,"line_start":543,"line_end":543,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(0x0102030405060708, buf.get_i64_le());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20166,"byte_end":20219,"line_start":544,"line_end":544,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20224,"byte_end":20231,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20236,"byte_end":20239,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20244,"byte_end":20256,"line_start":547,"line_end":547,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20261,"byte_end":20264,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20269,"byte_end":20342,"line_start":549,"line_end":549,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20955,"byte_end":20963,"line_start":570,"line_end":570,"column_start":8,"column_end":16},"name":"get_u128","qualname":"::buf::buf_impl::Buf::get_u128","value":"pub fn get_u128(&mut Self) -> u128","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets an unsigned 128 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 128 bit integer from `self` in big-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20441,"byte_end":20515,"line_start":554,"line_end":554,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20520,"byte_end":20523,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20528,"byte_end":20571,"line_start":556,"line_end":556,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20576,"byte_end":20579,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20584,"byte_end":20598,"line_start":558,"line_end":558,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20603,"byte_end":20606,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20611,"byte_end":20618,"line_start":560,"line_end":560,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20623,"byte_end":20642,"line_start":561,"line_end":561,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20647,"byte_end":20650,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20655,"byte_end":20752,"line_start":563,"line_end":563,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_u128());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20757,"byte_end":20824,"line_start":564,"line_end":564,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20829,"byte_end":20836,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20841,"byte_end":20844,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20849,"byte_end":20861,"line_start":567,"line_end":567,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20866,"byte_end":20869,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":20874,"byte_end":20947,"line_start":569,"line_end":569,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21566,"byte_end":21577,"line_start":590,"line_end":590,"column_start":8,"column_end":19},"name":"get_u128_le","qualname":"::buf::buf_impl::Buf::get_u128_le","value":"pub fn get_u128_le(&mut Self) -> u128","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets an unsigned 128 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned 128 bit integer from `self` in little-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21046,"byte_end":21123,"line_start":574,"line_end":574,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21128,"byte_end":21131,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21136,"byte_end":21179,"line_start":576,"line_end":576,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21184,"byte_end":21187,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21192,"byte_end":21206,"line_start":578,"line_end":578,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21211,"byte_end":21214,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21219,"byte_end":21226,"line_start":580,"line_end":580,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21231,"byte_end":21250,"line_start":581,"line_end":581,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21255,"byte_end":21258,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21263,"byte_end":21360,"line_start":583,"line_end":583,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_u128_le());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21365,"byte_end":21435,"line_start":584,"line_end":584,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21440,"byte_end":21447,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21452,"byte_end":21455,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21460,"byte_end":21472,"line_start":587,"line_end":587,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21477,"byte_end":21480,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21485,"byte_end":21558,"line_start":589,"line_end":589,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22171,"byte_end":22179,"line_start":610,"line_end":610,"column_start":8,"column_end":16},"name":"get_i128","qualname":"::buf::buf_impl::Buf::get_i128","value":"pub fn get_i128(&mut Self) -> i128","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets a signed 128 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 128 bit integer from `self` in big-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21660,"byte_end":21731,"line_start":594,"line_end":594,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21736,"byte_end":21739,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21744,"byte_end":21787,"line_start":596,"line_end":596,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21792,"byte_end":21795,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21800,"byte_end":21814,"line_start":598,"line_end":598,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21819,"byte_end":21822,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21827,"byte_end":21834,"line_start":600,"line_end":600,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21839,"byte_end":21858,"line_start":601,"line_end":601,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21863,"byte_end":21866,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16 hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21871,"byte_end":21968,"line_start":603,"line_end":603,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_i128());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":21973,"byte_end":22040,"line_start":604,"line_end":604,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22045,"byte_end":22052,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22057,"byte_end":22060,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22065,"byte_end":22077,"line_start":607,"line_end":607,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22082,"byte_end":22085,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22090,"byte_end":22163,"line_start":609,"line_end":609,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22779,"byte_end":22790,"line_start":630,"line_end":630,"column_start":8,"column_end":19},"name":"get_i128_le","qualname":"::buf::buf_impl::Buf::get_i128_le","value":"pub fn get_i128_le(&mut Self) -> i128","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets a signed 128 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed 128 bit integer from `self` in little-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22262,"byte_end":22336,"line_start":614,"line_end":614,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22341,"byte_end":22344,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22349,"byte_end":22392,"line_start":616,"line_end":616,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22397,"byte_end":22400,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22405,"byte_end":22419,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22424,"byte_end":22427,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22432,"byte_end":22439,"line_start":620,"line_end":620,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22444,"byte_end":22463,"line_start":621,"line_end":621,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22468,"byte_end":22471,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22476,"byte_end":22573,"line_start":623,"line_end":623,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(0x01020304050607080910111213141516, buf.get_i128_le());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22578,"byte_end":22648,"line_start":624,"line_end":624,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22653,"byte_end":22660,"line_start":625,"line_end":625,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22665,"byte_end":22668,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22673,"byte_end":22685,"line_start":627,"line_end":627,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22690,"byte_end":22693,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22698,"byte_end":22771,"line_start":629,"line_end":629,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23315,"byte_end":23323,"line_start":650,"line_end":650,"column_start":8,"column_end":16},"name":"get_uint","qualname":"::buf::buf_impl::Buf::get_uint","value":"pub fn get_uint(&mut Self, usize) -> u64","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets an unsigned n-byte integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned n-byte integer from `self` in big-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22873,"byte_end":22946,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22951,"byte_end":22954,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":22959,"byte_end":23008,"line_start":636,"line_end":636,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23013,"byte_end":23016,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23021,"byte_end":23035,"line_start":638,"line_end":638,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23040,"byte_end":23043,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23048,"byte_end":23055,"line_start":640,"line_end":640,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23060,"byte_end":23079,"line_start":641,"line_end":641,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23084,"byte_end":23087,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03 hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23092,"byte_end":23137,"line_start":643,"line_end":643,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(0x010203, buf.get_uint(3));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23142,"byte_end":23184,"line_start":644,"line_end":644,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23189,"byte_end":23196,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23201,"byte_end":23204,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23209,"byte_end":23221,"line_start":647,"line_end":647,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23226,"byte_end":23229,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23234,"byte_end":23307,"line_start":649,"line_end":649,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23866,"byte_end":23877,"line_start":670,"line_end":670,"column_start":8,"column_end":19},"name":"get_uint_le","qualname":"::buf::buf_impl::Buf::get_uint_le","value":"pub fn get_uint_le(&mut Self, usize) -> u64","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets an unsigned n-byte integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an unsigned n-byte integer from `self` in little-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23418,"byte_end":23494,"line_start":654,"line_end":654,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23499,"byte_end":23502,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23507,"byte_end":23556,"line_start":656,"line_end":656,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23561,"byte_end":23564,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23569,"byte_end":23583,"line_start":658,"line_end":658,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23588,"byte_end":23591,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23596,"byte_end":23603,"line_start":660,"line_end":660,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23608,"byte_end":23627,"line_start":661,"line_end":661,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23632,"byte_end":23635,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23640,"byte_end":23685,"line_start":663,"line_end":663,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(0x010203, buf.get_uint_le(3));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23690,"byte_end":23735,"line_start":664,"line_end":664,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23740,"byte_end":23747,"line_start":665,"line_end":665,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23752,"byte_end":23755,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23760,"byte_end":23772,"line_start":667,"line_end":667,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23777,"byte_end":23780,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23785,"byte_end":23858,"line_start":669,"line_end":669,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24410,"byte_end":24417,"line_start":690,"line_end":690,"column_start":8,"column_end":15},"name":"get_int","qualname":"::buf::buf_impl::Buf::get_int","value":"pub fn get_int(&mut Self, usize) -> i64","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets a signed n-byte integer from `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed n-byte integer from `self` in big-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":23972,"byte_end":24042,"line_start":674,"line_end":674,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24047,"byte_end":24050,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24055,"byte_end":24104,"line_start":676,"line_end":676,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24109,"byte_end":24112,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24117,"byte_end":24131,"line_start":678,"line_end":678,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24136,"byte_end":24139,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24144,"byte_end":24151,"line_start":680,"line_end":680,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24156,"byte_end":24175,"line_start":681,"line_end":681,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24180,"byte_end":24183,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x01\\x02\\x03 hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24188,"byte_end":24233,"line_start":683,"line_end":683,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(0x010203, buf.get_int(3));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24238,"byte_end":24279,"line_start":684,"line_end":684,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24284,"byte_end":24291,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24296,"byte_end":24299,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24304,"byte_end":24316,"line_start":687,"line_end":687,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24321,"byte_end":24324,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24329,"byte_end":24402,"line_start":689,"line_end":689,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24956,"byte_end":24966,"line_start":710,"line_end":710,"column_start":8,"column_end":18},"name":"get_int_le","qualname":"::buf::buf_impl::Buf::get_int_le","value":"pub fn get_int_le(&mut Self, usize) -> i64","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets a signed n-byte integer from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets a signed n-byte integer from `self` in little-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24512,"byte_end":24585,"line_start":694,"line_end":694,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24590,"byte_end":24593,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24598,"byte_end":24647,"line_start":696,"line_end":696,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24652,"byte_end":24655,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24660,"byte_end":24674,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24679,"byte_end":24682,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24687,"byte_end":24694,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24699,"byte_end":24718,"line_start":701,"line_end":701,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24723,"byte_end":24726,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x03\\x02\\x01 hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24731,"byte_end":24776,"line_start":703,"line_end":703,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(0x010203, buf.get_int_le(3));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24781,"byte_end":24825,"line_start":704,"line_end":704,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24830,"byte_end":24837,"line_start":705,"line_end":705,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24842,"byte_end":24845,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24850,"byte_end":24862,"line_start":707,"line_end":707,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24867,"byte_end":24870,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":24875,"byte_end":24948,"line_start":709,"line_end":709,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25537,"byte_end":25544,"line_start":731,"line_end":731,"column_start":8,"column_end":15},"name":"get_f32","qualname":"::buf::buf_impl::Buf::get_f32","value":"pub fn get_f32(&mut Self) -> f32","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets an IEEE754 single-precision (4 bytes) floating point number from\n `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 single-precision (4 bytes) floating point number from","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25061,"byte_end":25134,"line_start":714,"line_end":714,"column_start":5,"column_end":78}},{"value":"/ `self` in big-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25139,"byte_end":25175,"line_start":715,"line_end":715,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25180,"byte_end":25183,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25188,"byte_end":25230,"line_start":717,"line_end":717,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25235,"byte_end":25238,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25243,"byte_end":25257,"line_start":719,"line_end":719,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25262,"byte_end":25265,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25270,"byte_end":25277,"line_start":721,"line_end":721,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25282,"byte_end":25301,"line_start":722,"line_end":722,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25306,"byte_end":25309,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x3F\\x99\\x99\\x9A hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25314,"byte_end":25363,"line_start":724,"line_end":724,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(1.2f32, buf.get_f32());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25368,"byte_end":25406,"line_start":725,"line_end":725,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25411,"byte_end":25418,"line_start":726,"line_end":726,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25423,"byte_end":25426,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25431,"byte_end":25443,"line_start":728,"line_end":728,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25448,"byte_end":25451,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25456,"byte_end":25529,"line_start":730,"line_end":730,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26102,"byte_end":26112,"line_start":752,"line_end":752,"column_start":8,"column_end":18},"name":"get_f32_le","qualname":"::buf::buf_impl::Buf::get_f32_le","value":"pub fn get_f32_le(&mut Self) -> f32","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets an IEEE754 single-precision (4 bytes) floating point number from\n `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 single-precision (4 bytes) floating point number from","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25620,"byte_end":25693,"line_start":735,"line_end":735,"column_start":5,"column_end":78}},{"value":"/ `self` in little-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25698,"byte_end":25737,"line_start":736,"line_end":736,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25742,"byte_end":25745,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25750,"byte_end":25792,"line_start":738,"line_end":738,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25797,"byte_end":25800,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25805,"byte_end":25819,"line_start":740,"line_end":740,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25824,"byte_end":25827,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25832,"byte_end":25839,"line_start":742,"line_end":742,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25844,"byte_end":25863,"line_start":743,"line_end":743,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25868,"byte_end":25871,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x9A\\x99\\x99\\x3F hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25876,"byte_end":25925,"line_start":745,"line_end":745,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(1.2f32, buf.get_f32_le());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25930,"byte_end":25971,"line_start":746,"line_end":746,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25976,"byte_end":25983,"line_start":747,"line_end":747,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25988,"byte_end":25991,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":25996,"byte_end":26008,"line_start":749,"line_end":749,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26013,"byte_end":26016,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26021,"byte_end":26094,"line_start":751,"line_end":751,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26683,"byte_end":26690,"line_start":773,"line_end":773,"column_start":8,"column_end":15},"name":"get_f64","qualname":"::buf::buf_impl::Buf::get_f64","value":"pub fn get_f64(&mut Self) -> f64","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets an IEEE754 double-precision (8 bytes) floating point number from\n `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 double-precision (8 bytes) floating point number from","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26191,"byte_end":26264,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ `self` in big-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26269,"byte_end":26305,"line_start":757,"line_end":757,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26310,"byte_end":26313,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26318,"byte_end":26360,"line_start":759,"line_end":759,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26365,"byte_end":26368,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26373,"byte_end":26387,"line_start":761,"line_end":761,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26392,"byte_end":26395,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26400,"byte_end":26407,"line_start":763,"line_end":763,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26412,"byte_end":26431,"line_start":764,"line_end":764,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26436,"byte_end":26439,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33 hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26444,"byte_end":26509,"line_start":766,"line_end":766,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(1.2f64, buf.get_f64());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26514,"byte_end":26552,"line_start":767,"line_end":767,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26557,"byte_end":26564,"line_start":768,"line_end":768,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26569,"byte_end":26572,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26577,"byte_end":26589,"line_start":770,"line_end":770,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26594,"byte_end":26597,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26602,"byte_end":26675,"line_start":772,"line_end":772,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27264,"byte_end":27274,"line_start":794,"line_end":794,"column_start":8,"column_end":18},"name":"get_f64_le","qualname":"::buf::buf_impl::Buf::get_f64_le","value":"pub fn get_f64_le(&mut Self) -> f64","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Gets an IEEE754 double-precision (8 bytes) floating point number from\n `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Gets an IEEE754 double-precision (8 bytes) floating point number from","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26766,"byte_end":26839,"line_start":777,"line_end":777,"column_start":5,"column_end":78}},{"value":"/ `self` in little-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26844,"byte_end":26883,"line_start":778,"line_end":778,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26888,"byte_end":26891,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26896,"byte_end":26938,"line_start":780,"line_end":780,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26943,"byte_end":26946,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26951,"byte_end":26965,"line_start":782,"line_end":782,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26970,"byte_end":26973,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26978,"byte_end":26985,"line_start":784,"line_end":784,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":26990,"byte_end":27009,"line_start":785,"line_end":785,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27014,"byte_end":27017,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ let mut buf = &b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F hello\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27022,"byte_end":27087,"line_start":787,"line_end":787,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(1.2f64, buf.get_f64_le());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27092,"byte_end":27133,"line_start":788,"line_end":788,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27138,"byte_end":27145,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27150,"byte_end":27153,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27158,"byte_end":27170,"line_start":791,"line_end":791,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27175,"byte_end":27178,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining data in `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27183,"byte_end":27256,"line_start":793,"line_end":793,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27847,"byte_end":27860,"line_start":813,"line_end":813,"column_start":8,"column_end":21},"name":"copy_to_bytes","qualname":"::buf::buf_impl::Buf::copy_to_bytes","value":"pub fn copy_to_bytes(&mut Self, usize) -> crate::Bytes","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Consumes `len` bytes inside self and returns new instance of `Bytes`\n with this data.","sig":null,"attributes":[{"value":"/ Consumes `len` bytes inside self and returns new instance of `Bytes`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27353,"byte_end":27425,"line_start":798,"line_end":798,"column_start":5,"column_end":77}},{"value":"/ with this data.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27430,"byte_end":27449,"line_start":799,"line_end":799,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27454,"byte_end":27457,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ This function may be optimized by the underlying type to avoid actual","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27462,"byte_end":27535,"line_start":801,"line_end":801,"column_start":5,"column_end":78}},{"value":"/ copies. For example, `Bytes` implementation will do a shallow copy","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27540,"byte_end":27610,"line_start":802,"line_end":802,"column_start":5,"column_end":75}},{"value":"/ (ref-count increment).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27615,"byte_end":27641,"line_start":803,"line_end":803,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27646,"byte_end":27649,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27654,"byte_end":27668,"line_start":805,"line_end":805,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27673,"byte_end":27676,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27681,"byte_end":27688,"line_start":807,"line_end":807,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27693,"byte_end":27712,"line_start":808,"line_end":808,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27717,"byte_end":27720,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let bytes = (&b\"hello world\"[..]).copy_to_bytes(5);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27725,"byte_end":27780,"line_start":810,"line_end":810,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(&bytes[..], &b\"hello\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27785,"byte_end":27827,"line_start":811,"line_end":811,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":27832,"byte_end":27839,"line_start":812,"line_end":812,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28702,"byte_end":28706,"line_start":844,"line_end":844,"column_start":8,"column_end":12},"name":"take","qualname":"::buf::buf_impl::Buf::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Creates an adaptor which will read at most `limit` bytes from `self`.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will read at most `limit` bytes from `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28129,"byte_end":28202,"line_start":823,"line_end":823,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28207,"byte_end":28210,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ This function returns a new instance of `Buf` which will read at most","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28215,"byte_end":28288,"line_start":825,"line_end":825,"column_start":5,"column_end":78}},{"value":"/ `limit` bytes.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28293,"byte_end":28311,"line_start":826,"line_end":826,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28316,"byte_end":28319,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28324,"byte_end":28338,"line_start":828,"line_end":828,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28343,"byte_end":28346,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28351,"byte_end":28358,"line_start":830,"line_end":830,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Buf, BufMut};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28363,"byte_end":28392,"line_start":831,"line_end":831,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28397,"byte_end":28400,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\"[..].take(5);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28405,"byte_end":28450,"line_start":833,"line_end":833,"column_start":5,"column_end":50}},{"value":"/ let mut dst = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28455,"byte_end":28480,"line_start":834,"line_end":834,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28485,"byte_end":28488,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28493,"byte_end":28515,"line_start":836,"line_end":836,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(dst, b\"hello\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28520,"byte_end":28550,"line_start":837,"line_end":837,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28555,"byte_end":28558,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ let mut buf = buf.into_inner();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28563,"byte_end":28598,"line_start":839,"line_end":839,"column_start":5,"column_end":40}},{"value":"/ dst.clear();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28603,"byte_end":28619,"line_start":840,"line_end":840,"column_start":5,"column_end":21}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28624,"byte_end":28646,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(dst, b\" world\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28651,"byte_end":28682,"line_start":842,"line_end":842,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28687,"byte_end":28694,"line_start":843,"line_end":843,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29299,"byte_end":29304,"line_start":866,"line_end":866,"column_start":8,"column_end":13},"name":"chain","qualname":"::buf::buf_impl::Buf::chain","value":"pub fn chain<U: Buf>(Self, U) -> Chain<Self, U> where Self: Sized","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this buffer with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this buffer with another.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28820,"byte_end":28885,"line_start":851,"line_end":851,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28890,"byte_end":28893,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ The returned `Buf` instance will first consume all bytes from `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28898,"byte_end":28971,"line_start":853,"line_end":853,"column_start":5,"column_end":78}},{"value":"/ Afterwards the output is equivalent to the output of next.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":28976,"byte_end":29038,"line_start":854,"line_end":854,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29043,"byte_end":29046,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29051,"byte_end":29065,"line_start":856,"line_end":856,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29070,"byte_end":29073,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29078,"byte_end":29085,"line_start":858,"line_end":858,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29090,"byte_end":29109,"line_start":859,"line_end":859,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29114,"byte_end":29117,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ let mut chain = b\"hello \"[..].chain(&b\"world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29122,"byte_end":29177,"line_start":861,"line_end":861,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29182,"byte_end":29185,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ let full = chain.copy_to_bytes(11);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29190,"byte_end":29229,"line_start":863,"line_end":863,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(full.bytes(), b\"hello world\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29234,"byte_end":29279,"line_start":864,"line_end":864,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29284,"byte_end":29291,"line_start":865,"line_end":865,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":30194,"byte_end":30200,"line_start":897,"line_end":897,"column_start":8,"column_end":14},"name":"reader","qualname":"::buf::buf_impl::Buf::reader","value":"pub fn reader(Self) -> Reader<Self> where Self: Sized","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Creates an adaptor which implements the `Read` trait for `self`.","sig":null,"attributes":[{"value":"/ Creates an adaptor which implements the `Read` trait for `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29425,"byte_end":29493,"line_start":873,"line_end":873,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29498,"byte_end":29501,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ This function returns a new value which implements `Read` by adapting","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29506,"byte_end":29579,"line_start":875,"line_end":875,"column_start":5,"column_end":78}},{"value":"/ the `Read` trait functions to the `Buf` trait functions. Given that","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29584,"byte_end":29655,"line_start":876,"line_end":876,"column_start":5,"column_end":76}},{"value":"/ `Buf` operations are infallible, none of the `Read` functions will","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29660,"byte_end":29730,"line_start":877,"line_end":877,"column_start":5,"column_end":75}},{"value":"/ return with `Err`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29735,"byte_end":29757,"line_start":878,"line_end":878,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29762,"byte_end":29765,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29770,"byte_end":29784,"line_start":880,"line_end":880,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29789,"byte_end":29792,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29797,"byte_end":29804,"line_start":882,"line_end":882,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Bytes, Buf};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29809,"byte_end":29837,"line_start":883,"line_end":883,"column_start":5,"column_end":33}},{"value":"/ use std::io::Read;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29842,"byte_end":29864,"line_start":884,"line_end":884,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29869,"byte_end":29872,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ let buf = Bytes::from(\"hello world\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29877,"byte_end":29918,"line_start":886,"line_end":886,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29923,"byte_end":29926,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ let mut reader = buf.reader();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29931,"byte_end":29965,"line_start":888,"line_end":888,"column_start":5,"column_end":39}},{"value":"/ let mut dst = [0; 1024];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":29970,"byte_end":29998,"line_start":889,"line_end":889,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":30003,"byte_end":30006,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ let num = reader.read(&mut dst).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":30011,"byte_end":30056,"line_start":891,"line_end":891,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":30061,"byte_end":30064,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(11, num);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":30069,"byte_end":30093,"line_start":893,"line_end":893,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(&dst[..11], &b\"hello world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":30098,"byte_end":30146,"line_start":894,"line_end":894,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":30151,"byte_end":30158,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":30163,"byte_end":30186,"line_start":896,"line_end":896,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":99},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35265,"byte_end":35271,"line_start":29,"line_end":29,"column_start":18,"column_end":24},"name":"BufMut","qualname":"::buf::buf_mut::BufMut","value":"BufMut","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135}],"decl_id":null,"docs":" A trait for values that provide sequential write access to bytes.","sig":null,"attributes":[{"value":"/ A trait for values that provide sequential write access to bytes.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":34694,"byte_end":34763,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":34764,"byte_end":34767,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Write bytes to a buffer","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":34768,"byte_end":34795,"line_start":11,"line_end":11,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":34796,"byte_end":34799,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ A buffer stores bytes in memory such that write operations are infallible.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":34800,"byte_end":34878,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ The underlying storage may or may not be in contiguous memory. A `BufMut`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":34879,"byte_end":34956,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ value is a cursor into the buffer. Writing to `BufMut` advances the cursor","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":34957,"byte_end":35035,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ position.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35036,"byte_end":35049,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35050,"byte_end":35053,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The simplest `BufMut` is a `Vec<u8>`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35054,"byte_end":35095,"line_start":18,"line_end":18,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35096,"byte_end":35099,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35100,"byte_end":35107,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35108,"byte_end":35130,"line_start":21,"line_end":21,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35131,"byte_end":35134,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35135,"byte_end":35160,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35161,"byte_end":35164,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ buf.put(&b\"hello world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35165,"byte_end":35198,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35199,"byte_end":35202,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(buf, b\"hello world\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35203,"byte_end":35239,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35240,"byte_end":35247,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36129,"byte_end":36142,"line_start":55,"line_end":55,"column_start":8,"column_end":21},"name":"remaining_mut","qualname":"::buf::buf_mut::BufMut::remaining_mut","value":"pub fn remaining_mut(&Self) -> usize","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Returns the number of bytes that can be written from the current\n position until the end of the buffer is reached.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that can be written from the current","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35278,"byte_end":35346,"line_start":30,"line_end":30,"column_start":5,"column_end":73}},{"value":"/ position until the end of the buffer is reached.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35351,"byte_end":35403,"line_start":31,"line_end":31,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35408,"byte_end":35411,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This value is greater than or equal to the length of the slice returned","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35416,"byte_end":35491,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ by `bytes_mut`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35496,"byte_end":35515,"line_start":34,"line_end":34,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35520,"byte_end":35523,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35528,"byte_end":35542,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35547,"byte_end":35550,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35555,"byte_end":35562,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35567,"byte_end":35589,"line_start":39,"line_end":39,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35594,"byte_end":35597,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let mut dst = [0; 10];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35602,"byte_end":35628,"line_start":41,"line_end":41,"column_start":5,"column_end":31}},{"value":"/ let mut buf = &mut dst[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35633,"byte_end":35664,"line_start":42,"line_end":42,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35669,"byte_end":35672,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ let original_remaining = buf.remaining_mut();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35677,"byte_end":35726,"line_start":44,"line_end":44,"column_start":5,"column_end":54}},{"value":"/ buf.put(&b\"hello\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35731,"byte_end":35758,"line_start":45,"line_end":45,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35763,"byte_end":35766,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(original_remaining - 5, buf.remaining_mut());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35771,"byte_end":35831,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35836,"byte_end":35843,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35848,"byte_end":35851,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35856,"byte_end":35879,"line_start":50,"line_end":50,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35884,"byte_end":35887,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Implementations of `remaining_mut` should ensure that the return value","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35892,"byte_end":35966,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ does not change unless a call is made to `advance_mut` or any other","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":35971,"byte_end":36042,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ function that is documented to change the `BufMut`'s current position.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36047,"byte_end":36121,"line_start":54,"line_end":54,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37411,"byte_end":37422,"line_start":96,"line_end":96,"column_start":15,"column_end":26},"name":"advance_mut","qualname":"::buf::buf_mut::BufMut::advance_mut","value":"pub unsafe fn advance_mut(&mut Self, usize)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Advance the internal cursor of the BufMut","sig":null,"attributes":[{"value":"/ Advance the internal cursor of the BufMut","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36165,"byte_end":36210,"line_start":57,"line_end":57,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36215,"byte_end":36218,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The next call to `bytes_mut` will return a slice starting `cnt` bytes","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36223,"byte_end":36296,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ further into the underlying buffer.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36301,"byte_end":36340,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36345,"byte_end":36348,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because there is no guarantee that the bytes","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36353,"byte_end":36425,"line_start":62,"line_end":62,"column_start":5,"column_end":77}},{"value":"/ being advanced past have been initialized.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36430,"byte_end":36476,"line_start":63,"line_end":63,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36481,"byte_end":36484,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36489,"byte_end":36503,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36508,"byte_end":36511,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36516,"byte_end":36523,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36528,"byte_end":36550,"line_start":68,"line_end":68,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36555,"byte_end":36558,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Vec::with_capacity(16);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36563,"byte_end":36604,"line_start":70,"line_end":70,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36609,"byte_end":36612,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ // Write some data","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36617,"byte_end":36639,"line_start":72,"line_end":72,"column_start":5,"column_end":27}},{"value":"/ buf.bytes_mut()[0..2].copy_from_slice(b\"he\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36644,"byte_end":36693,"line_start":73,"line_end":73,"column_start":5,"column_end":54}},{"value":"/ unsafe { buf.advance_mut(2) };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36698,"byte_end":36732,"line_start":74,"line_end":74,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36737,"byte_end":36740,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ // write more bytes","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36745,"byte_end":36768,"line_start":76,"line_end":76,"column_start":5,"column_end":28}},{"value":"/ buf.bytes_mut()[0..3].copy_from_slice(b\"llo\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36773,"byte_end":36823,"line_start":77,"line_end":77,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36828,"byte_end":36831,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ unsafe { buf.advance_mut(3); }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36836,"byte_end":36870,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36875,"byte_end":36878,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(5, buf.len());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36883,"byte_end":36912,"line_start":81,"line_end":81,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"hello\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36917,"byte_end":36947,"line_start":82,"line_end":82,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36952,"byte_end":36959,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36964,"byte_end":36967,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36972,"byte_end":36984,"line_start":85,"line_end":85,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36989,"byte_end":36992,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This function **may** panic if `cnt > self.remaining_mut()`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":36997,"byte_end":37061,"line_start":87,"line_end":87,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37066,"byte_end":37069,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37074,"byte_end":37097,"line_start":89,"line_end":89,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37102,"byte_end":37105,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ It is recommended for implementations of `advance_mut` to panic if","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37110,"byte_end":37180,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ `cnt > self.remaining_mut()`. If the implementation does not panic,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37185,"byte_end":37256,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/ the call must behave as if `cnt == self.remaining_mut()`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37261,"byte_end":37322,"line_start":93,"line_end":93,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37327,"byte_end":37330,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ A call with `cnt == 0` should never panic and be a no-op.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37335,"byte_end":37396,"line_start":95,"line_end":95,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37888,"byte_end":37905,"line_start":116,"line_end":116,"column_start":8,"column_end":25},"name":"has_remaining_mut","qualname":"::buf::buf_mut::BufMut::has_remaining_mut","value":"pub fn has_remaining_mut(&Self) -> bool","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Returns true if there is space in `self` for more bytes.","sig":null,"attributes":[{"value":"/ Returns true if there is space in `self` for more bytes.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37452,"byte_end":37512,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37517,"byte_end":37520,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.remaining_mut() != 0`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37525,"byte_end":37579,"line_start":100,"line_end":100,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37584,"byte_end":37587,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37592,"byte_end":37606,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37611,"byte_end":37614,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37619,"byte_end":37626,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37631,"byte_end":37653,"line_start":105,"line_end":105,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37658,"byte_end":37661,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let mut dst = [0; 5];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37666,"byte_end":37691,"line_start":107,"line_end":107,"column_start":5,"column_end":30}},{"value":"/ let mut buf = &mut dst[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37696,"byte_end":37727,"line_start":108,"line_end":108,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37732,"byte_end":37735,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ assert!(buf.has_remaining_mut());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37740,"byte_end":37777,"line_start":110,"line_end":110,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37782,"byte_end":37785,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ buf.put(&b\"hello\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37790,"byte_end":37817,"line_start":112,"line_end":112,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37822,"byte_end":37825,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ assert!(!buf.has_remaining_mut());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37830,"byte_end":37868,"line_start":114,"line_end":114,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37873,"byte_end":37880,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39468,"byte_end":39477,"line_start":161,"line_end":161,"column_start":8,"column_end":17},"name":"bytes_mut","qualname":"::buf::buf_mut::BufMut::bytes_mut","value":"pub fn bytes_mut(&mut Self) -> &mut UninitSlice","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Returns a mutable slice starting at the current BufMut position and of\n length between 0 and `BufMut::remaining_mut()`. Note that this *can* be shorter than the\n whole remainder of the buffer (this allows non-continuous implementation).","sig":null,"attributes":[{"value":"/ Returns a mutable slice starting at the current BufMut position and of","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":37967,"byte_end":38041,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ length between 0 and `BufMut::remaining_mut()`. Note that this *can* be shorter than the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38046,"byte_end":38138,"line_start":121,"line_end":121,"column_start":5,"column_end":97}},{"value":"/ whole remainder of the buffer (this allows non-continuous implementation).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38143,"byte_end":38221,"line_start":122,"line_end":122,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38226,"byte_end":38229,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This is a lower level function. Most operations are done with other","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38234,"byte_end":38305,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ functions.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38310,"byte_end":38324,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38329,"byte_end":38332,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The returned byte slice may represent uninitialized memory.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38337,"byte_end":38400,"line_start":127,"line_end":127,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38405,"byte_end":38408,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38413,"byte_end":38427,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38432,"byte_end":38435,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38440,"byte_end":38447,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38452,"byte_end":38474,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38479,"byte_end":38482,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Vec::with_capacity(16);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38487,"byte_end":38528,"line_start":134,"line_end":134,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38533,"byte_end":38536,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38541,"byte_end":38553,"line_start":136,"line_end":136,"column_start":5,"column_end":17}},{"value":"/     // MaybeUninit::as_mut_ptr","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38558,"byte_end":38592,"line_start":137,"line_end":137,"column_start":5,"column_end":39}},{"value":"/     buf.bytes_mut()[0..].as_mut_ptr().write(b'h');","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38597,"byte_end":38651,"line_start":138,"line_end":138,"column_start":5,"column_end":59}},{"value":"/     buf.bytes_mut()[1..].as_mut_ptr().write(b'e');","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38656,"byte_end":38710,"line_start":139,"line_end":139,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38715,"byte_end":38718,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/     buf.advance_mut(2);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38723,"byte_end":38750,"line_start":141,"line_end":141,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38755,"byte_end":38758,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     buf.bytes_mut()[0..].as_mut_ptr().write(b'l');","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38763,"byte_end":38817,"line_start":143,"line_end":143,"column_start":5,"column_end":59}},{"value":"/     buf.bytes_mut()[1..].as_mut_ptr().write(b'l');","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38822,"byte_end":38876,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/     buf.bytes_mut()[2..].as_mut_ptr().write(b'o');","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38881,"byte_end":38935,"line_start":145,"line_end":145,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38940,"byte_end":38943,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/     buf.advance_mut(3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38948,"byte_end":38975,"line_start":147,"line_end":147,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38980,"byte_end":38985,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38990,"byte_end":38993,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(5, buf.len());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":38998,"byte_end":39027,"line_start":150,"line_end":150,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"hello\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39032,"byte_end":39062,"line_start":151,"line_end":151,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39067,"byte_end":39074,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39079,"byte_end":39082,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39087,"byte_end":39110,"line_start":154,"line_end":154,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39115,"byte_end":39118,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ This function should never panic. `bytes_mut` should return an empty","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39123,"byte_end":39195,"line_start":156,"line_end":156,"column_start":5,"column_end":77}},{"value":"/ slice **if and only if** `remaining_mut` returns 0. In other words,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39200,"byte_end":39271,"line_start":157,"line_end":157,"column_start":5,"column_end":76}},{"value":"/ `bytes_mut` returning an empty slice implies that `remaining_mut` will","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39276,"byte_end":39350,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ return 0 and `remaining_mut` returning 0 implies that `bytes_mut` will","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39355,"byte_end":39429,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ return an empty slice.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39434,"byte_end":39460,"line_start":160,"line_end":160,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":40004,"byte_end":40007,"line_start":183,"line_end":183,"column_start":8,"column_end":11},"name":"put","qualname":"::buf::buf_mut::BufMut::put","value":"pub fn put<T: super::Buf>(&mut Self, T) where Self: Sized","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Transfer bytes into `self` from `src` and advance the cursor by the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Transfer bytes into `self` from `src` and advance the cursor by the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39515,"byte_end":39586,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ number of bytes written.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39591,"byte_end":39619,"line_start":164,"line_end":164,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39624,"byte_end":39627,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39632,"byte_end":39646,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39651,"byte_end":39654,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39659,"byte_end":39666,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39671,"byte_end":39693,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39698,"byte_end":39701,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39706,"byte_end":39731,"line_start":171,"line_end":171,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39736,"byte_end":39739,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ buf.put_u8(b'h');","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39744,"byte_end":39765,"line_start":173,"line_end":173,"column_start":5,"column_end":26}},{"value":"/ buf.put(&b\"ello\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39770,"byte_end":39796,"line_start":174,"line_end":174,"column_start":5,"column_end":31}},{"value":"/ buf.put(&b\" world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39801,"byte_end":39829,"line_start":175,"line_end":175,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39834,"byte_end":39837,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf, b\"hello world\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39842,"byte_end":39878,"line_start":177,"line_end":177,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39883,"byte_end":39890,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39895,"byte_end":39898,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39903,"byte_end":39915,"line_start":180,"line_end":180,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39920,"byte_end":39923,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Panics if `self` does not have enough capacity to contain `src`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":39928,"byte_end":39996,"line_start":182,"line_end":182,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":41067,"byte_end":41076,"line_start":226,"line_end":226,"column_start":8,"column_end":17},"name":"put_slice","qualname":"::buf::buf_mut::BufMut::put_slice","value":"pub fn put_slice(&mut Self, &[u8])","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Transfer bytes into `self` from `src` and advance the cursor by the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Transfer bytes into `self` from `src` and advance the cursor by the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":40567,"byte_end":40638,"line_start":207,"line_end":207,"column_start":5,"column_end":76}},{"value":"/ number of bytes written.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":40643,"byte_end":40671,"line_start":208,"line_end":208,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":40676,"byte_end":40679,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ `self` must have enough remaining capacity to contain all of `src`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":40684,"byte_end":40755,"line_start":210,"line_end":210,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":40760,"byte_end":40763,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":40768,"byte_end":40775,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":40780,"byte_end":40802,"line_start":213,"line_end":213,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":40807,"byte_end":40810,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ let mut dst = [0; 6];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":40815,"byte_end":40840,"line_start":215,"line_end":215,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":40845,"byte_end":40848,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":40853,"byte_end":40858,"line_start":217,"line_end":217,"column_start":5,"column_end":10}},{"value":"/     let mut buf = &mut dst[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":40863,"byte_end":40898,"line_start":218,"line_end":218,"column_start":5,"column_end":40}},{"value":"/     buf.put_slice(b\"hello\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":40903,"byte_end":40935,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":40940,"byte_end":40943,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, buf.remaining_mut());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":40948,"byte_end":40991,"line_start":221,"line_end":221,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":40996,"byte_end":41001,"line_start":222,"line_end":222,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":41006,"byte_end":41009,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"hello\\0\", &dst);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":41014,"byte_end":41047,"line_start":224,"line_end":224,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":41052,"byte_end":41059,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42150,"byte_end":42156,"line_start":272,"line_end":272,"column_start":8,"column_end":14},"name":"put_u8","qualname":"::buf::buf_mut::BufMut::put_u8","value":"pub fn put_u8(&mut Self, u8)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes an unsigned 8 bit integer to `self`.","sig":null,"attributes":[{"value":"/ Writes an unsigned 8 bit integer to `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":41733,"byte_end":41780,"line_start":254,"line_end":254,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":41785,"byte_end":41788,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 1.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":41793,"byte_end":41835,"line_start":256,"line_end":256,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":41840,"byte_end":41843,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":41848,"byte_end":41862,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":41867,"byte_end":41870,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":41875,"byte_end":41882,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":41887,"byte_end":41909,"line_start":261,"line_end":261,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":41914,"byte_end":41917,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":41922,"byte_end":41947,"line_start":263,"line_end":263,"column_start":5,"column_end":30}},{"value":"/ buf.put_u8(0x01);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":41952,"byte_end":41973,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(buf, b\"\\x01\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":41978,"byte_end":42007,"line_start":265,"line_end":265,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42012,"byte_end":42019,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42024,"byte_end":42027,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42032,"byte_end":42044,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42049,"byte_end":42052,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42057,"byte_end":42126,"line_start":270,"line_end":270,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42131,"byte_end":42142,"line_start":271,"line_end":271,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42655,"byte_end":42661,"line_start":295,"line_end":295,"column_start":8,"column_end":14},"name":"put_i8","qualname":"::buf::buf_mut::BufMut::put_i8","value":"pub fn put_i8(&mut Self, i8)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes a signed 8 bit integer to `self`.","sig":null,"attributes":[{"value":"/ Writes a signed 8 bit integer to `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42241,"byte_end":42285,"line_start":277,"line_end":277,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42290,"byte_end":42293,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 1.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42298,"byte_end":42340,"line_start":279,"line_end":279,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42345,"byte_end":42348,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42353,"byte_end":42367,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42372,"byte_end":42375,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42380,"byte_end":42387,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42392,"byte_end":42414,"line_start":284,"line_end":284,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42419,"byte_end":42422,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42427,"byte_end":42452,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/ buf.put_i8(0x01);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42457,"byte_end":42478,"line_start":287,"line_end":287,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(buf, b\"\\x01\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42483,"byte_end":42512,"line_start":288,"line_end":288,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42517,"byte_end":42524,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42529,"byte_end":42532,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42537,"byte_end":42549,"line_start":291,"line_end":291,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42554,"byte_end":42557,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42562,"byte_end":42631,"line_start":293,"line_end":293,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42636,"byte_end":42647,"line_start":294,"line_end":294,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43201,"byte_end":43208,"line_start":318,"line_end":318,"column_start":8,"column_end":15},"name":"put_u16","qualname":"::buf::buf_mut::BufMut::put_u16","value":"pub fn put_u16(&mut Self, u16)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes an unsigned 16 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 16 bit integer to `self` in big-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42751,"byte_end":42824,"line_start":300,"line_end":300,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42829,"byte_end":42832,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42837,"byte_end":42879,"line_start":302,"line_end":302,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42884,"byte_end":42887,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42892,"byte_end":42906,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42911,"byte_end":42914,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42919,"byte_end":42926,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42931,"byte_end":42953,"line_start":307,"line_end":307,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42958,"byte_end":42961,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42966,"byte_end":42991,"line_start":309,"line_end":309,"column_start":5,"column_end":30}},{"value":"/ buf.put_u16(0x0809);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":42996,"byte_end":43020,"line_start":310,"line_end":310,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(buf, b\"\\x08\\x09\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43025,"byte_end":43058,"line_start":311,"line_end":311,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43063,"byte_end":43070,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43075,"byte_end":43078,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43083,"byte_end":43095,"line_start":314,"line_end":314,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43100,"byte_end":43103,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43108,"byte_end":43177,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43182,"byte_end":43193,"line_start":317,"line_end":317,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43738,"byte_end":43748,"line_start":340,"line_end":340,"column_start":8,"column_end":18},"name":"put_u16_le","qualname":"::buf::buf_mut::BufMut::put_u16_le","value":"pub fn put_u16_le(&mut Self, u16)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes an unsigned 16 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 16 bit integer to `self` in little-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43282,"byte_end":43358,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43363,"byte_end":43366,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43371,"byte_end":43413,"line_start":324,"line_end":324,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43418,"byte_end":43421,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43426,"byte_end":43440,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43445,"byte_end":43448,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43453,"byte_end":43460,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43465,"byte_end":43487,"line_start":329,"line_end":329,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43492,"byte_end":43495,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43500,"byte_end":43525,"line_start":331,"line_end":331,"column_start":5,"column_end":30}},{"value":"/ buf.put_u16_le(0x0809);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43530,"byte_end":43557,"line_start":332,"line_end":332,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(buf, b\"\\x09\\x08\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43562,"byte_end":43595,"line_start":333,"line_end":333,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43600,"byte_end":43607,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43612,"byte_end":43615,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43620,"byte_end":43632,"line_start":336,"line_end":336,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43637,"byte_end":43640,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43645,"byte_end":43714,"line_start":338,"line_end":338,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43719,"byte_end":43730,"line_start":339,"line_end":339,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44269,"byte_end":44276,"line_start":362,"line_end":362,"column_start":8,"column_end":15},"name":"put_i16","qualname":"::buf::buf_mut::BufMut::put_i16","value":"pub fn put_i16(&mut Self, i16)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes a signed 16 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 16 bit integer to `self` in big-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43822,"byte_end":43892,"line_start":344,"line_end":344,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43897,"byte_end":43900,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43905,"byte_end":43947,"line_start":346,"line_end":346,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43952,"byte_end":43955,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43960,"byte_end":43974,"line_start":348,"line_end":348,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43979,"byte_end":43982,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43987,"byte_end":43994,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":43999,"byte_end":44021,"line_start":351,"line_end":351,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44026,"byte_end":44029,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44034,"byte_end":44059,"line_start":353,"line_end":353,"column_start":5,"column_end":30}},{"value":"/ buf.put_i16(0x0809);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44064,"byte_end":44088,"line_start":354,"line_end":354,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(buf, b\"\\x08\\x09\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44093,"byte_end":44126,"line_start":355,"line_end":355,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44131,"byte_end":44138,"line_start":356,"line_end":356,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44143,"byte_end":44146,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44151,"byte_end":44163,"line_start":358,"line_end":358,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44168,"byte_end":44171,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44176,"byte_end":44245,"line_start":360,"line_end":360,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44250,"byte_end":44261,"line_start":361,"line_end":361,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44803,"byte_end":44813,"line_start":384,"line_end":384,"column_start":8,"column_end":18},"name":"put_i16_le","qualname":"::buf::buf_mut::BufMut::put_i16_le","value":"pub fn put_i16_le(&mut Self, i16)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes a signed 16 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 16 bit integer to `self` in little-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44350,"byte_end":44423,"line_start":366,"line_end":366,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44428,"byte_end":44431,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 2.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44436,"byte_end":44478,"line_start":368,"line_end":368,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44483,"byte_end":44486,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44491,"byte_end":44505,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44510,"byte_end":44513,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44518,"byte_end":44525,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44530,"byte_end":44552,"line_start":373,"line_end":373,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44557,"byte_end":44560,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44565,"byte_end":44590,"line_start":375,"line_end":375,"column_start":5,"column_end":30}},{"value":"/ buf.put_i16_le(0x0809);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44595,"byte_end":44622,"line_start":376,"line_end":376,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(buf, b\"\\x09\\x08\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44627,"byte_end":44660,"line_start":377,"line_end":377,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44665,"byte_end":44672,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44677,"byte_end":44680,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44685,"byte_end":44697,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44702,"byte_end":44705,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44710,"byte_end":44779,"line_start":382,"line_end":382,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44784,"byte_end":44795,"line_start":383,"line_end":383,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45349,"byte_end":45356,"line_start":406,"line_end":406,"column_start":8,"column_end":15},"name":"put_u32","qualname":"::buf::buf_mut::BufMut::put_u32","value":"pub fn put_u32(&mut Self, u32)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes an unsigned 32 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 32 bit integer to `self` in big-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44887,"byte_end":44960,"line_start":388,"line_end":388,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44965,"byte_end":44968,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":44973,"byte_end":45015,"line_start":390,"line_end":390,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45020,"byte_end":45023,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45028,"byte_end":45042,"line_start":392,"line_end":392,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45047,"byte_end":45050,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45055,"byte_end":45062,"line_start":394,"line_end":394,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45067,"byte_end":45089,"line_start":395,"line_end":395,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45094,"byte_end":45097,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45102,"byte_end":45127,"line_start":397,"line_end":397,"column_start":5,"column_end":30}},{"value":"/ buf.put_u32(0x0809A0A1);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45132,"byte_end":45160,"line_start":398,"line_end":398,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45165,"byte_end":45206,"line_start":399,"line_end":399,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45211,"byte_end":45218,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45223,"byte_end":45226,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45231,"byte_end":45243,"line_start":402,"line_end":402,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45248,"byte_end":45251,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45256,"byte_end":45325,"line_start":404,"line_end":404,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45330,"byte_end":45341,"line_start":405,"line_end":405,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45898,"byte_end":45908,"line_start":428,"line_end":428,"column_start":8,"column_end":18},"name":"put_u32_le","qualname":"::buf::buf_mut::BufMut::put_u32_le","value":"pub fn put_u32_le(&mut Self, u32)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes an unsigned 32 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 32 bit integer to `self` in little-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45430,"byte_end":45506,"line_start":410,"line_end":410,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45511,"byte_end":45514,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45519,"byte_end":45561,"line_start":412,"line_end":412,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45566,"byte_end":45569,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45574,"byte_end":45588,"line_start":414,"line_end":414,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45593,"byte_end":45596,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45601,"byte_end":45608,"line_start":416,"line_end":416,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45613,"byte_end":45635,"line_start":417,"line_end":417,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45640,"byte_end":45643,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45648,"byte_end":45673,"line_start":419,"line_end":419,"column_start":5,"column_end":30}},{"value":"/ buf.put_u32_le(0x0809A0A1);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45678,"byte_end":45709,"line_start":420,"line_end":420,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45714,"byte_end":45755,"line_start":421,"line_end":421,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45760,"byte_end":45767,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45772,"byte_end":45775,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45780,"byte_end":45792,"line_start":424,"line_end":424,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45797,"byte_end":45800,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45805,"byte_end":45874,"line_start":426,"line_end":426,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45879,"byte_end":45890,"line_start":427,"line_end":427,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46441,"byte_end":46448,"line_start":450,"line_end":450,"column_start":8,"column_end":15},"name":"put_i32","qualname":"::buf::buf_mut::BufMut::put_i32","value":"pub fn put_i32(&mut Self, i32)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes a signed 32 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 32 bit integer to `self` in big-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":45982,"byte_end":46052,"line_start":432,"line_end":432,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46057,"byte_end":46060,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46065,"byte_end":46107,"line_start":434,"line_end":434,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46112,"byte_end":46115,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46120,"byte_end":46134,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46139,"byte_end":46142,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46147,"byte_end":46154,"line_start":438,"line_end":438,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46159,"byte_end":46181,"line_start":439,"line_end":439,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46186,"byte_end":46189,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46194,"byte_end":46219,"line_start":441,"line_end":441,"column_start":5,"column_end":30}},{"value":"/ buf.put_i32(0x0809A0A1);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46224,"byte_end":46252,"line_start":442,"line_end":442,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(buf, b\"\\x08\\x09\\xA0\\xA1\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46257,"byte_end":46298,"line_start":443,"line_end":443,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46303,"byte_end":46310,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46315,"byte_end":46318,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46323,"byte_end":46335,"line_start":446,"line_end":446,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46340,"byte_end":46343,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46348,"byte_end":46417,"line_start":448,"line_end":448,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46422,"byte_end":46433,"line_start":449,"line_end":449,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46987,"byte_end":46997,"line_start":472,"line_end":472,"column_start":8,"column_end":18},"name":"put_i32_le","qualname":"::buf::buf_mut::BufMut::put_i32_le","value":"pub fn put_i32_le(&mut Self, i32)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes a signed 32 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 32 bit integer to `self` in little-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46522,"byte_end":46595,"line_start":454,"line_end":454,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46600,"byte_end":46603,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46608,"byte_end":46650,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46655,"byte_end":46658,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46663,"byte_end":46677,"line_start":458,"line_end":458,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46682,"byte_end":46685,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46690,"byte_end":46697,"line_start":460,"line_end":460,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46702,"byte_end":46724,"line_start":461,"line_end":461,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46729,"byte_end":46732,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46737,"byte_end":46762,"line_start":463,"line_end":463,"column_start":5,"column_end":30}},{"value":"/ buf.put_i32_le(0x0809A0A1);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46767,"byte_end":46798,"line_start":464,"line_end":464,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(buf, b\"\\xA1\\xA0\\x09\\x08\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46803,"byte_end":46844,"line_start":465,"line_end":465,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46849,"byte_end":46856,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46861,"byte_end":46864,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46869,"byte_end":46881,"line_start":468,"line_end":468,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46886,"byte_end":46889,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46894,"byte_end":46963,"line_start":470,"line_end":470,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":46968,"byte_end":46979,"line_start":471,"line_end":471,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47561,"byte_end":47568,"line_start":494,"line_end":494,"column_start":8,"column_end":15},"name":"put_u64","qualname":"::buf::buf_mut::BufMut::put_u64","value":"pub fn put_u64(&mut Self, u64)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes an unsigned 64 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 64 bit integer to `self` in the big-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47071,"byte_end":47148,"line_start":476,"line_end":476,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47153,"byte_end":47156,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47161,"byte_end":47203,"line_start":478,"line_end":478,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47208,"byte_end":47211,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47216,"byte_end":47230,"line_start":480,"line_end":480,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47235,"byte_end":47238,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47243,"byte_end":47250,"line_start":482,"line_end":482,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47255,"byte_end":47277,"line_start":483,"line_end":483,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47282,"byte_end":47285,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47290,"byte_end":47315,"line_start":485,"line_end":485,"column_start":5,"column_end":30}},{"value":"/ buf.put_u64(0x0102030405060708);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47320,"byte_end":47356,"line_start":486,"line_end":486,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47361,"byte_end":47418,"line_start":487,"line_end":487,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47423,"byte_end":47430,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47435,"byte_end":47438,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47443,"byte_end":47455,"line_start":490,"line_end":490,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47460,"byte_end":47463,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47468,"byte_end":47537,"line_start":492,"line_end":492,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47542,"byte_end":47553,"line_start":493,"line_end":493,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48134,"byte_end":48144,"line_start":516,"line_end":516,"column_start":8,"column_end":18},"name":"put_u64_le","qualname":"::buf::buf_mut::BufMut::put_u64_le","value":"pub fn put_u64_le(&mut Self, u64)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes an unsigned 64 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 64 bit integer to `self` in little-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47642,"byte_end":47718,"line_start":498,"line_end":498,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47723,"byte_end":47726,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47731,"byte_end":47773,"line_start":500,"line_end":500,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47778,"byte_end":47781,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47786,"byte_end":47800,"line_start":502,"line_end":502,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47805,"byte_end":47808,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47813,"byte_end":47820,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47825,"byte_end":47847,"line_start":505,"line_end":505,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47852,"byte_end":47855,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47860,"byte_end":47885,"line_start":507,"line_end":507,"column_start":5,"column_end":30}},{"value":"/ buf.put_u64_le(0x0102030405060708);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47890,"byte_end":47929,"line_start":508,"line_end":508,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47934,"byte_end":47991,"line_start":509,"line_end":509,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":47996,"byte_end":48003,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48008,"byte_end":48011,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48016,"byte_end":48028,"line_start":512,"line_end":512,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48033,"byte_end":48036,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48041,"byte_end":48110,"line_start":514,"line_end":514,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48115,"byte_end":48126,"line_start":515,"line_end":515,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48705,"byte_end":48712,"line_start":538,"line_end":538,"column_start":8,"column_end":15},"name":"put_i64","qualname":"::buf::buf_mut::BufMut::put_i64","value":"pub fn put_i64(&mut Self, i64)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes a signed 64 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 64 bit integer to `self` in the big-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48218,"byte_end":48292,"line_start":520,"line_end":520,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48297,"byte_end":48300,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48305,"byte_end":48347,"line_start":522,"line_end":522,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48352,"byte_end":48355,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48360,"byte_end":48374,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48379,"byte_end":48382,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48387,"byte_end":48394,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48399,"byte_end":48421,"line_start":527,"line_end":527,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48426,"byte_end":48429,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48434,"byte_end":48459,"line_start":529,"line_end":529,"column_start":5,"column_end":30}},{"value":"/ buf.put_i64(0x0102030405060708);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48464,"byte_end":48500,"line_start":530,"line_end":530,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48505,"byte_end":48562,"line_start":531,"line_end":531,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48567,"byte_end":48574,"line_start":532,"line_end":532,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48579,"byte_end":48582,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48587,"byte_end":48599,"line_start":534,"line_end":534,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48604,"byte_end":48607,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48612,"byte_end":48681,"line_start":536,"line_end":536,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48686,"byte_end":48697,"line_start":537,"line_end":537,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49275,"byte_end":49285,"line_start":560,"line_end":560,"column_start":8,"column_end":18},"name":"put_i64_le","qualname":"::buf::buf_mut::BufMut::put_i64_le","value":"pub fn put_i64_le(&mut Self, i64)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes a signed 64 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 64 bit integer to `self` in little-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48786,"byte_end":48859,"line_start":542,"line_end":542,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48864,"byte_end":48867,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48872,"byte_end":48914,"line_start":544,"line_end":544,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48919,"byte_end":48922,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48927,"byte_end":48941,"line_start":546,"line_end":546,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48946,"byte_end":48949,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48954,"byte_end":48961,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48966,"byte_end":48988,"line_start":549,"line_end":549,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":48993,"byte_end":48996,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49001,"byte_end":49026,"line_start":551,"line_end":551,"column_start":5,"column_end":30}},{"value":"/ buf.put_i64_le(0x0102030405060708);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49031,"byte_end":49070,"line_start":552,"line_end":552,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(buf, b\"\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49075,"byte_end":49132,"line_start":553,"line_end":553,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49137,"byte_end":49144,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49149,"byte_end":49152,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49157,"byte_end":49169,"line_start":556,"line_end":556,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49174,"byte_end":49177,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49182,"byte_end":49251,"line_start":558,"line_end":558,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49256,"byte_end":49267,"line_start":559,"line_end":559,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49900,"byte_end":49908,"line_start":582,"line_end":582,"column_start":8,"column_end":16},"name":"put_u128","qualname":"::buf::buf_mut::BufMut::put_u128","value":"pub fn put_u128(&mut Self, u128)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes an unsigned 128 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 128 bit integer to `self` in the big-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49359,"byte_end":49437,"line_start":564,"line_end":564,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49442,"byte_end":49445,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49450,"byte_end":49493,"line_start":566,"line_end":566,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49498,"byte_end":49501,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49506,"byte_end":49520,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49525,"byte_end":49528,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49533,"byte_end":49540,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49545,"byte_end":49567,"line_start":571,"line_end":571,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49572,"byte_end":49575,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49580,"byte_end":49605,"line_start":573,"line_end":573,"column_start":5,"column_end":30}},{"value":"/ buf.put_u128(0x01020304050607080910111213141516);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49610,"byte_end":49663,"line_start":574,"line_end":574,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49668,"byte_end":49757,"line_start":575,"line_end":575,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49762,"byte_end":49769,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49774,"byte_end":49777,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49782,"byte_end":49794,"line_start":578,"line_end":578,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49799,"byte_end":49802,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49807,"byte_end":49876,"line_start":580,"line_end":580,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49881,"byte_end":49892,"line_start":581,"line_end":581,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50526,"byte_end":50537,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"put_u128_le","qualname":"::buf::buf_mut::BufMut::put_u128_le","value":"pub fn put_u128_le(&mut Self, u128)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes an unsigned 128 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned 128 bit integer to `self` in little-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":49983,"byte_end":50060,"line_start":586,"line_end":586,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50065,"byte_end":50068,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50073,"byte_end":50116,"line_start":588,"line_end":588,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50121,"byte_end":50124,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50129,"byte_end":50143,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50148,"byte_end":50151,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50156,"byte_end":50163,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50168,"byte_end":50190,"line_start":593,"line_end":593,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50195,"byte_end":50198,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50203,"byte_end":50228,"line_start":595,"line_end":595,"column_start":5,"column_end":30}},{"value":"/ buf.put_u128_le(0x01020304050607080910111213141516);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50233,"byte_end":50289,"line_start":596,"line_end":596,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50294,"byte_end":50383,"line_start":597,"line_end":597,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50388,"byte_end":50395,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50400,"byte_end":50403,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50408,"byte_end":50420,"line_start":600,"line_end":600,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50425,"byte_end":50428,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50433,"byte_end":50502,"line_start":602,"line_end":602,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50507,"byte_end":50518,"line_start":603,"line_end":603,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51150,"byte_end":51158,"line_start":626,"line_end":626,"column_start":8,"column_end":16},"name":"put_i128","qualname":"::buf::buf_mut::BufMut::put_i128","value":"pub fn put_i128(&mut Self, i128)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes a signed 128 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 128 bit integer to `self` in the big-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50612,"byte_end":50687,"line_start":608,"line_end":608,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50692,"byte_end":50695,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50700,"byte_end":50743,"line_start":610,"line_end":610,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50748,"byte_end":50751,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50756,"byte_end":50770,"line_start":612,"line_end":612,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50775,"byte_end":50778,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50783,"byte_end":50790,"line_start":614,"line_end":614,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50795,"byte_end":50817,"line_start":615,"line_end":615,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50822,"byte_end":50825,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50830,"byte_end":50855,"line_start":617,"line_end":617,"column_start":5,"column_end":30}},{"value":"/ buf.put_i128(0x01020304050607080910111213141516);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50860,"byte_end":50913,"line_start":618,"line_end":618,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15\\x16\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":50918,"byte_end":51007,"line_start":619,"line_end":619,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51012,"byte_end":51019,"line_start":620,"line_end":620,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51024,"byte_end":51027,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51032,"byte_end":51044,"line_start":622,"line_end":622,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51049,"byte_end":51052,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51057,"byte_end":51126,"line_start":624,"line_end":624,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51131,"byte_end":51142,"line_start":625,"line_end":625,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51773,"byte_end":51784,"line_start":648,"line_end":648,"column_start":8,"column_end":19},"name":"put_i128_le","qualname":"::buf::buf_mut::BufMut::put_i128_le","value":"pub fn put_i128_le(&mut Self, i128)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes a signed 128 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed 128 bit integer to `self` in little-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51233,"byte_end":51307,"line_start":630,"line_end":630,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51312,"byte_end":51315,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 16.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51320,"byte_end":51363,"line_start":632,"line_end":632,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51368,"byte_end":51371,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51376,"byte_end":51390,"line_start":634,"line_end":634,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51395,"byte_end":51398,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51403,"byte_end":51410,"line_start":636,"line_end":636,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51415,"byte_end":51437,"line_start":637,"line_end":637,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51442,"byte_end":51445,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51450,"byte_end":51475,"line_start":639,"line_end":639,"column_start":5,"column_end":30}},{"value":"/ buf.put_i128_le(0x01020304050607080910111213141516);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51480,"byte_end":51536,"line_start":640,"line_end":640,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, b\"\\x16\\x15\\x14\\x13\\x12\\x11\\x10\\x09\\x08\\x07\\x06\\x05\\x04\\x03\\x02\\x01\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51541,"byte_end":51630,"line_start":641,"line_end":641,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51635,"byte_end":51642,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51647,"byte_end":51650,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51655,"byte_end":51667,"line_start":644,"line_end":644,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51672,"byte_end":51675,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51680,"byte_end":51749,"line_start":646,"line_end":646,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51754,"byte_end":51765,"line_start":647,"line_end":647,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52326,"byte_end":52334,"line_start":670,"line_end":670,"column_start":8,"column_end":16},"name":"put_uint","qualname":"::buf::buf_mut::BufMut::put_uint","value":"pub fn put_uint(&mut Self, u64, usize)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes an unsigned n-byte integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned n-byte integer to `self` in big-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51859,"byte_end":51932,"line_start":652,"line_end":652,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51937,"byte_end":51940,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51945,"byte_end":51994,"line_start":654,"line_end":654,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":51999,"byte_end":52002,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52007,"byte_end":52021,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52026,"byte_end":52029,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52034,"byte_end":52041,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52046,"byte_end":52068,"line_start":659,"line_end":659,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52073,"byte_end":52076,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52081,"byte_end":52106,"line_start":661,"line_end":661,"column_start":5,"column_end":30}},{"value":"/ buf.put_uint(0x010203, 3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52111,"byte_end":52141,"line_start":662,"line_end":662,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52146,"byte_end":52183,"line_start":663,"line_end":663,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52188,"byte_end":52195,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52200,"byte_end":52203,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52208,"byte_end":52220,"line_start":666,"line_end":666,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52225,"byte_end":52228,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52233,"byte_end":52302,"line_start":668,"line_end":668,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52307,"byte_end":52318,"line_start":669,"line_end":669,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52934,"byte_end":52945,"line_start":692,"line_end":692,"column_start":8,"column_end":19},"name":"put_uint_le","qualname":"::buf::buf_mut::BufMut::put_uint_le","value":"pub fn put_uint_le(&mut Self, u64, usize)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes an unsigned n-byte integer to `self` in the little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes an unsigned n-byte integer to `self` in the little-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52457,"byte_end":52537,"line_start":674,"line_end":674,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52542,"byte_end":52545,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52550,"byte_end":52599,"line_start":676,"line_end":676,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52604,"byte_end":52607,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52612,"byte_end":52626,"line_start":678,"line_end":678,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52631,"byte_end":52634,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52639,"byte_end":52646,"line_start":680,"line_end":680,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52651,"byte_end":52673,"line_start":681,"line_end":681,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52678,"byte_end":52681,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52686,"byte_end":52711,"line_start":683,"line_end":683,"column_start":5,"column_end":30}},{"value":"/ buf.put_uint_le(0x010203, 3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52716,"byte_end":52749,"line_start":684,"line_end":684,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(buf, b\"\\x03\\x02\\x01\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52754,"byte_end":52791,"line_start":685,"line_end":685,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52796,"byte_end":52803,"line_start":686,"line_end":686,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52808,"byte_end":52811,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52816,"byte_end":52828,"line_start":688,"line_end":688,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52833,"byte_end":52836,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52841,"byte_end":52910,"line_start":690,"line_end":690,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":52915,"byte_end":52926,"line_start":691,"line_end":691,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53509,"byte_end":53516,"line_start":714,"line_end":714,"column_start":8,"column_end":15},"name":"put_int","qualname":"::buf::buf_mut::BufMut::put_int","value":"pub fn put_int(&mut Self, i64, usize)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes a signed n-byte integer to `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed n-byte integer to `self` in big-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53046,"byte_end":53116,"line_start":696,"line_end":696,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53121,"byte_end":53124,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53129,"byte_end":53178,"line_start":698,"line_end":698,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53183,"byte_end":53186,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53191,"byte_end":53205,"line_start":700,"line_end":700,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53210,"byte_end":53213,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53218,"byte_end":53225,"line_start":702,"line_end":702,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53230,"byte_end":53252,"line_start":703,"line_end":703,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53257,"byte_end":53260,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53265,"byte_end":53290,"line_start":705,"line_end":705,"column_start":5,"column_end":30}},{"value":"/ buf.put_int(0x010203, 3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53295,"byte_end":53324,"line_start":706,"line_end":706,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"\\x01\\x02\\x03\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53329,"byte_end":53366,"line_start":707,"line_end":707,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53371,"byte_end":53378,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53383,"byte_end":53386,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53391,"byte_end":53403,"line_start":710,"line_end":710,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53408,"byte_end":53411,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53416,"byte_end":53485,"line_start":712,"line_end":712,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53490,"byte_end":53501,"line_start":713,"line_end":713,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54108,"byte_end":54118,"line_start":736,"line_end":736,"column_start":8,"column_end":18},"name":"put_int_le","qualname":"::buf::buf_mut::BufMut::put_int_le","value":"pub fn put_int_le(&mut Self, i64, usize)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes a signed n-byte integer to `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes a signed n-byte integer to `self` in little-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53639,"byte_end":53712,"line_start":718,"line_end":718,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53717,"byte_end":53720,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by `nbytes`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53725,"byte_end":53774,"line_start":720,"line_end":720,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53779,"byte_end":53782,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53787,"byte_end":53801,"line_start":722,"line_end":722,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53806,"byte_end":53809,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53814,"byte_end":53821,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53826,"byte_end":53848,"line_start":725,"line_end":725,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53853,"byte_end":53856,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53861,"byte_end":53886,"line_start":727,"line_end":727,"column_start":5,"column_end":30}},{"value":"/ buf.put_int_le(0x010203, 3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53891,"byte_end":53923,"line_start":728,"line_end":728,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(buf, b\"\\x03\\x02\\x01\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53928,"byte_end":53965,"line_start":729,"line_end":729,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53970,"byte_end":53977,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53982,"byte_end":53985,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":53990,"byte_end":54002,"line_start":732,"line_end":732,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54007,"byte_end":54010,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54015,"byte_end":54084,"line_start":734,"line_end":734,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54089,"byte_end":54100,"line_start":735,"line_end":735,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54719,"byte_end":54726,"line_start":759,"line_end":759,"column_start":8,"column_end":15},"name":"put_f32","qualname":"::buf::buf_mut::BufMut::put_f32","value":"pub fn put_f32(&mut Self, f32)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 single-precision (4 bytes) floating point number to\n `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 single-precision (4 bytes) floating point number to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54219,"byte_end":54293,"line_start":740,"line_end":740,"column_start":5,"column_end":79}},{"value":"/ `self` in big-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54298,"byte_end":54334,"line_start":741,"line_end":741,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54339,"byte_end":54342,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54347,"byte_end":54389,"line_start":743,"line_end":743,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54394,"byte_end":54397,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54402,"byte_end":54416,"line_start":745,"line_end":745,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54421,"byte_end":54424,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54429,"byte_end":54436,"line_start":747,"line_end":747,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54441,"byte_end":54463,"line_start":748,"line_end":748,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54468,"byte_end":54471,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54476,"byte_end":54501,"line_start":750,"line_end":750,"column_start":5,"column_end":30}},{"value":"/ buf.put_f32(1.2f32);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54506,"byte_end":54530,"line_start":751,"line_end":751,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(buf, b\"\\x3F\\x99\\x99\\x9A\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54535,"byte_end":54576,"line_start":752,"line_end":752,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54581,"byte_end":54588,"line_start":753,"line_end":753,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54593,"byte_end":54596,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54601,"byte_end":54613,"line_start":755,"line_end":755,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54618,"byte_end":54621,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54626,"byte_end":54695,"line_start":757,"line_end":757,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54700,"byte_end":54711,"line_start":758,"line_end":758,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55300,"byte_end":55310,"line_start":782,"line_end":782,"column_start":8,"column_end":18},"name":"put_f32_le","qualname":"::buf::buf_mut::BufMut::put_f32_le","value":"pub fn put_f32_le(&mut Self, f32)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 single-precision (4 bytes) floating point number to\n `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 single-precision (4 bytes) floating point number to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54794,"byte_end":54868,"line_start":763,"line_end":763,"column_start":5,"column_end":79}},{"value":"/ `self` in little-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54873,"byte_end":54912,"line_start":764,"line_end":764,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54917,"byte_end":54920,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 4.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54925,"byte_end":54967,"line_start":766,"line_end":766,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54972,"byte_end":54975,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54980,"byte_end":54994,"line_start":768,"line_end":768,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":54999,"byte_end":55002,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55007,"byte_end":55014,"line_start":770,"line_end":770,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55019,"byte_end":55041,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55046,"byte_end":55049,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55054,"byte_end":55079,"line_start":773,"line_end":773,"column_start":5,"column_end":30}},{"value":"/ buf.put_f32_le(1.2f32);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55084,"byte_end":55111,"line_start":774,"line_end":774,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(buf, b\"\\x9A\\x99\\x99\\x3F\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55116,"byte_end":55157,"line_start":775,"line_end":775,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55162,"byte_end":55169,"line_start":776,"line_end":776,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55174,"byte_end":55177,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55182,"byte_end":55194,"line_start":778,"line_end":778,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55199,"byte_end":55202,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55207,"byte_end":55276,"line_start":780,"line_end":780,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55281,"byte_end":55292,"line_start":781,"line_end":781,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55897,"byte_end":55904,"line_start":805,"line_end":805,"column_start":8,"column_end":15},"name":"put_f64","qualname":"::buf::buf_mut::BufMut::put_f64","value":"pub fn put_f64(&mut Self, f64)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 double-precision (8 bytes) floating point number to\n `self` in big-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 double-precision (8 bytes) floating point number to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55381,"byte_end":55455,"line_start":786,"line_end":786,"column_start":5,"column_end":79}},{"value":"/ `self` in big-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55460,"byte_end":55496,"line_start":787,"line_end":787,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55501,"byte_end":55504,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55509,"byte_end":55551,"line_start":789,"line_end":789,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55556,"byte_end":55559,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55564,"byte_end":55578,"line_start":791,"line_end":791,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55583,"byte_end":55586,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55591,"byte_end":55598,"line_start":793,"line_end":793,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55603,"byte_end":55625,"line_start":794,"line_end":794,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55630,"byte_end":55633,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55638,"byte_end":55663,"line_start":796,"line_end":796,"column_start":5,"column_end":30}},{"value":"/ buf.put_f64(1.2f64);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55668,"byte_end":55692,"line_start":797,"line_end":797,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(buf, b\"\\x3F\\xF3\\x33\\x33\\x33\\x33\\x33\\x33\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55697,"byte_end":55754,"line_start":798,"line_end":798,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55759,"byte_end":55766,"line_start":799,"line_end":799,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55771,"byte_end":55774,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55779,"byte_end":55791,"line_start":801,"line_end":801,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55796,"byte_end":55799,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55804,"byte_end":55873,"line_start":803,"line_end":803,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55878,"byte_end":55889,"line_start":804,"line_end":804,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56494,"byte_end":56504,"line_start":828,"line_end":828,"column_start":8,"column_end":18},"name":"put_f64_le","qualname":"::buf::buf_mut::BufMut::put_f64_le","value":"pub fn put_f64_le(&mut Self, f64)","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 double-precision (8 bytes) floating point number to\n `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Writes  an IEEE754 double-precision (8 bytes) floating point number to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":55972,"byte_end":56046,"line_start":809,"line_end":809,"column_start":5,"column_end":79}},{"value":"/ `self` in little-endian byte order.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56051,"byte_end":56090,"line_start":810,"line_end":810,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56095,"byte_end":56098,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ The current position is advanced by 8.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56103,"byte_end":56145,"line_start":812,"line_end":812,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56150,"byte_end":56153,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56158,"byte_end":56172,"line_start":814,"line_end":814,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56177,"byte_end":56180,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56185,"byte_end":56192,"line_start":816,"line_end":816,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56197,"byte_end":56219,"line_start":817,"line_end":817,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56224,"byte_end":56227,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56232,"byte_end":56257,"line_start":819,"line_end":819,"column_start":5,"column_end":30}},{"value":"/ buf.put_f64_le(1.2f64);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56262,"byte_end":56289,"line_start":820,"line_end":820,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(buf, b\"\\x33\\x33\\x33\\x33\\x33\\x33\\xF3\\x3F\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56294,"byte_end":56351,"line_start":821,"line_end":821,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56356,"byte_end":56363,"line_start":822,"line_end":822,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56368,"byte_end":56371,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56376,"byte_end":56388,"line_start":824,"line_end":824,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56393,"byte_end":56396,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ This function panics if there is not enough remaining capacity in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56401,"byte_end":56470,"line_start":826,"line_end":826,"column_start":5,"column_end":74}},{"value":"/ `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56475,"byte_end":56486,"line_start":827,"line_end":827,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56919,"byte_end":56924,"line_start":845,"line_end":845,"column_start":8,"column_end":13},"name":"limit","qualname":"::buf::buf_mut::BufMut::limit","value":"pub fn limit(Self, usize) -> Limit<Self> where Self: Sized","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Creates an adaptor which can write at most `limit` bytes to `self`.","sig":null,"attributes":[{"value":"/ Creates an adaptor which can write at most `limit` bytes to `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56575,"byte_end":56646,"line_start":832,"line_end":832,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56651,"byte_end":56654,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56659,"byte_end":56673,"line_start":834,"line_end":834,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56678,"byte_end":56681,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56686,"byte_end":56693,"line_start":836,"line_end":836,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56698,"byte_end":56720,"line_start":837,"line_end":837,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56725,"byte_end":56728,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ let arr = &mut [0u8; 128][..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56733,"byte_end":56767,"line_start":839,"line_end":839,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(arr.remaining_mut(), 128);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56772,"byte_end":56813,"line_start":840,"line_end":840,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56818,"byte_end":56821,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ let dst = arr.limit(10);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56826,"byte_end":56854,"line_start":842,"line_end":842,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(dst.remaining_mut(), 10);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56859,"byte_end":56899,"line_start":843,"line_end":843,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":56904,"byte_end":56911,"line_start":844,"line_end":844,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57773,"byte_end":57779,"line_start":875,"line_end":875,"column_start":8,"column_end":14},"name":"writer","qualname":"::buf::buf_mut::BufMut::writer","value":"pub fn writer(Self) -> Writer<Self> where Self: Sized","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Creates an adaptor which implements the `Write` trait for `self`.","sig":null,"attributes":[{"value":"/ Creates an adaptor which implements the `Write` trait for `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57040,"byte_end":57109,"line_start":852,"line_end":852,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57114,"byte_end":57117,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ This function returns a new value which implements `Write` by adapting","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57122,"byte_end":57196,"line_start":854,"line_end":854,"column_start":5,"column_end":79}},{"value":"/ the `Write` trait functions to the `BufMut` trait functions. Given that","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57201,"byte_end":57276,"line_start":855,"line_end":855,"column_start":5,"column_end":80}},{"value":"/ `BufMut` operations are infallible, none of the `Write` functions will","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57281,"byte_end":57355,"line_start":856,"line_end":856,"column_start":5,"column_end":79}},{"value":"/ return with `Err`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57360,"byte_end":57382,"line_start":857,"line_end":857,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57387,"byte_end":57390,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57395,"byte_end":57409,"line_start":859,"line_end":859,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57414,"byte_end":57417,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57422,"byte_end":57429,"line_start":861,"line_end":861,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57434,"byte_end":57456,"line_start":862,"line_end":862,"column_start":5,"column_end":27}},{"value":"/ use std::io::Write;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57461,"byte_end":57484,"line_start":863,"line_end":863,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57489,"byte_end":57492,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![].writer();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57497,"byte_end":57531,"line_start":865,"line_end":865,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57536,"byte_end":57539,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ let num = buf.write(&b\"hello world\"[..]).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57544,"byte_end":57598,"line_start":867,"line_end":867,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(11, num);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57603,"byte_end":57627,"line_start":868,"line_end":868,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57632,"byte_end":57635,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ let buf = buf.into_inner();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57640,"byte_end":57671,"line_start":870,"line_end":870,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57676,"byte_end":57679,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*buf, b\"hello world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57684,"byte_end":57725,"line_start":872,"line_end":872,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57730,"byte_end":57737,"line_start":873,"line_end":873,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57742,"byte_end":57765,"line_start":874,"line_end":874,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":58440,"byte_end":58449,"line_start":902,"line_end":902,"column_start":8,"column_end":17},"name":"chain_mut","qualname":"::buf::buf_mut::BufMut::chain_mut","value":"pub fn chain_mut<U: BufMut>(Self, U) -> Chain<Self, U> where Self: Sized","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Creates an adapter which will chain this buffer with another.","sig":null,"attributes":[{"value":"/ Creates an adapter which will chain this buffer with another.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57876,"byte_end":57941,"line_start":882,"line_end":882,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57946,"byte_end":57949,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ The returned `BufMut` instance will first write to all bytes from","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":57954,"byte_end":58023,"line_start":884,"line_end":884,"column_start":5,"column_end":74}},{"value":"/ `self`. Afterwards, it will write to `next`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":58028,"byte_end":58076,"line_start":885,"line_end":885,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":58081,"byte_end":58084,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":58089,"byte_end":58103,"line_start":887,"line_end":887,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":58108,"byte_end":58111,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":58116,"byte_end":58123,"line_start":889,"line_end":889,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":58128,"byte_end":58150,"line_start":890,"line_end":890,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":58155,"byte_end":58158,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ let mut a = [0u8; 5];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":58163,"byte_end":58188,"line_start":892,"line_end":892,"column_start":5,"column_end":30}},{"value":"/ let mut b = [0u8; 6];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":58193,"byte_end":58218,"line_start":893,"line_end":893,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":58223,"byte_end":58226,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ let mut chain = (&mut a[..]).chain_mut(&mut b[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":58231,"byte_end":58286,"line_start":895,"line_end":895,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":58291,"byte_end":58294,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ chain.put_slice(b\"hello world\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":58299,"byte_end":58335,"line_start":897,"line_end":897,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":58340,"byte_end":58343,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\"hello\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":58348,"byte_end":58381,"line_start":899,"line_end":899,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(&b[..], b\" world\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":58386,"byte_end":58420,"line_start":900,"line_end":900,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":58425,"byte_end":58432,"line_start":901,"line_end":901,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":952},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63441,"byte_end":63446,"line_start":32,"line_end":32,"column_start":12,"column_end":17},"name":"Chain","qualname":"::buf::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956}],"decl_id":null,"docs":" A `Chain` sequences two buffers.","sig":null,"attributes":[{"value":"/ A `Chain` sequences two buffers.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":62670,"byte_end":62706,"line_start":7,"line_end":7,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":62707,"byte_end":62710,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `Chain` is an adapter that links two underlying buffers and provides a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":62711,"byte_end":62785,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ continuous view across both buffers. It is able to sequence either immutable","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":62786,"byte_end":62866,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ buffers ([`Buf`] values) or mutable buffers ([`BufMut`] values).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":62867,"byte_end":62935,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":62936,"byte_end":62939,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`Buf::chain`]. Please see that","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":62940,"byte_end":63019,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ function's documentation for more detail.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63020,"byte_end":63065,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63066,"byte_end":63069,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63070,"byte_end":63084,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63085,"byte_end":63088,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63089,"byte_end":63096,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ use bytes::{Bytes, Buf};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63097,"byte_end":63125,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63126,"byte_end":63129,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let mut buf = (&b\"hello \"[..])","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63130,"byte_end":63164,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63165,"byte_end":63195,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63196,"byte_end":63199,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let full: Bytes = buf.copy_to_bytes(11);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63200,"byte_end":63244,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(full[..], b\"hello world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63245,"byte_end":63290,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63291,"byte_end":63298,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63299,"byte_end":63302,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`Buf::chain`]: trait.Buf.html#method.chain","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63303,"byte_end":63350,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/ [`Buf`]: trait.Buf.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63351,"byte_end":63378,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"/ [`BufMut`]: trait.BufMut.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63379,"byte_end":63412,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63936,"byte_end":63945,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"first_ref","qualname":"<Chain<T, U>>::first_ref","value":"pub fn first_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the first underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the first underlying `Buf`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63650,"byte_end":63701,"line_start":43,"line_end":43,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63706,"byte_end":63709,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63714,"byte_end":63728,"line_start":45,"line_end":45,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63733,"byte_end":63736,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63741,"byte_end":63748,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63753,"byte_end":63772,"line_start":48,"line_end":48,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63777,"byte_end":63780,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ let buf = (&b\"hello\"[..])","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63785,"byte_end":63814,"line_start":50,"line_end":50,"column_start":5,"column_end":34}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63819,"byte_end":63849,"line_start":51,"line_end":51,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63854,"byte_end":63857,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.first_ref()[..], b\"hello\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63862,"byte_end":63912,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63917,"byte_end":63924,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64360,"byte_end":64369,"line_start":74,"line_end":74,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<Chain<T, U>>::first_mut","value":"pub fn first_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the first underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the first underlying `Buf`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63988,"byte_end":64047,"line_start":59,"line_end":59,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64052,"byte_end":64055,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64060,"byte_end":64074,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64079,"byte_end":64082,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64087,"byte_end":64094,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64099,"byte_end":64118,"line_start":64,"line_end":64,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64123,"byte_end":64126,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let mut buf = (&b\"hello\"[..])","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64131,"byte_end":64164,"line_start":66,"line_end":66,"column_start":5,"column_end":38}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64169,"byte_end":64199,"line_start":67,"line_end":67,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64204,"byte_end":64207,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ buf.first_mut().advance(1);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64212,"byte_end":64243,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64248,"byte_end":64251,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let full = buf.copy_to_bytes(9);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64256,"byte_end":64292,"line_start":71,"line_end":71,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(full, b\"elloworld\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64297,"byte_end":64336,"line_start":72,"line_end":72,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64341,"byte_end":64348,"line_start":73,"line_end":73,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64708,"byte_end":64716,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"last_ref","qualname":"<Chain<T, U>>::last_ref","value":"pub fn last_ref(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the last underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the last underlying `Buf`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64424,"byte_end":64474,"line_start":78,"line_end":78,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64479,"byte_end":64482,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64487,"byte_end":64501,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64506,"byte_end":64509,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64514,"byte_end":64521,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64526,"byte_end":64545,"line_start":83,"line_end":83,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64550,"byte_end":64553,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let buf = (&b\"hello\"[..])","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64558,"byte_end":64587,"line_start":85,"line_end":85,"column_start":5,"column_end":34}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64592,"byte_end":64622,"line_start":86,"line_end":86,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64627,"byte_end":64630,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.last_ref()[..], b\"world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64635,"byte_end":64684,"line_start":88,"line_end":88,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64689,"byte_end":64696,"line_start":89,"line_end":89,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":65132,"byte_end":65140,"line_start":109,"line_end":109,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<Chain<T, U>>::last_mut","value":"pub fn last_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the last underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the last underlying `Buf`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64759,"byte_end":64817,"line_start":94,"line_end":94,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64822,"byte_end":64825,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64830,"byte_end":64844,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64849,"byte_end":64852,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64857,"byte_end":64864,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64869,"byte_end":64888,"line_start":99,"line_end":99,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64893,"byte_end":64896,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ let mut buf = (&b\"hello \"[..])","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64901,"byte_end":64935,"line_start":101,"line_end":101,"column_start":5,"column_end":39}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64940,"byte_end":64970,"line_start":102,"line_end":102,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64975,"byte_end":64978,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ buf.last_mut().advance(1);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":64983,"byte_end":65013,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":65018,"byte_end":65021,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let full = buf.copy_to_bytes(10);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":65026,"byte_end":65063,"line_start":106,"line_end":106,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(full, b\"hello orld\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":65068,"byte_end":65108,"line_start":107,"line_end":107,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":65113,"byte_end":65120,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":65573,"byte_end":65583,"line_start":127,"line_end":127,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Chain`, returning the underlying values.","sig":null,"attributes":[{"value":"/ Consumes this `Chain`, returning the underlying values.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":65195,"byte_end":65254,"line_start":113,"line_end":113,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":65259,"byte_end":65262,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":65267,"byte_end":65281,"line_start":115,"line_end":115,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":65286,"byte_end":65289,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":65294,"byte_end":65301,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":65306,"byte_end":65325,"line_start":118,"line_end":118,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":65330,"byte_end":65333,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let chain = (&b\"hello\"[..])","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":65338,"byte_end":65369,"line_start":120,"line_end":120,"column_start":5,"column_end":36}},{"value":"/     .chain(&b\"world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":65374,"byte_end":65404,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":65409,"byte_end":65412,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let (first, last) = chain.into_inner();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":65417,"byte_end":65460,"line_start":123,"line_end":123,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(first[..], b\"hello\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":65465,"byte_end":65505,"line_start":124,"line_end":124,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(last[..], b\"world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":65510,"byte_end":65549,"line_start":125,"line_end":125,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":65554,"byte_end":65561,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":961},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":68065,"byte_end":68073,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::buf::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":963}],"decl_id":null,"docs":" Iterator over the bytes contained by the buffer.","sig":null,"attributes":[{"value":"/ Iterator over the bytes contained by the buffer.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":67521,"byte_end":67573,"line_start":3,"line_end":3,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":67574,"byte_end":67577,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`iter`] method on [`Buf`].","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":67578,"byte_end":67639,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":67640,"byte_end":67643,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":67644,"byte_end":67658,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":67659,"byte_end":67662,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":67663,"byte_end":67679,"line_start":9,"line_end":9,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":67680,"byte_end":67683,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":67684,"byte_end":67691,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":67692,"byte_end":67713,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":67714,"byte_end":67717,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let buf = Bytes::from(&b\"abc\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":67718,"byte_end":67757,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":67758,"byte_end":67793,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":67794,"byte_end":67797,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":67798,"byte_end":67838,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(iter.next(), Some(b'b'));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":67839,"byte_end":67879,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(iter.next(), Some(b'c'));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":67880,"byte_end":67920,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":67921,"byte_end":67955,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":67956,"byte_end":67963,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":67964,"byte_end":67967,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: trait.Buf.html#method.iter","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":67968,"byte_end":68008,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ [`Buf`]: trait.Buf.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":68009,"byte_end":68036,"line_start":24,"line_end":24,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69033,"byte_end":69043,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<IntoIter<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `IntoIter`, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this `IntoIter`, returning the underlying value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":68634,"byte_end":68695,"line_start":50,"line_end":50,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":68700,"byte_end":68703,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":68708,"byte_end":68722,"line_start":52,"line_end":52,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":68727,"byte_end":68730,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":68735,"byte_end":68746,"line_start":54,"line_end":54,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, Bytes};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":68751,"byte_end":68779,"line_start":55,"line_end":55,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":68784,"byte_end":68787,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ let buf = Bytes::from(&b\"abc\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":68792,"byte_end":68831,"line_start":57,"line_end":57,"column_start":5,"column_end":44}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":68836,"byte_end":68871,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":68876,"byte_end":68879,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":68884,"byte_end":68924,"line_start":60,"line_end":60,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":68929,"byte_end":68932,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let buf = iter.into_inner();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":68937,"byte_end":68969,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(2, buf.remaining());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":68974,"byte_end":69009,"line_start":63,"line_end":63,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69014,"byte_end":69021,"line_start":64,"line_end":64,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69522,"byte_end":69529,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<IntoIter<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `Buf`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69087,"byte_end":69132,"line_start":69,"line_end":69,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69137,"byte_end":69140,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69145,"byte_end":69210,"line_start":71,"line_end":71,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69215,"byte_end":69218,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69223,"byte_end":69237,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69242,"byte_end":69245,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69250,"byte_end":69261,"line_start":75,"line_end":75,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, Bytes};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69266,"byte_end":69294,"line_start":76,"line_end":76,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69299,"byte_end":69302,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ let buf = Bytes::from(&b\"abc\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69307,"byte_end":69346,"line_start":78,"line_end":78,"column_start":5,"column_end":44}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69351,"byte_end":69386,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69391,"byte_end":69394,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69399,"byte_end":69439,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69444,"byte_end":69447,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, iter.get_ref().remaining());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69452,"byte_end":69498,"line_start":83,"line_end":83,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69503,"byte_end":69510,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":70062,"byte_end":70069,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IntoIter<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `Buf`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69576,"byte_end":69629,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69634,"byte_end":69637,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69642,"byte_end":69707,"line_start":91,"line_end":91,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69712,"byte_end":69715,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69720,"byte_end":69734,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69739,"byte_end":69742,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69747,"byte_end":69758,"line_start":95,"line_end":95,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, BytesMut};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69763,"byte_end":69794,"line_start":96,"line_end":96,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69799,"byte_end":69802,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let buf = BytesMut::from(&b\"abc\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69807,"byte_end":69849,"line_start":98,"line_end":98,"column_start":5,"column_end":47}},{"value":"/ let mut iter = buf.into_iter();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69854,"byte_end":69889,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69894,"byte_end":69897,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'a'));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69902,"byte_end":69942,"line_start":101,"line_end":101,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69947,"byte_end":69950,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ iter.get_mut().advance(1);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69955,"byte_end":69985,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69990,"byte_end":69993,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(b'c'));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":69998,"byte_end":70038,"line_start":105,"line_end":105,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":70043,"byte_end":70050,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":967},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":70774,"byte_end":70779,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Limit","qualname":"::buf::limit::Limit","value":"Limit {  }","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":970}],"decl_id":null,"docs":" A `BufMut` adapter which limits the amount of bytes that can be written\n to an underlying buffer.\n","sig":null,"attributes":[{"value":"/ A `BufMut` adapter which limits the amount of bytes that can be written","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":70641,"byte_end":70716,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ to an underlying buffer.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":70717,"byte_end":70745,"line_start":7,"line_end":7,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":71002,"byte_end":71012,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Limit<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Limit`, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this `Limit`, returning the underlying value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":70932,"byte_end":70990,"line_start":19,"line_end":19,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":71196,"byte_end":71203,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Limit<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `BufMut`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `BufMut`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":71056,"byte_end":71104,"line_start":24,"line_end":24,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":71109,"byte_end":71112,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying `BufMut`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":71117,"byte_end":71184,"line_start":26,"line_end":26,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":71398,"byte_end":71405,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Limit<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `BufMut`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `BufMut`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":71250,"byte_end":71306,"line_start":31,"line_end":31,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":71311,"byte_end":71314,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying `BufMut`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":71319,"byte_end":71386,"line_start":33,"line_end":33,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":71701,"byte_end":71706,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"limit","qualname":"<Limit<T>>::limit","value":"pub fn limit(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of bytes that can be written","sig":null,"attributes":[{"value":"/ Returns the maximum number of bytes that can be written","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":71464,"byte_end":71523,"line_start":38,"line_end":38,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":71528,"byte_end":71531,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":71536,"byte_end":71546,"line_start":40,"line_end":40,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":71551,"byte_end":71554,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ If the inner `BufMut` has fewer bytes than indicated by this method then","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":71559,"byte_end":71635,"line_start":42,"line_end":42,"column_start":5,"column_end":81}},{"value":"/ that is the actual number of available bytes.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":71640,"byte_end":71689,"line_start":43,"line_end":43,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":71971,"byte_end":71980,"line_start":54,"line_end":54,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Limit<T>>::set_limit","value":"pub fn set_limit(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of bytes that can be written.","sig":null,"attributes":[{"value":"/ Sets the maximum number of bytes that can be written.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":71755,"byte_end":71812,"line_start":48,"line_end":48,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":71817,"byte_end":71820,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":71825,"byte_end":71835,"line_start":50,"line_end":50,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":71840,"byte_end":71843,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ If the inner `BufMut` has fewer bytes than `lim` then that is the actual","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":71848,"byte_end":71924,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ number of available bytes.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":71929,"byte_end":71959,"line_start":53,"line_end":53,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":974},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":72826,"byte_end":72832,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Reader","qualname":"::buf::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":976}],"decl_id":null,"docs":" A `Buf` adapter which implements `io::Read` for the inner value.","sig":null,"attributes":[{"value":"/ A `Buf` adapter which implements `io::Read` for the inner value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":72566,"byte_end":72634,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":72635,"byte_end":72638,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling `reader()` on `Buf`. See","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":72639,"byte_end":72711,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ documentation of [`reader()`](trait.Buf.html#method.reader) for more","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":72712,"byte_end":72784,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/ details.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":72785,"byte_end":72797,"line_start":9,"line_end":9,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73273,"byte_end":73280,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Reader<B>>::get_ref","value":"pub fn get_ref(&Self) -> &B","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `Buf`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":72941,"byte_end":72986,"line_start":20,"line_end":20,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":72991,"byte_end":72994,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":72999,"byte_end":73064,"line_start":22,"line_end":22,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73069,"byte_end":73072,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73077,"byte_end":73091,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73096,"byte_end":73099,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73104,"byte_end":73115,"line_start":26,"line_end":26,"column_start":5,"column_end":16}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73120,"byte_end":73139,"line_start":27,"line_end":27,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73144,"byte_end":73147,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let buf = b\"hello world\".reader();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73152,"byte_end":73190,"line_start":29,"line_end":29,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73195,"byte_end":73198,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"hello world\", buf.get_ref());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73203,"byte_end":73249,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73254,"byte_end":73261,"line_start":32,"line_end":32,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73468,"byte_end":73475,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Reader<B>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut B","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `Buf`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73325,"byte_end":73378,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73383,"byte_end":73386,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73391,"byte_end":73456,"line_start":39,"line_end":39,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73935,"byte_end":73945,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<B>>::into_inner","value":"pub fn into_inner(Self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Reader`, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this `Reader`, returning the underlying value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73532,"byte_end":73591,"line_start":44,"line_end":44,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73596,"byte_end":73599,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73604,"byte_end":73618,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73623,"byte_end":73626,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73631,"byte_end":73642,"line_start":48,"line_end":48,"column_start":5,"column_end":16}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73647,"byte_end":73666,"line_start":49,"line_end":49,"column_start":5,"column_end":24}},{"value":"/ use std::io;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73671,"byte_end":73687,"line_start":50,"line_end":50,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73692,"byte_end":73695,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".reader();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73700,"byte_end":73742,"line_start":52,"line_end":52,"column_start":5,"column_end":47}},{"value":"/ let mut dst = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73747,"byte_end":73772,"line_start":53,"line_end":53,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73777,"byte_end":73780,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ io::copy(&mut buf, &mut dst).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73785,"byte_end":73827,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73832,"byte_end":73835,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ let buf = buf.into_inner();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73840,"byte_end":73871,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(0, buf.remaining());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73876,"byte_end":73911,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":73916,"byte_end":73923,"line_start":59,"line_end":59,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":980},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":74746,"byte_end":74750,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Take","qualname":"::buf::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":982},{"krate":0,"index":983}],"decl_id":null,"docs":" A `Buf` adapter which limits the bytes read from an underlying buffer.","sig":null,"attributes":[{"value":"/ A `Buf` adapter which limits the bytes read from an underlying buffer.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":74487,"byte_end":74561,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":74562,"byte_end":74565,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling `take()` on `Buf`. See","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":74566,"byte_end":74636,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"/ documentation of [`take()`](trait.BufExt.html#method.take) for more details.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":74637,"byte_end":74717,"line_start":8,"line_end":8,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75363,"byte_end":75373,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Take`, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this `Take`, returning the underlying value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":74893,"byte_end":74950,"line_start":20,"line_end":20,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":74955,"byte_end":74958,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":74963,"byte_end":74977,"line_start":22,"line_end":22,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":74982,"byte_end":74985,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":74990,"byte_end":75001,"line_start":24,"line_end":24,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, BufMut};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75006,"byte_end":75035,"line_start":25,"line_end":25,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75040,"byte_end":75043,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75048,"byte_end":75089,"line_start":27,"line_end":27,"column_start":5,"column_end":46}},{"value":"/ let mut dst = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75094,"byte_end":75119,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75124,"byte_end":75127,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75132,"byte_end":75154,"line_start":30,"line_end":30,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"he\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75159,"byte_end":75191,"line_start":31,"line_end":31,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75196,"byte_end":75199,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ let mut buf = buf.into_inner();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75204,"byte_end":75239,"line_start":33,"line_end":33,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75244,"byte_end":75247,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ dst.clear();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75252,"byte_end":75268,"line_start":35,"line_end":35,"column_start":5,"column_end":21}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75273,"byte_end":75295,"line_start":36,"line_end":36,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"llo world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75300,"byte_end":75339,"line_start":37,"line_end":37,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75344,"byte_end":75351,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75748,"byte_end":75755,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `Buf`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75417,"byte_end":75462,"line_start":43,"line_end":43,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75467,"byte_end":75470,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75475,"byte_end":75540,"line_start":45,"line_end":45,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75545,"byte_end":75548,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75553,"byte_end":75567,"line_start":47,"line_end":47,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75572,"byte_end":75575,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75580,"byte_end":75591,"line_start":49,"line_end":49,"column_start":5,"column_end":16}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75596,"byte_end":75615,"line_start":50,"line_end":50,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75620,"byte_end":75623,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let buf = b\"hello world\".take(2);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75628,"byte_end":75665,"line_start":52,"line_end":52,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75670,"byte_end":75673,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(11, buf.get_ref().remaining());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75678,"byte_end":75724,"line_start":54,"line_end":54,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75729,"byte_end":75736,"line_start":55,"line_end":55,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76240,"byte_end":76247,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `Buf`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75802,"byte_end":75855,"line_start":60,"line_end":60,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75860,"byte_end":75863,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying `Buf`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75868,"byte_end":75933,"line_start":62,"line_end":62,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75938,"byte_end":75941,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75946,"byte_end":75960,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75965,"byte_end":75968,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75973,"byte_end":75984,"line_start":66,"line_end":66,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, BufMut};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":75989,"byte_end":76018,"line_start":67,"line_end":67,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76023,"byte_end":76026,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76031,"byte_end":76072,"line_start":69,"line_end":69,"column_start":5,"column_end":46}},{"value":"/ let mut dst = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76077,"byte_end":76102,"line_start":70,"line_end":70,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76107,"byte_end":76110,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ buf.get_mut().advance(2);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76115,"byte_end":76144,"line_start":72,"line_end":72,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76149,"byte_end":76152,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76157,"byte_end":76179,"line_start":74,"line_end":74,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"ll\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76184,"byte_end":76216,"line_start":75,"line_end":75,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76221,"byte_end":76228,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76799,"byte_end":76804,"line_start":99,"line_end":99,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<T>>::limit","value":"pub fn limit(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of bytes that can be read.","sig":null,"attributes":[{"value":"/ Returns the maximum number of bytes that can be read.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76306,"byte_end":76363,"line_start":81,"line_end":81,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76368,"byte_end":76371,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76376,"byte_end":76386,"line_start":83,"line_end":83,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76391,"byte_end":76394,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If the inner `Buf` has fewer bytes than indicated by this method then","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76399,"byte_end":76472,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ that is the actual number of available bytes.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76477,"byte_end":76526,"line_start":86,"line_end":86,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76531,"byte_end":76534,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76539,"byte_end":76553,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76558,"byte_end":76561,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76566,"byte_end":76577,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76582,"byte_end":76601,"line_start":91,"line_end":91,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76606,"byte_end":76609,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76614,"byte_end":76655,"line_start":93,"line_end":93,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76660,"byte_end":76663,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2, buf.limit());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76668,"byte_end":76699,"line_start":95,"line_end":95,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(b'h', buf.get_u8());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76704,"byte_end":76739,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(1, buf.limit());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76744,"byte_end":76775,"line_start":97,"line_end":97,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76780,"byte_end":76787,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":77444,"byte_end":77453,"line_start":127,"line_end":127,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<T>>::set_limit","value":"pub fn set_limit(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of bytes that can be read.","sig":null,"attributes":[{"value":"/ Sets the maximum number of bytes that can be read.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76853,"byte_end":76907,"line_start":103,"line_end":103,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76912,"byte_end":76915,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76920,"byte_end":76930,"line_start":105,"line_end":105,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76935,"byte_end":76938,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ If the inner `Buf` has fewer bytes than `lim` then that is the actual","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":76943,"byte_end":77016,"line_start":107,"line_end":107,"column_start":5,"column_end":78}},{"value":"/ number of available bytes.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":77021,"byte_end":77051,"line_start":108,"line_end":108,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":77056,"byte_end":77059,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":77064,"byte_end":77078,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":77083,"byte_end":77086,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":77091,"byte_end":77102,"line_start":112,"line_end":112,"column_start":5,"column_end":16}},{"value":"/ use bytes::{Buf, BufMut};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":77107,"byte_end":77136,"line_start":113,"line_end":113,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":77141,"byte_end":77144,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let mut buf = b\"hello world\".take(2);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":77149,"byte_end":77190,"line_start":115,"line_end":115,"column_start":5,"column_end":46}},{"value":"/ let mut dst = vec![];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":77195,"byte_end":77220,"line_start":116,"line_end":116,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":77225,"byte_end":77228,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":77233,"byte_end":77255,"line_start":118,"line_end":118,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"he\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":77260,"byte_end":77292,"line_start":119,"line_end":119,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":77297,"byte_end":77300,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ dst.clear();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":77305,"byte_end":77321,"line_start":121,"line_end":121,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":77326,"byte_end":77329,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ buf.set_limit(3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":77334,"byte_end":77355,"line_start":123,"line_end":123,"column_start":5,"column_end":26}},{"value":"/ dst.put(&mut buf);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":77360,"byte_end":77382,"line_start":124,"line_end":124,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(*dst, b\"llo\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":77387,"byte_end":77420,"line_start":125,"line_end":125,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":77425,"byte_end":77432,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":272},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":78711,"byte_end":78722,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"name":"UninitSlice","qualname":"::buf::uninit_slice::UninitSlice","value":"","parent":null,"children":[],"decl_id":null,"docs":" Uninitialized byte slice.","sig":null,"attributes":[{"value":"/ Uninitialized byte slice.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":78071,"byte_end":78100,"line_start":7,"line_end":7,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":78101,"byte_end":78104,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Returned by `BufMut::bytes_mut()`, the referenced byte slice may be","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":78105,"byte_end":78176,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/ uninitialized. The wrapper provides safe access without introducing","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":78177,"byte_end":78248,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/ undefined behavior.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":78249,"byte_end":78272,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":78273,"byte_end":78276,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The safety invariants of this wrapper are:","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":78277,"byte_end":78323,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":78324,"byte_end":78327,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/  1. Reading from an `UninitSlice` is undefined behavior.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":78328,"byte_end":78388,"line_start":15,"line_end":15,"column_start":1,"column_end":61}},{"value":"/  2. Writing uninitialized bytes to an `UninitSlice` is undefined behavior.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":78389,"byte_end":78467,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":78468,"byte_end":78471,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The difference between `&mut UninitSlice` and `&mut [MaybeUninit<u8>]` is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":78472,"byte_end":78549,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ that it is possible in safe code to write uninitialized bytes to an","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":78550,"byte_end":78621,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ `&mut [MaybeUninit<u8>]`, which this type prohibits.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":78622,"byte_end":78678,"line_start":20,"line_end":20,"column_start":1,"column_end":57}},{"value":"repr(transparent)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":78679,"byte_end":78699,"line_start":21,"line_end":21,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79340,"byte_end":79358,"line_start":43,"line_end":43,"column_start":19,"column_end":37},"name":"from_raw_parts_mut","qualname":"<UninitSlice>::from_raw_parts_mut","value":"pub unsafe fn from_raw_parts_mut<'a>(*mut u8, usize) -> &'a mut UninitSlice","parent":null,"children":[],"decl_id":null,"docs":" Create a `&mut UninitSlice` from a pointer and a length.","sig":null,"attributes":[{"value":"/ Create a `&mut UninitSlice` from a pointer and a length.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":78767,"byte_end":78827,"line_start":25,"line_end":25,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":78832,"byte_end":78835,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":78840,"byte_end":78852,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":78857,"byte_end":78860,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `ptr` references a valid memory region owned","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":78865,"byte_end":78941,"line_start":29,"line_end":29,"column_start":5,"column_end":81}},{"value":"/ by the caller representing a byte slice for the duration of `'a`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":78946,"byte_end":79015,"line_start":30,"line_end":30,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79020,"byte_end":79023,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79028,"byte_end":79042,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79047,"byte_end":79050,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79055,"byte_end":79062,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ use bytes::buf::UninitSlice;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79067,"byte_end":79099,"line_start":35,"line_end":35,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79104,"byte_end":79107,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"hello world\".to_vec();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79112,"byte_end":79152,"line_start":37,"line_end":37,"column_start":5,"column_end":45}},{"value":"/ let ptr = bytes.as_ptr() as *mut _;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79157,"byte_end":79196,"line_start":38,"line_end":38,"column_start":5,"column_end":44}},{"value":"/ let len = bytes.len();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79201,"byte_end":79227,"line_start":39,"line_end":39,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79232,"byte_end":79235,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let slice = unsafe { UninitSlice::from_raw_parts_mut(ptr, len) };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79240,"byte_end":79309,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79314,"byte_end":79321,"line_start":42,"line_end":42,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80085,"byte_end":80095,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"write_byte","qualname":"<UninitSlice>::write_byte","value":"pub fn write_byte(&mut Self, usize, u8)","parent":null,"children":[],"decl_id":null,"docs":" Write a single byte at the specified offset.","sig":null,"attributes":[{"value":"/ Write a single byte at the specified offset.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79612,"byte_end":79660,"line_start":49,"line_end":49,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79665,"byte_end":79668,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79673,"byte_end":79685,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79690,"byte_end":79693,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The function panics if `index` is out of bounds.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79698,"byte_end":79750,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79755,"byte_end":79758,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79763,"byte_end":79777,"line_start":55,"line_end":55,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79782,"byte_end":79785,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79790,"byte_end":79797,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ use bytes::buf::UninitSlice;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79802,"byte_end":79834,"line_start":58,"line_end":58,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79839,"byte_end":79842,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let mut data = [b'f', b'o', b'o'];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79847,"byte_end":79885,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"/ let slice = unsafe { UninitSlice::from_raw_parts_mut(data.as_mut_ptr(), 3) };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79890,"byte_end":79971,"line_start":61,"line_end":61,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79976,"byte_end":79979,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ slice.write_byte(0, b'b');","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":79984,"byte_end":80014,"line_start":63,"line_end":63,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80019,"byte_end":80022,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"boo\", &data[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80027,"byte_end":80061,"line_start":65,"line_end":65,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80066,"byte_end":80073,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80790,"byte_end":80805,"line_start":93,"line_end":93,"column_start":12,"column_end":27},"name":"copy_from_slice","qualname":"<UninitSlice>::copy_from_slice","value":"pub fn copy_from_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Copies bytes  from `src` into `self`.","sig":null,"attributes":[{"value":"/ Copies bytes  from `src` into `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80240,"byte_end":80281,"line_start":73,"line_end":73,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80286,"byte_end":80289,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ The length of `src` must be the same as `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80294,"byte_end":80345,"line_start":75,"line_end":75,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80350,"byte_end":80353,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80358,"byte_end":80370,"line_start":77,"line_end":77,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80375,"byte_end":80378,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ The function panics if `src` has a different length than `self`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80383,"byte_end":80451,"line_start":79,"line_end":79,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80456,"byte_end":80459,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80464,"byte_end":80478,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80483,"byte_end":80486,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80491,"byte_end":80498,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/ use bytes::buf::UninitSlice;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80503,"byte_end":80535,"line_start":84,"line_end":84,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80540,"byte_end":80543,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ let mut data = [b'f', b'o', b'o'];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80548,"byte_end":80586,"line_start":86,"line_end":86,"column_start":5,"column_end":43}},{"value":"/ let slice = unsafe { UninitSlice::from_raw_parts_mut(data.as_mut_ptr(), 3) };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80591,"byte_end":80672,"line_start":87,"line_end":87,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80677,"byte_end":80680,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ slice.copy_from_slice(b\"bar\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80685,"byte_end":80719,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80724,"byte_end":80727,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"bar\", &data[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80732,"byte_end":80766,"line_start":91,"line_end":91,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":80771,"byte_end":80778,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81481,"byte_end":81491,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<UninitSlice>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut u8","parent":null,"children":[],"decl_id":null,"docs":" Return a raw pointer to the slice's buffer.","sig":null,"attributes":[{"value":"/ Return a raw pointer to the slice's buffer.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81020,"byte_end":81067,"line_start":103,"line_end":103,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81072,"byte_end":81075,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81080,"byte_end":81092,"line_start":105,"line_end":105,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81097,"byte_end":81100,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The caller **must not** read from the referenced memory and **must not**","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81105,"byte_end":81181,"line_start":107,"line_end":107,"column_start":5,"column_end":81}},{"value":"/ write **uninitialized** bytes to the slice either.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81186,"byte_end":81240,"line_start":108,"line_end":108,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81245,"byte_end":81248,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81253,"byte_end":81267,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81272,"byte_end":81275,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81280,"byte_end":81287,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81292,"byte_end":81314,"line_start":113,"line_end":113,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81319,"byte_end":81322,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let mut data = [0, 1, 2];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81327,"byte_end":81356,"line_start":115,"line_end":115,"column_start":5,"column_end":34}},{"value":"/ let mut slice = &mut data[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81361,"byte_end":81395,"line_start":116,"line_end":116,"column_start":5,"column_end":39}},{"value":"/ let ptr = BufMut::bytes_mut(&mut slice).as_mut_ptr();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81400,"byte_end":81457,"line_start":117,"line_end":117,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81462,"byte_end":81469,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81880,"byte_end":81883,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"len","qualname":"<UninitSlice>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes in the slice.","sig":null,"attributes":[{"value":"/ Returns the number of bytes in the slice.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81565,"byte_end":81610,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81615,"byte_end":81618,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81623,"byte_end":81637,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81642,"byte_end":81645,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81650,"byte_end":81657,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81662,"byte_end":81684,"line_start":128,"line_end":128,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81689,"byte_end":81692,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let mut data = [0, 1, 2];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81697,"byte_end":81726,"line_start":130,"line_end":130,"column_start":5,"column_end":34}},{"value":"/ let mut slice = &mut data[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81731,"byte_end":81765,"line_start":131,"line_end":131,"column_start":5,"column_end":39}},{"value":"/ let len = BufMut::bytes_mut(&mut slice).len();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81770,"byte_end":81820,"line_start":132,"line_end":132,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81825,"byte_end":81828,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(len, 3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81833,"byte_end":81856,"line_start":134,"line_end":134,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81861,"byte_end":81868,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1017},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":83702,"byte_end":83708,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Writer","qualname":"::buf::writer::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":1019}],"decl_id":null,"docs":" A `BufMut` adapter which implements `io::Write` for the inner value.","sig":null,"attributes":[{"value":"/ A `BufMut` adapter which implements `io::Write` for the inner value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":83432,"byte_end":83504,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":83505,"byte_end":83508,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling `writer()` on `BufMut`. See","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":83509,"byte_end":83584,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ documentation of [`writer()`](trait.BufMut.html#method.writer) for more","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":83585,"byte_end":83660,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ details.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":83661,"byte_end":83673,"line_start":9,"line_end":9,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84171,"byte_end":84178,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Writer<B>>::get_ref","value":"pub fn get_ref(&Self) -> &B","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `BufMut`.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying `BufMut`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":83820,"byte_end":83868,"line_start":20,"line_end":20,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":83873,"byte_end":83876,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying `BufMut`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":83881,"byte_end":83948,"line_start":22,"line_end":22,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":83953,"byte_end":83956,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":83961,"byte_end":83975,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":83980,"byte_end":83983,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":83988,"byte_end":83999,"line_start":26,"line_end":26,"column_start":5,"column_end":16}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84004,"byte_end":84026,"line_start":27,"line_end":27,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84031,"byte_end":84034,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let buf = Vec::with_capacity(1024).writer();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84039,"byte_end":84087,"line_start":29,"line_end":29,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84092,"byte_end":84095,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1024, buf.get_ref().capacity());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84100,"byte_end":84147,"line_start":31,"line_end":31,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84152,"byte_end":84159,"line_start":32,"line_end":32,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84613,"byte_end":84620,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Writer<B>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut B","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `BufMut`.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying `BufMut`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84223,"byte_end":84279,"line_start":37,"line_end":37,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84284,"byte_end":84287,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying `BufMut`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84292,"byte_end":84359,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84364,"byte_end":84367,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84372,"byte_end":84386,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84391,"byte_end":84394,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84399,"byte_end":84410,"line_start":43,"line_end":43,"column_start":5,"column_end":16}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84415,"byte_end":84437,"line_start":44,"line_end":44,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84442,"byte_end":84445,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![].writer();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84450,"byte_end":84484,"line_start":46,"line_end":46,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84489,"byte_end":84492,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ buf.get_mut().reserve(1024);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84497,"byte_end":84529,"line_start":48,"line_end":48,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84534,"byte_end":84537,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1024, buf.get_ref().capacity());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84542,"byte_end":84589,"line_start":50,"line_end":50,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84594,"byte_end":84601,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":85094,"byte_end":85104,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Writer<B>>::into_inner","value":"pub fn into_inner(Self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Writer`, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this `Writer`, returning the underlying value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84677,"byte_end":84736,"line_start":56,"line_end":56,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84741,"byte_end":84744,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84749,"byte_end":84763,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84768,"byte_end":84771,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84776,"byte_end":84787,"line_start":60,"line_end":60,"column_start":5,"column_end":16}},{"value":"/ use bytes::BufMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84792,"byte_end":84814,"line_start":61,"line_end":61,"column_start":5,"column_end":27}},{"value":"/ use std::io;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84819,"byte_end":84835,"line_start":62,"line_end":62,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84840,"byte_end":84843,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![].writer();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84848,"byte_end":84882,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/ let mut src = &b\"hello world\"[..];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84887,"byte_end":84925,"line_start":65,"line_end":65,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84930,"byte_end":84933,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ io::copy(&mut src, &mut buf).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84938,"byte_end":84980,"line_start":67,"line_end":67,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84985,"byte_end":84988,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let buf = buf.into_inner();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":84993,"byte_end":85024,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(*buf, b\"hello world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":85029,"byte_end":85070,"line_start":70,"line_end":70,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":85075,"byte_end":85082,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":348},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":89136,"byte_end":89141,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::bytes::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352}],"decl_id":null,"docs":" A cheaply cloneable and sliceable chunk of contiguous memory.","sig":null,"attributes":[{"value":"/ A cheaply cloneable and sliceable chunk of contiguous memory.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":85803,"byte_end":85868,"line_start":13,"line_end":13,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":85869,"byte_end":85872,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `Bytes` is an efficient container for storing and operating on contiguous","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":85873,"byte_end":85950,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ slices of memory. It is intended for use primarily in networking code, but","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":85951,"byte_end":86029,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ could have applications elsewhere as well.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86030,"byte_end":86076,"line_start":17,"line_end":17,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86077,"byte_end":86080,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `Bytes` values facilitate zero-copy network programming by allowing multiple","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86081,"byte_end":86161,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ `Bytes` objects to point to the same underlying memory.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86162,"byte_end":86221,"line_start":20,"line_end":20,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86222,"byte_end":86225,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `Bytes` does not have a single implementation. It is an interface, whose","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86226,"byte_end":86302,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ exact behavior is implemented through dynamic dispatch in several underlying","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86303,"byte_end":86383,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ implementations of `Bytes`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86384,"byte_end":86415,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86416,"byte_end":86419,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ All `Bytes` implementations must fulfill the following requirements:","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86420,"byte_end":86492,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ - They are cheaply cloneable and thereby shareable between an unlimited amount","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86493,"byte_end":86575,"line_start":27,"line_end":27,"column_start":1,"column_end":83}},{"value":"/   of components, for example by modifying a reference count.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86576,"byte_end":86640,"line_start":28,"line_end":28,"column_start":1,"column_end":65}},{"value":"/ - Instances can be sliced to refer to a subset of the the original buffer.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86641,"byte_end":86719,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86720,"byte_end":86723,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86724,"byte_end":86731,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86732,"byte_end":86753,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86754,"byte_end":86757,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let mut mem = Bytes::from(\"Hello world\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86758,"byte_end":86803,"line_start":34,"line_end":34,"column_start":1,"column_end":46}},{"value":"/ let a = mem.slice(0..5);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86804,"byte_end":86832,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86833,"byte_end":86836,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a, \"Hello\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86837,"byte_end":86864,"line_start":37,"line_end":37,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86865,"byte_end":86868,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let b = mem.split_to(6);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86869,"byte_end":86897,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86898,"byte_end":86901,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(mem, \"world\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86902,"byte_end":86931,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(b, \"Hello \");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86932,"byte_end":86960,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86961,"byte_end":86968,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86969,"byte_end":86972,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Memory layout","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86973,"byte_end":86992,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86993,"byte_end":86996,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The `Bytes` struct itself is fairly small, limited to 4 `usize` fields used","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":86997,"byte_end":87076,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/ to track information about which segment of the underlying memory the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":87077,"byte_end":87150,"line_start":48,"line_end":48,"column_start":1,"column_end":74}},{"value":"/ `Bytes` handle has access to.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":87151,"byte_end":87184,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":87185,"byte_end":87188,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ `Bytes` keeps both a pointer to the shared state containing the full memory","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":87189,"byte_end":87268,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ slice and a pointer to the start of the region visible by the handle.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":87269,"byte_end":87342,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ `Bytes` also tracks the length of its view into the memory.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":87343,"byte_end":87406,"line_start":53,"line_end":53,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":87407,"byte_end":87410,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Sharing","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":87411,"byte_end":87424,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":87425,"byte_end":87428,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ `Bytes` contains a vtable, which allows implementations of `Bytes` to define","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":87429,"byte_end":87509,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"/ how sharing/cloneing is implemented in detail.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":87510,"byte_end":87560,"line_start":58,"line_end":58,"column_start":1,"column_end":51}},{"value":"/ When `Bytes::clone()` is called, `Bytes` will call the vtable function for","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":87561,"byte_end":87639,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ cloning the backing storage in order to share it behind between multiple","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":87640,"byte_end":87716,"line_start":60,"line_end":60,"column_start":1,"column_end":77}},{"value":"/ `Bytes` instances.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":87717,"byte_end":87739,"line_start":61,"line_end":61,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":87740,"byte_end":87743,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ For `Bytes` implementations which refer to constant memory (e.g. created","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":87744,"byte_end":87820,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ via `Bytes::from_static()`) the cloning implementation will be a no-op.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":87821,"byte_end":87896,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":87897,"byte_end":87900,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ For `Bytes` implementations which point to a reference counted shared storage","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":87901,"byte_end":87982,"line_start":66,"line_end":66,"column_start":1,"column_end":82}},{"value":"/ (e.g. an `Arc<[u8]>`), sharing will be implemented by increasing the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":87983,"byte_end":88055,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/ the reference count.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":88056,"byte_end":88080,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":88081,"byte_end":88084,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Due to this mechanism, multiple `Bytes` instances may point to the same","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":88085,"byte_end":88160,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ shared memory region.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":88161,"byte_end":88186,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/ Each `Bytes` instance can point to different sections within that","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":88187,"byte_end":88256,"line_start":72,"line_end":72,"column_start":1,"column_end":70}},{"value":"/ memory region, and `Bytes` instances may or may not have overlapping views","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":88257,"byte_end":88335,"line_start":73,"line_end":73,"column_start":1,"column_end":79}},{"value":"/ into the memory.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":88336,"byte_end":88356,"line_start":74,"line_end":74,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":88357,"byte_end":88360,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ The following diagram visualizes a scenario where 2 `Bytes` instances make","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":88361,"byte_end":88439,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/ use of an `Arc`-based backing storage, and provide access to different views:","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":88440,"byte_end":88521,"line_start":77,"line_end":77,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":88522,"byte_end":88525,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":88526,"byte_end":88537,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":88538,"byte_end":88541,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/    Arc ptrs                   +---------+","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":88542,"byte_end":88587,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/    ________________________ / | Bytes 2 |","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":88588,"byte_end":88633,"line_start":82,"line_end":82,"column_start":1,"column_end":46}},{"value":"/   /                           +---------+","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":88634,"byte_end":88679,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/  /          +-----------+     |         |","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":88680,"byte_end":88725,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ |_________/ |  Bytes 1  |     |         |","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":88726,"byte_end":88771,"line_start":85,"line_end":85,"column_start":1,"column_end":46}},{"value":"/ |           +-----------+     |         |","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":88772,"byte_end":88817,"line_start":86,"line_end":86,"column_start":1,"column_end":46}},{"value":"/ |           |           | ___/ data     | tail","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":88818,"byte_end":88868,"line_start":87,"line_end":87,"column_start":1,"column_end":51}},{"value":"/ |      data |      tail |/              |","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":88869,"byte_end":88914,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/ v           v           v               v","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":88915,"byte_end":88960,"line_start":89,"line_end":89,"column_start":1,"column_end":46}},{"value":"/ +-----+---------------------------------+-----+","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":88961,"byte_end":89012,"line_start":90,"line_end":90,"column_start":1,"column_end":52}},{"value":"/ | Arc |     |           |               |     |","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":89013,"byte_end":89064,"line_start":91,"line_end":91,"column_start":1,"column_end":52}},{"value":"/ +-----+---------------------------------+-----+","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":89065,"byte_end":89116,"line_start":92,"line_end":92,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":89117,"byte_end":89124,"line_start":93,"line_end":93,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":89839,"byte_end":89842,"line_start":124,"line_end":124,"column_start":18,"column_end":21},"name":"new","qualname":"<Bytes>::new","value":"pub const fn new() -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `Bytes`.","sig":null,"attributes":[{"value":"/ Creates a new empty `Bytes`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":89500,"byte_end":89532,"line_start":110,"line_end":110,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":89537,"byte_end":89540,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This will not allocate and the returned `Bytes` handle will be empty.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":89545,"byte_end":89618,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":89623,"byte_end":89626,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":89631,"byte_end":89645,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":89650,"byte_end":89653,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":89658,"byte_end":89665,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":89670,"byte_end":89691,"line_start":117,"line_end":117,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":89696,"byte_end":89699,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let b = Bytes::new();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":89704,"byte_end":89729,"line_start":119,"line_end":119,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(&b[..], b\"\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":89734,"byte_end":89762,"line_start":120,"line_end":120,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":89767,"byte_end":89774,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":89779,"byte_end":89788,"line_start":122,"line_end":122,"column_start":5,"column_end":14}},{"value":"cfg(not(all(loom, test)))","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":89793,"byte_end":89821,"line_start":123,"line_end":123,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":90579,"byte_end":90590,"line_start":152,"line_end":152,"column_start":18,"column_end":29},"name":"from_static","qualname":"<Bytes>::from_static","value":"pub const fn from_static(&'static [u8]) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Bytes` from a static slice.","sig":null,"attributes":[{"value":"/ Creates a new `Bytes` from a static slice.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":90170,"byte_end":90216,"line_start":137,"line_end":137,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":90221,"byte_end":90224,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The returned `Bytes` will point directly to the static slice. There is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":90229,"byte_end":90303,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"/ no allocating or copying.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":90308,"byte_end":90337,"line_start":140,"line_end":140,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":90342,"byte_end":90345,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":90350,"byte_end":90364,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":90369,"byte_end":90372,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":90377,"byte_end":90384,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":90389,"byte_end":90410,"line_start":145,"line_end":145,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":90415,"byte_end":90418,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ let b = Bytes::from_static(b\"hello\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":90423,"byte_end":90464,"line_start":147,"line_end":147,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(&b[..], b\"hello\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":90469,"byte_end":90502,"line_start":148,"line_end":148,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":90507,"byte_end":90514,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":90519,"byte_end":90528,"line_start":150,"line_end":150,"column_start":5,"column_end":14}},{"value":"cfg(not(all(loom, test)))","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":90533,"byte_end":90561,"line_start":151,"line_end":151,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91331,"byte_end":91334,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"len","qualname":"<Bytes>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in this `Bytes`.","sig":null,"attributes":[{"value":"/ Returns the number of bytes contained in this `Bytes`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91078,"byte_end":91136,"line_start":171,"line_end":171,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91141,"byte_end":91144,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91149,"byte_end":91163,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91168,"byte_end":91171,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91176,"byte_end":91183,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91188,"byte_end":91209,"line_start":176,"line_end":176,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91214,"byte_end":91217,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ let b = Bytes::from(&b\"hello\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91222,"byte_end":91261,"line_start":178,"line_end":178,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(b.len(), 5);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91266,"byte_end":91293,"line_start":179,"line_end":179,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91298,"byte_end":91305,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91310,"byte_end":91319,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91611,"byte_end":91619,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Bytes>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Bytes` has a length of 0.","sig":null,"attributes":[{"value":"/ Returns true if the `Bytes` has a length of 0.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91381,"byte_end":91431,"line_start":186,"line_end":186,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91436,"byte_end":91439,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91444,"byte_end":91458,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91463,"byte_end":91466,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91471,"byte_end":91478,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91483,"byte_end":91504,"line_start":191,"line_end":191,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91509,"byte_end":91512,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ let b = Bytes::new();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91517,"byte_end":91542,"line_start":193,"line_end":193,"column_start":5,"column_end":30}},{"value":"/ assert!(b.is_empty());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91547,"byte_end":91573,"line_start":194,"line_end":194,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91578,"byte_end":91585,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91590,"byte_end":91599,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91737,"byte_end":91752,"line_start":202,"line_end":202,"column_start":12,"column_end":27},"name":"copy_from_slice","qualname":"<Bytes>::copy_from_slice","value":"pub fn copy_from_slice(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates `Bytes` instance from slice, by copying it.\n","sig":null,"attributes":[{"value":"/ Creates `Bytes` instance from slice, by copying it.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91670,"byte_end":91725,"line_start":201,"line_end":201,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":92412,"byte_end":92417,"line_start":228,"line_end":228,"column_start":12,"column_end":17},"name":"slice","qualname":"<Bytes>::slice","value":"pub fn slice<impl RangeBounds<usize>: RangeBounds<usize>>(&Self,\n                                                          impl RangeBounds<usize>)\n-> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of self for the provided range.","sig":null,"attributes":[{"value":"/ Returns a slice of self for the provided range.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91816,"byte_end":91867,"line_start":206,"line_end":206,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91872,"byte_end":91875,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ This will increment the reference count for the underlying memory and","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91880,"byte_end":91953,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/ return a new `Bytes` handle set to the slice.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":91958,"byte_end":92007,"line_start":209,"line_end":209,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":92012,"byte_end":92015,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ This operation is `O(1)`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":92020,"byte_end":92049,"line_start":211,"line_end":211,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":92054,"byte_end":92057,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":92062,"byte_end":92076,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":92081,"byte_end":92084,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":92089,"byte_end":92096,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":92101,"byte_end":92122,"line_start":216,"line_end":216,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":92127,"byte_end":92130,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let a = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":92135,"byte_end":92180,"line_start":218,"line_end":218,"column_start":5,"column_end":50}},{"value":"/ let b = a.slice(2..5);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":92185,"byte_end":92211,"line_start":219,"line_end":219,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":92216,"byte_end":92219,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b[..], b\"llo\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":92224,"byte_end":92255,"line_start":221,"line_end":221,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":92260,"byte_end":92267,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":92272,"byte_end":92275,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":92280,"byte_end":92292,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":92297,"byte_end":92300,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Requires that `begin <= end` and `end <= self.len()`, otherwise slicing","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":92305,"byte_end":92380,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ will panic.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":92385,"byte_end":92400,"line_start":227,"line_end":227,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":94357,"byte_end":94366,"line_start":295,"line_end":295,"column_start":12,"column_end":21},"name":"slice_ref","qualname":"<Bytes>::slice_ref","value":"pub fn slice_ref(&Self, &[u8]) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of self that is equivalent to the given `subset`.","sig":null,"attributes":[{"value":"/ Returns a slice of self that is equivalent to the given `subset`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":93435,"byte_end":93504,"line_start":270,"line_end":270,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":93509,"byte_end":93512,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ When processing a `Bytes` buffer with other tools, one often gets a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":93517,"byte_end":93588,"line_start":272,"line_end":272,"column_start":5,"column_end":76}},{"value":"/ `&[u8]` which is in fact a slice of the `Bytes`, i.e. a subset of it.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":93593,"byte_end":93666,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/ This function turns that `&[u8]` into another `Bytes`, as if one had","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":93671,"byte_end":93743,"line_start":274,"line_end":274,"column_start":5,"column_end":77}},{"value":"/ called `self.slice()` with the offsets that correspond to `subset`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":93748,"byte_end":93819,"line_start":275,"line_end":275,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":93824,"byte_end":93827,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This operation is `O(1)`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":93832,"byte_end":93861,"line_start":277,"line_end":277,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":93866,"byte_end":93869,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":93874,"byte_end":93888,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":93893,"byte_end":93896,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":93901,"byte_end":93908,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":93913,"byte_end":93934,"line_start":282,"line_end":282,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":93939,"byte_end":93942,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let bytes = Bytes::from(&b\"012345678\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":93947,"byte_end":93994,"line_start":284,"line_end":284,"column_start":5,"column_end":52}},{"value":"/ let as_slice = bytes.as_ref();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":93999,"byte_end":94033,"line_start":285,"line_end":285,"column_start":5,"column_end":39}},{"value":"/ let subset = &as_slice[2..6];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":94038,"byte_end":94071,"line_start":286,"line_end":286,"column_start":5,"column_end":38}},{"value":"/ let subslice = bytes.slice_ref(&subset);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":94076,"byte_end":94120,"line_start":287,"line_end":287,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(&subslice[..], b\"2345\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":94125,"byte_end":94164,"line_start":288,"line_end":288,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":94169,"byte_end":94176,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":94181,"byte_end":94184,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":94189,"byte_end":94201,"line_start":291,"line_end":291,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":94206,"byte_end":94209,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Requires that the given `sub` slice is in fact contained within the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":94214,"byte_end":94285,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ `Bytes` buffer; otherwise this function will panic.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":94290,"byte_end":94345,"line_start":294,"line_end":294,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":96069,"byte_end":96078,"line_start":352,"line_end":352,"column_start":12,"column_end":21},"name":"split_off","qualname":"<Bytes>::split_off","value":"pub fn split_off(&mut Self, usize) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the bytes into two at the given index.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":95360,"byte_end":95409,"line_start":328,"line_end":328,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":95414,"byte_end":95417,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[0, at)`, and the returned `Bytes`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":95422,"byte_end":95497,"line_start":330,"line_end":330,"column_start":5,"column_end":80}},{"value":"/ contains elements `[at, len)`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":95502,"byte_end":95536,"line_start":331,"line_end":331,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":95541,"byte_end":95544,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count and","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":95549,"byte_end":95624,"line_start":333,"line_end":333,"column_start":5,"column_end":80}},{"value":"/ sets a few indices.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":95629,"byte_end":95652,"line_start":334,"line_end":334,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":95657,"byte_end":95660,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":95665,"byte_end":95679,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":95684,"byte_end":95687,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":95692,"byte_end":95699,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":95704,"byte_end":95725,"line_start":339,"line_end":339,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":95730,"byte_end":95733,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let mut a = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":95738,"byte_end":95787,"line_start":341,"line_end":341,"column_start":5,"column_end":54}},{"value":"/ let b = a.split_off(5);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":95792,"byte_end":95819,"line_start":342,"line_end":342,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":95824,"byte_end":95827,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\"hello\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":95832,"byte_end":95865,"line_start":344,"line_end":344,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(&b[..], b\" world\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":95870,"byte_end":95904,"line_start":345,"line_end":345,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":95909,"byte_end":95916,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":95921,"byte_end":95924,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":95929,"byte_end":95941,"line_start":348,"line_end":348,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":95946,"byte_end":95949,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > len`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":95954,"byte_end":95979,"line_start":350,"line_end":350,"column_start":5,"column_end":30}},{"value":"must_use = \"consider Bytes::truncate if you don't need the other half\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":95984,"byte_end":96057,"line_start":351,"line_end":351,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":97253,"byte_end":97261,"line_start":401,"line_end":401,"column_start":12,"column_end":20},"name":"split_to","qualname":"<Bytes>::split_to","value":"pub fn split_to(&mut Self, usize) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the bytes into two at the given index.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":96546,"byte_end":96595,"line_start":377,"line_end":377,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":96600,"byte_end":96603,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[at, len)`, and the returned","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":96608,"byte_end":96677,"line_start":379,"line_end":379,"column_start":5,"column_end":74}},{"value":"/ `Bytes` contains elements `[0, at)`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":96682,"byte_end":96722,"line_start":380,"line_end":380,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":96727,"byte_end":96730,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count and","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":96735,"byte_end":96810,"line_start":382,"line_end":382,"column_start":5,"column_end":80}},{"value":"/ sets a few indices.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":96815,"byte_end":96838,"line_start":383,"line_end":383,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":96843,"byte_end":96846,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":96851,"byte_end":96865,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":96870,"byte_end":96873,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":96878,"byte_end":96885,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":96890,"byte_end":96911,"line_start":388,"line_end":388,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":96916,"byte_end":96919,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ let mut a = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":96924,"byte_end":96973,"line_start":390,"line_end":390,"column_start":5,"column_end":54}},{"value":"/ let b = a.split_to(5);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":96978,"byte_end":97004,"line_start":391,"line_end":391,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":97009,"byte_end":97012,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\" world\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":97017,"byte_end":97051,"line_start":393,"line_end":393,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(&b[..], b\"hello\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":97056,"byte_end":97089,"line_start":394,"line_end":394,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":97094,"byte_end":97101,"line_start":395,"line_end":395,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":97106,"byte_end":97109,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":97114,"byte_end":97126,"line_start":397,"line_end":397,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":97131,"byte_end":97134,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > len`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":97139,"byte_end":97164,"line_start":399,"line_end":399,"column_start":5,"column_end":30}},{"value":"must_use = \"consider Bytes::advance if you don't need the other half\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":97169,"byte_end":97241,"line_start":400,"line_end":400,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":98339,"byte_end":98347,"line_start":446,"line_end":446,"column_start":12,"column_end":20},"name":"truncate","qualname":"<Bytes>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens the buffer, keeping the first `len` bytes and dropping the\n rest.","sig":null,"attributes":[{"value":"/ Shortens the buffer, keeping the first `len` bytes and dropping the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":97727,"byte_end":97798,"line_start":425,"line_end":425,"column_start":5,"column_end":76}},{"value":"/ rest.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":97803,"byte_end":97812,"line_start":426,"line_end":426,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":97817,"byte_end":97820,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the buffer's current length, this has no","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":97825,"byte_end":97894,"line_start":428,"line_end":428,"column_start":5,"column_end":74}},{"value":"/ effect.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":97899,"byte_end":97910,"line_start":429,"line_end":429,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":97915,"byte_end":97918,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ The [`split_off`] method can emulate `truncate`, but this causes the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":97923,"byte_end":97995,"line_start":431,"line_end":431,"column_start":5,"column_end":77}},{"value":"/ excess bytes to be returned instead of dropped.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":98000,"byte_end":98051,"line_start":432,"line_end":432,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":98056,"byte_end":98059,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":98064,"byte_end":98078,"line_start":434,"line_end":434,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":98083,"byte_end":98086,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":98091,"byte_end":98098,"line_start":436,"line_end":436,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":98103,"byte_end":98124,"line_start":437,"line_end":437,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":98129,"byte_end":98132,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":98137,"byte_end":98188,"line_start":439,"line_end":439,"column_start":5,"column_end":56}},{"value":"/ buf.truncate(5);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":98193,"byte_end":98213,"line_start":440,"line_end":440,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(buf, b\"hello\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":98218,"byte_end":98252,"line_start":441,"line_end":441,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":98257,"byte_end":98264,"line_start":442,"line_end":442,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":98269,"byte_end":98272,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ [`split_off`]: #method.split_off","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":98277,"byte_end":98313,"line_start":444,"line_end":444,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":98318,"byte_end":98327,"line_start":445,"line_end":445,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":99177,"byte_end":99182,"line_start":473,"line_end":473,"column_start":12,"column_end":17},"name":"clear","qualname":"<Bytes>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, removing all data.","sig":null,"attributes":[{"value":"/ Clears the buffer, removing all data.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":98907,"byte_end":98948,"line_start":461,"line_end":461,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":98953,"byte_end":98956,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":98961,"byte_end":98975,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":98980,"byte_end":98983,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":98988,"byte_end":98995,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":99000,"byte_end":99021,"line_start":466,"line_end":466,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":99026,"byte_end":99029,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Bytes::from(&b\"hello world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":99034,"byte_end":99085,"line_start":468,"line_end":468,"column_start":5,"column_end":56}},{"value":"/ buf.clear();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":99090,"byte_end":99106,"line_start":469,"line_end":469,"column_start":5,"column_end":21}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":99111,"byte_end":99139,"line_start":470,"line_end":470,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":99144,"byte_end":99151,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":99156,"byte_end":99165,"line_start":472,"line_end":472,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":544},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":118137,"byte_end":118145,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"BytesMut","qualname":"::bytes_mut::BytesMut","value":"BytesMut {  }","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548}],"decl_id":null,"docs":" A unique reference to a contiguous slice of memory.","sig":null,"attributes":[{"value":"/ A unique reference to a contiguous slice of memory.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":116907,"byte_end":116962,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":116963,"byte_end":116966,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ `BytesMut` represents a unique view into a potentially shared memory region.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":116967,"byte_end":117047,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ Given the uniqueness guarantee, owners of `BytesMut` handles are able to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117048,"byte_end":117124,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ mutate the memory.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117125,"byte_end":117147,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117148,"byte_end":117151,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ `BytesMut` can be thought of as containing a `buf: Arc<Vec<u8>>`, an offset","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117152,"byte_end":117231,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ into `buf`, a slice length, and a guarantee that no other `BytesMut` for the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117232,"byte_end":117312,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ same `buf` overlaps with its slice. That guarantee means that a write lock","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117313,"byte_end":117391,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ is not required.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117392,"byte_end":117412,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117413,"byte_end":117416,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Growth","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117417,"byte_end":117429,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117430,"byte_end":117433,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ `BytesMut`'s `BufMut` implementation will implicitly grow its buffer as","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117434,"byte_end":117509,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ necessary. However, explicitly reserving the required space up-front before","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117510,"byte_end":117589,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ a series of inserts will be more efficient.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117590,"byte_end":117637,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117638,"byte_end":117641,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117642,"byte_end":117656,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117657,"byte_end":117660,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117661,"byte_end":117668,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117669,"byte_end":117703,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117704,"byte_end":117707,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let mut buf = BytesMut::with_capacity(64);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117708,"byte_end":117754,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117755,"byte_end":117758,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ buf.put_u8(b'h');","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117759,"byte_end":117780,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/ buf.put_u8(b'e');","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117781,"byte_end":117802,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/ buf.put(&b\"llo\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117803,"byte_end":117828,"line_start":47,"line_end":47,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117829,"byte_end":117832,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&buf[..], b\"hello\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117833,"byte_end":117868,"line_start":49,"line_end":49,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117869,"byte_end":117872,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ // Freeze the buffer so that it can be shared","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117873,"byte_end":117922,"line_start":51,"line_end":51,"column_start":1,"column_end":50}},{"value":"/ let a = buf.freeze();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117923,"byte_end":117948,"line_start":52,"line_end":52,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117949,"byte_end":117952,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ // This does not allocate, instead `b` points to the same memory.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":117953,"byte_end":118022,"line_start":54,"line_end":54,"column_start":1,"column_end":70}},{"value":"/ let b = a.clone();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":118023,"byte_end":118045,"line_start":55,"line_end":55,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":118046,"byte_end":118049,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&a[..], b\"hello\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":118050,"byte_end":118083,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(&b[..], b\"hello\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":118084,"byte_end":118117,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":118118,"byte_end":118125,"line_start":59,"line_end":59,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120869,"byte_end":120882,"line_start":141,"line_end":141,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BytesMut>::with_capacity","value":"pub fn with_capacity(usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesMut` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BytesMut` with the specified capacity.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120149,"byte_end":120206,"line_start":118,"line_end":118,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120211,"byte_end":120214,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The returned `BytesMut` will be able to hold at least `capacity` bytes","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120219,"byte_end":120293,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ without reallocating.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120298,"byte_end":120323,"line_start":121,"line_end":121,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120328,"byte_end":120331,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ It is important to note that this function does not specify the length","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120336,"byte_end":120410,"line_start":123,"line_end":123,"column_start":5,"column_end":79}},{"value":"/ of the returned `BytesMut`, but only the capacity.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120415,"byte_end":120469,"line_start":124,"line_end":124,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120474,"byte_end":120477,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120482,"byte_end":120496,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120501,"byte_end":120504,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120509,"byte_end":120516,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120521,"byte_end":120555,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120560,"byte_end":120563,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let mut bytes = BytesMut::with_capacity(64);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120568,"byte_end":120616,"line_start":131,"line_end":131,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120621,"byte_end":120624,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ // `bytes` contains no data, even though there is capacity","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120629,"byte_end":120691,"line_start":133,"line_end":133,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(bytes.len(), 0);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120696,"byte_end":120727,"line_start":134,"line_end":134,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120732,"byte_end":120735,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ bytes.put(&b\"hello world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120740,"byte_end":120775,"line_start":136,"line_end":136,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120780,"byte_end":120783,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&bytes[..], b\"hello world\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120788,"byte_end":120831,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120836,"byte_end":120843,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120848,"byte_end":120857,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121481,"byte_end":121484,"line_start":165,"line_end":165,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesMut>::new","value":"pub fn new() -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesMut` with default capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BytesMut` with default capacity.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120982,"byte_end":121033,"line_start":145,"line_end":145,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121038,"byte_end":121041,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Resulting object has length 0 and unspecified capacity.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121046,"byte_end":121105,"line_start":147,"line_end":147,"column_start":5,"column_end":64}},{"value":"/ This function does not allocate.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121110,"byte_end":121146,"line_start":148,"line_end":148,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121151,"byte_end":121154,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121159,"byte_end":121173,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121178,"byte_end":121181,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121186,"byte_end":121193,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121198,"byte_end":121232,"line_start":153,"line_end":153,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121237,"byte_end":121240,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ let mut bytes = BytesMut::new();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121245,"byte_end":121281,"line_start":155,"line_end":155,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121286,"byte_end":121289,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(0, bytes.len());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121294,"byte_end":121325,"line_start":157,"line_end":157,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121330,"byte_end":121333,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ bytes.reserve(2);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121338,"byte_end":121359,"line_start":159,"line_end":159,"column_start":5,"column_end":26}},{"value":"/ bytes.put_slice(b\"xy\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121364,"byte_end":121391,"line_start":160,"line_end":160,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121396,"byte_end":121399,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b\"xy\"[..], &bytes[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121404,"byte_end":121443,"line_start":162,"line_end":162,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121448,"byte_end":121455,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121460,"byte_end":121469,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121809,"byte_end":121812,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"len","qualname":"<BytesMut>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in this `BytesMut`.","sig":null,"attributes":[{"value":"/ Returns the number of bytes contained in this `BytesMut`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121547,"byte_end":121608,"line_start":169,"line_end":169,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121613,"byte_end":121616,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121621,"byte_end":121635,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121640,"byte_end":121643,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121648,"byte_end":121655,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121660,"byte_end":121684,"line_start":174,"line_end":174,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121689,"byte_end":121692,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let b = BytesMut::from(&b\"hello\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121697,"byte_end":121739,"line_start":176,"line_end":176,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(b.len(), 5);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121744,"byte_end":121771,"line_start":177,"line_end":177,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121776,"byte_end":121783,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121788,"byte_end":121797,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122110,"byte_end":122118,"line_start":195,"line_end":195,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BytesMut>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `BytesMut` has a length of 0.","sig":null,"attributes":[{"value":"/ Returns true if the `BytesMut` has a length of 0.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121859,"byte_end":121912,"line_start":184,"line_end":184,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121917,"byte_end":121920,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121925,"byte_end":121939,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121944,"byte_end":121947,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121952,"byte_end":121959,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121964,"byte_end":121988,"line_start":189,"line_end":189,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":121993,"byte_end":121996,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ let b = BytesMut::with_capacity(64);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122001,"byte_end":122041,"line_start":191,"line_end":191,"column_start":5,"column_end":45}},{"value":"/ assert!(b.is_empty());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122046,"byte_end":122072,"line_start":192,"line_end":192,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122077,"byte_end":122084,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122089,"byte_end":122098,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122451,"byte_end":122459,"line_start":210,"line_end":210,"column_start":12,"column_end":20},"name":"capacity","qualname":"<BytesMut>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes the `BytesMut` can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of bytes the `BytesMut` can hold without reallocating.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122169,"byte_end":122246,"line_start":199,"line_end":199,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122251,"byte_end":122254,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122259,"byte_end":122273,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122278,"byte_end":122281,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122286,"byte_end":122293,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122298,"byte_end":122322,"line_start":204,"line_end":204,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122327,"byte_end":122330,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ let b = BytesMut::with_capacity(64);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122335,"byte_end":122375,"line_start":206,"line_end":206,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(b.capacity(), 64);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122380,"byte_end":122413,"line_start":207,"line_end":207,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122418,"byte_end":122425,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122430,"byte_end":122439,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":123275,"byte_end":123281,"line_start":239,"line_end":239,"column_start":12,"column_end":18},"name":"freeze","qualname":"<BytesMut>::freeze","value":"pub fn freeze(Self) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into an immutable `Bytes`.","sig":null,"attributes":[{"value":"/ Converts `self` into an immutable `Bytes`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122506,"byte_end":122552,"line_start":214,"line_end":214,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122557,"byte_end":122560,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The conversion is zero cost and is used to indicate that the slice","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122565,"byte_end":122635,"line_start":216,"line_end":216,"column_start":5,"column_end":75}},{"value":"/ referenced by the handle will no longer be mutated. Once the conversion","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122640,"byte_end":122715,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/ is done, the handle can be cloned and shared across threads.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122720,"byte_end":122784,"line_start":218,"line_end":218,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122789,"byte_end":122792,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122797,"byte_end":122811,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122816,"byte_end":122819,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122824,"byte_end":122831,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122836,"byte_end":122870,"line_start":223,"line_end":223,"column_start":5,"column_end":39}},{"value":"/ use std::thread;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122875,"byte_end":122895,"line_start":224,"line_end":224,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122900,"byte_end":122903,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let mut b = BytesMut::with_capacity(64);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122908,"byte_end":122952,"line_start":226,"line_end":226,"column_start":5,"column_end":49}},{"value":"/ b.put(&b\"hello world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122957,"byte_end":122988,"line_start":227,"line_end":227,"column_start":5,"column_end":36}},{"value":"/ let b1 = b.freeze();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":122993,"byte_end":123017,"line_start":228,"line_end":228,"column_start":5,"column_end":29}},{"value":"/ let b2 = b1.clone();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":123022,"byte_end":123046,"line_start":229,"line_end":229,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":123051,"byte_end":123054,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ let th = thread::spawn(move || {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":123059,"byte_end":123095,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(&b1[..], b\"hello world\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":123100,"byte_end":123144,"line_start":232,"line_end":232,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":123149,"byte_end":123156,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":123161,"byte_end":123164,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b2[..], b\"hello world\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":123169,"byte_end":123209,"line_start":235,"line_end":235,"column_start":5,"column_end":45}},{"value":"/ th.join().unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":123214,"byte_end":123237,"line_start":236,"line_end":236,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":123242,"byte_end":123249,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":123254,"byte_end":123263,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124806,"byte_end":124815,"line_start":288,"line_end":288,"column_start":12,"column_end":21},"name":"split_off","qualname":"<BytesMut>::split_off","value":"pub fn split_off(&mut Self, usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the bytes into two at the given index.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124021,"byte_end":124070,"line_start":261,"line_end":261,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124075,"byte_end":124078,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[0, at)`, and the returned","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124083,"byte_end":124150,"line_start":263,"line_end":263,"column_start":5,"column_end":72}},{"value":"/ `BytesMut` contains elements `[at, capacity)`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124155,"byte_end":124205,"line_start":264,"line_end":264,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124210,"byte_end":124213,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124218,"byte_end":124289,"line_start":266,"line_end":266,"column_start":5,"column_end":76}},{"value":"/ and sets a few indices.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124294,"byte_end":124321,"line_start":267,"line_end":267,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124326,"byte_end":124329,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124334,"byte_end":124348,"line_start":269,"line_end":269,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124353,"byte_end":124356,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124361,"byte_end":124368,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124373,"byte_end":124397,"line_start":272,"line_end":272,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124402,"byte_end":124405,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let mut a = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124410,"byte_end":124462,"line_start":274,"line_end":274,"column_start":5,"column_end":57}},{"value":"/ let mut b = a.split_off(5);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124467,"byte_end":124498,"line_start":275,"line_end":275,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124503,"byte_end":124506,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ a[0] = b'j';","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124511,"byte_end":124527,"line_start":277,"line_end":277,"column_start":5,"column_end":21}},{"value":"/ b[0] = b'!';","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124532,"byte_end":124548,"line_start":278,"line_end":278,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124553,"byte_end":124556,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\"jello\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124561,"byte_end":124594,"line_start":280,"line_end":280,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(&b[..], b\"!world\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124599,"byte_end":124633,"line_start":281,"line_end":281,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124638,"byte_end":124645,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124650,"byte_end":124653,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124658,"byte_end":124670,"line_start":284,"line_end":284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124675,"byte_end":124678,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > capacity`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124683,"byte_end":124713,"line_start":286,"line_end":286,"column_start":5,"column_end":35}},{"value":"must_use = \"consider BytesMut::truncate if you don't need the other half\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":124718,"byte_end":124794,"line_start":287,"line_end":287,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126058,"byte_end":126063,"line_start":329,"line_end":329,"column_start":12,"column_end":17},"name":"split","qualname":"<BytesMut>::split","value":"pub fn split(&mut Self) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Removes the bytes from the current view, returning them in a new\n `BytesMut` handle.","sig":null,"attributes":[{"value":"/ Removes the bytes from the current view, returning them in a new","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125182,"byte_end":125250,"line_start":303,"line_end":303,"column_start":5,"column_end":73}},{"value":"/ `BytesMut` handle.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125255,"byte_end":125277,"line_start":304,"line_end":304,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125282,"byte_end":125285,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Afterwards, `self` will be empty, but will retain any additional","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125290,"byte_end":125358,"line_start":306,"line_end":306,"column_start":5,"column_end":73}},{"value":"/ capacity that it had before the operation. This is identical to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125363,"byte_end":125430,"line_start":307,"line_end":307,"column_start":5,"column_end":72}},{"value":"/ `self.split_to(self.len())`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125435,"byte_end":125467,"line_start":308,"line_end":308,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125472,"byte_end":125475,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count and","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125480,"byte_end":125555,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ sets a few indices.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125560,"byte_end":125583,"line_start":311,"line_end":311,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125588,"byte_end":125591,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125596,"byte_end":125610,"line_start":313,"line_end":313,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125615,"byte_end":125618,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125623,"byte_end":125630,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125635,"byte_end":125669,"line_start":316,"line_end":316,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125674,"byte_end":125677,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::with_capacity(1024);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125682,"byte_end":125730,"line_start":318,"line_end":318,"column_start":5,"column_end":53}},{"value":"/ buf.put(&b\"hello world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125735,"byte_end":125768,"line_start":319,"line_end":319,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125773,"byte_end":125776,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ let other = buf.split();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125781,"byte_end":125809,"line_start":321,"line_end":321,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125814,"byte_end":125817,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125822,"byte_end":125850,"line_start":323,"line_end":323,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(1013, buf.capacity());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125855,"byte_end":125892,"line_start":324,"line_end":324,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125897,"byte_end":125900,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(other, b\"hello world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125905,"byte_end":125947,"line_start":326,"line_end":326,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125952,"byte_end":125959,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"must_use =\n  \"consider BytesMut::advance(len()) if you don't need the other half\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":125964,"byte_end":126046,"line_start":328,"line_end":328,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126931,"byte_end":126939,"line_start":361,"line_end":361,"column_start":12,"column_end":20},"name":"split_to","qualname":"<BytesMut>::split_to","value":"pub fn split_to(&mut Self, usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Splits the buffer into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the buffer into two at the given index.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126157,"byte_end":126207,"line_start":334,"line_end":334,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126212,"byte_end":126215,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ Afterwards `self` contains elements `[at, len)`, and the returned `BytesMut`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126220,"byte_end":126300,"line_start":336,"line_end":336,"column_start":5,"column_end":85}},{"value":"/ contains elements `[0, at)`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126305,"byte_end":126337,"line_start":337,"line_end":337,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126342,"byte_end":126345,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ This is an `O(1)` operation that just increases the reference count and","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126350,"byte_end":126425,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ sets a few indices.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126430,"byte_end":126453,"line_start":340,"line_end":340,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126458,"byte_end":126461,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126466,"byte_end":126480,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126485,"byte_end":126488,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126493,"byte_end":126500,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126505,"byte_end":126529,"line_start":345,"line_end":345,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126534,"byte_end":126537,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let mut a = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126542,"byte_end":126594,"line_start":347,"line_end":347,"column_start":5,"column_end":57}},{"value":"/ let mut b = a.split_to(5);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126599,"byte_end":126629,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126634,"byte_end":126637,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ a[0] = b'!';","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126642,"byte_end":126658,"line_start":350,"line_end":350,"column_start":5,"column_end":21}},{"value":"/ b[0] = b'j';","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126663,"byte_end":126679,"line_start":351,"line_end":351,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126684,"byte_end":126687,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&a[..], b\"!world\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126692,"byte_end":126726,"line_start":353,"line_end":353,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(&b[..], b\"jello\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126731,"byte_end":126764,"line_start":354,"line_end":354,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126769,"byte_end":126776,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126781,"byte_end":126784,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126789,"byte_end":126801,"line_start":357,"line_end":357,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126806,"byte_end":126809,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ Panics if `at > len`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126814,"byte_end":126839,"line_start":359,"line_end":359,"column_start":5,"column_end":30}},{"value":"must_use = \"consider BytesMut::advance if you don't need the other half\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":126844,"byte_end":126919,"line_start":360,"line_end":360,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":127900,"byte_end":127908,"line_start":397,"line_end":397,"column_start":12,"column_end":20},"name":"truncate","qualname":"<BytesMut>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens the buffer, keeping the first `len` bytes and dropping the\n rest.","sig":null,"attributes":[{"value":"/ Shortens the buffer, keeping the first `len` bytes and dropping the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":127296,"byte_end":127367,"line_start":377,"line_end":377,"column_start":5,"column_end":76}},{"value":"/ rest.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":127372,"byte_end":127381,"line_start":378,"line_end":378,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":127386,"byte_end":127389,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the buffer's current length, this has no","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":127394,"byte_end":127463,"line_start":380,"line_end":380,"column_start":5,"column_end":74}},{"value":"/ effect.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":127468,"byte_end":127479,"line_start":381,"line_end":381,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":127484,"byte_end":127487,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ The [`split_off`] method can emulate `truncate`, but this causes the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":127492,"byte_end":127564,"line_start":383,"line_end":383,"column_start":5,"column_end":77}},{"value":"/ excess bytes to be returned instead of dropped.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":127569,"byte_end":127620,"line_start":384,"line_end":384,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":127625,"byte_end":127628,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":127633,"byte_end":127647,"line_start":386,"line_end":386,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":127652,"byte_end":127655,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":127660,"byte_end":127667,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":127672,"byte_end":127696,"line_start":389,"line_end":389,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":127701,"byte_end":127704,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":127709,"byte_end":127763,"line_start":391,"line_end":391,"column_start":5,"column_end":59}},{"value":"/ buf.truncate(5);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":127768,"byte_end":127788,"line_start":392,"line_end":392,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(buf, b\"hello\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":127793,"byte_end":127827,"line_start":393,"line_end":393,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":127832,"byte_end":127839,"line_start":394,"line_end":394,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":127844,"byte_end":127847,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ [`split_off`]: #method.split_off","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":127852,"byte_end":127888,"line_start":396,"line_end":396,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128318,"byte_end":128323,"line_start":416,"line_end":416,"column_start":12,"column_end":17},"name":"clear","qualname":"<BytesMut>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, removing all data.","sig":null,"attributes":[{"value":"/ Clears the buffer, removing all data.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128056,"byte_end":128097,"line_start":405,"line_end":405,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128102,"byte_end":128105,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128110,"byte_end":128124,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128129,"byte_end":128132,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128137,"byte_end":128144,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128149,"byte_end":128173,"line_start":410,"line_end":410,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128178,"byte_end":128181,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128186,"byte_end":128240,"line_start":412,"line_end":412,"column_start":5,"column_end":59}},{"value":"/ buf.clear();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128245,"byte_end":128261,"line_start":413,"line_end":413,"column_start":5,"column_end":21}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128266,"byte_end":128294,"line_start":414,"line_end":414,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128299,"byte_end":128306,"line_start":415,"line_end":415,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":129048,"byte_end":129054,"line_start":442,"line_end":442,"column_start":12,"column_end":18},"name":"resize","qualname":"<BytesMut>::resize","value":"pub fn resize(&mut Self, usize, u8)","parent":null,"children":[],"decl_id":null,"docs":" Resizes the buffer so that `len` is equal to `new_len`.","sig":null,"attributes":[{"value":"/ Resizes the buffer so that `len` is equal to `new_len`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128374,"byte_end":128433,"line_start":420,"line_end":420,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128438,"byte_end":128441,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ If `new_len` is greater than `len`, the buffer is extended by the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128446,"byte_end":128515,"line_start":422,"line_end":422,"column_start":5,"column_end":74}},{"value":"/ difference with each additional byte set to `value`. If `new_len` is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128520,"byte_end":128592,"line_start":423,"line_end":423,"column_start":5,"column_end":77}},{"value":"/ less than `len`, the buffer is simply truncated.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128597,"byte_end":128649,"line_start":424,"line_end":424,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128654,"byte_end":128657,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128662,"byte_end":128676,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128681,"byte_end":128684,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128689,"byte_end":128696,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128701,"byte_end":128725,"line_start":429,"line_end":429,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128730,"byte_end":128733,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128738,"byte_end":128772,"line_start":431,"line_end":431,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128777,"byte_end":128780,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ buf.resize(3, 0x1);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128785,"byte_end":128808,"line_start":433,"line_end":433,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(&buf[..], &[0x1, 0x1, 0x1]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128813,"byte_end":128856,"line_start":434,"line_end":434,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128861,"byte_end":128864,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ buf.resize(2, 0x2);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128869,"byte_end":128892,"line_start":436,"line_end":436,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(&buf[..], &[0x1, 0x1]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128897,"byte_end":128935,"line_start":437,"line_end":437,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128940,"byte_end":128943,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ buf.resize(4, 0x3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128948,"byte_end":128971,"line_start":439,"line_end":439,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(&buf[..], &[0x1, 0x1, 0x3, 0x3]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":128976,"byte_end":129024,"line_start":440,"line_end":440,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":129029,"byte_end":129036,"line_start":441,"line_end":441,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":130127,"byte_end":130134,"line_start":483,"line_end":483,"column_start":19,"column_end":26},"name":"set_len","qualname":"<BytesMut>::set_len","value":"pub unsafe fn set_len(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the length of the buffer.","sig":null,"attributes":[{"value":"/ Sets the length of the buffer.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":129497,"byte_end":129531,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":129536,"byte_end":129539,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ This will explicitly set the size of the buffer without actually","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":129544,"byte_end":129612,"line_start":459,"line_end":459,"column_start":5,"column_end":73}},{"value":"/ modifying the data, so it is up to the caller to ensure that the data","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":129617,"byte_end":129690,"line_start":460,"line_end":460,"column_start":5,"column_end":78}},{"value":"/ has been initialized.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":129695,"byte_end":129720,"line_start":461,"line_end":461,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":129725,"byte_end":129728,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":129733,"byte_end":129747,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":129752,"byte_end":129755,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":129760,"byte_end":129767,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":129772,"byte_end":129796,"line_start":466,"line_end":466,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":129801,"byte_end":129804,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ let mut b = BytesMut::from(&b\"hello world\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":129809,"byte_end":129861,"line_start":468,"line_end":468,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":129866,"byte_end":129869,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":129874,"byte_end":129886,"line_start":470,"line_end":470,"column_start":5,"column_end":17}},{"value":"/     b.set_len(5);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":129891,"byte_end":129912,"line_start":471,"line_end":471,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":129917,"byte_end":129922,"line_start":472,"line_end":472,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":129927,"byte_end":129930,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b[..], b\"hello\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":129935,"byte_end":129968,"line_start":474,"line_end":474,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":129973,"byte_end":129976,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":129981,"byte_end":129993,"line_start":476,"line_end":476,"column_start":5,"column_end":17}},{"value":"/     b.set_len(11);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":129998,"byte_end":130020,"line_start":477,"line_end":477,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":130025,"byte_end":130030,"line_start":478,"line_end":478,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":130035,"byte_end":130038,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&b[..], b\"hello world\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":130043,"byte_end":130082,"line_start":480,"line_end":480,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":130087,"byte_end":130094,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":130099,"byte_end":130108,"line_start":482,"line_end":482,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131930,"byte_end":131937,"line_start":538,"line_end":538,"column_start":12,"column_end":19},"name":"reserve","qualname":"<BytesMut>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more bytes to be inserted\n into the given `BytesMut`.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more bytes to be inserted","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":130260,"byte_end":130333,"line_start":488,"line_end":488,"column_start":5,"column_end":78}},{"value":"/ into the given `BytesMut`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":130338,"byte_end":130368,"line_start":489,"line_end":489,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":130373,"byte_end":130376,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ More than `additional` bytes may be reserved in order to avoid frequent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":130381,"byte_end":130456,"line_start":491,"line_end":491,"column_start":5,"column_end":80}},{"value":"/ reallocations. A call to `reserve` may result in an allocation.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":130461,"byte_end":130528,"line_start":492,"line_end":492,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":130533,"byte_end":130536,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ Before allocating new buffer space, the function will attempt to reclaim","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":130541,"byte_end":130617,"line_start":494,"line_end":494,"column_start":5,"column_end":81}},{"value":"/ space in the existing buffer. If the current handle references a small","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":130622,"byte_end":130696,"line_start":495,"line_end":495,"column_start":5,"column_end":79}},{"value":"/ view in the original buffer and all other handles have been dropped,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":130701,"byte_end":130773,"line_start":496,"line_end":496,"column_start":5,"column_end":77}},{"value":"/ and the requested capacity is less than or equal to the existing","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":130778,"byte_end":130846,"line_start":497,"line_end":497,"column_start":5,"column_end":73}},{"value":"/ buffer's capacity, then the current view will be copied to the front of","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":130851,"byte_end":130926,"line_start":498,"line_end":498,"column_start":5,"column_end":80}},{"value":"/ the buffer and the handle will take ownership of the full buffer.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":130931,"byte_end":131000,"line_start":499,"line_end":499,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131005,"byte_end":131008,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131013,"byte_end":131027,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131032,"byte_end":131035,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ In the following example, a new buffer is allocated.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131040,"byte_end":131096,"line_start":503,"line_end":503,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131101,"byte_end":131104,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131109,"byte_end":131116,"line_start":505,"line_end":505,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131121,"byte_end":131145,"line_start":506,"line_end":506,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131150,"byte_end":131153,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::from(&b\"hello\"[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131158,"byte_end":131206,"line_start":508,"line_end":508,"column_start":5,"column_end":53}},{"value":"/ buf.reserve(64);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131211,"byte_end":131231,"line_start":509,"line_end":509,"column_start":5,"column_end":25}},{"value":"/ assert!(buf.capacity() >= 69);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131236,"byte_end":131270,"line_start":510,"line_end":510,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131275,"byte_end":131282,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131287,"byte_end":131290,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ In the following example, the existing buffer is reclaimed.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131295,"byte_end":131358,"line_start":513,"line_end":513,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131363,"byte_end":131366,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131371,"byte_end":131378,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/ use bytes::{BytesMut, BufMut};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131383,"byte_end":131417,"line_start":516,"line_end":516,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131422,"byte_end":131425,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::with_capacity(128);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131430,"byte_end":131477,"line_start":518,"line_end":518,"column_start":5,"column_end":52}},{"value":"/ buf.put(&[0; 64][..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131482,"byte_end":131508,"line_start":519,"line_end":519,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131513,"byte_end":131516,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ let ptr = buf.as_ptr();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131521,"byte_end":131548,"line_start":521,"line_end":521,"column_start":5,"column_end":32}},{"value":"/ let other = buf.split();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131553,"byte_end":131581,"line_start":522,"line_end":522,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131586,"byte_end":131589,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131594,"byte_end":131622,"line_start":524,"line_end":524,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(buf.capacity(), 64);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131627,"byte_end":131662,"line_start":525,"line_end":525,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131667,"byte_end":131670,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ drop(other);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131675,"byte_end":131691,"line_start":527,"line_end":527,"column_start":5,"column_end":21}},{"value":"/ buf.reserve(128);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131696,"byte_end":131717,"line_start":528,"line_end":528,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131722,"byte_end":131725,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buf.capacity(), 128);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131730,"byte_end":131766,"line_start":530,"line_end":530,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(buf.as_ptr(), ptr);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131771,"byte_end":131805,"line_start":531,"line_end":531,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131810,"byte_end":131817,"line_start":532,"line_end":532,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131822,"byte_end":131825,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131830,"byte_end":131842,"line_start":534,"line_end":534,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131847,"byte_end":131850,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity overflows `usize`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131855,"byte_end":131904,"line_start":536,"line_end":536,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":131909,"byte_end":131918,"line_start":537,"line_end":537,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":137359,"byte_end":137376,"line_start":682,"line_end":682,"column_start":12,"column_end":29},"name":"extend_from_slice","qualname":"<BytesMut>::extend_from_slice","value":"pub fn extend_from_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Appends given bytes to this `BytesMut`.","sig":null,"attributes":[{"value":"/ Appends given bytes to this `BytesMut`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":136917,"byte_end":136960,"line_start":666,"line_end":666,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":136965,"byte_end":136968,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ If this `BytesMut` object does not have enough capacity, it is resized","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":136973,"byte_end":137047,"line_start":668,"line_end":668,"column_start":5,"column_end":79}},{"value":"/ first.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":137052,"byte_end":137062,"line_start":669,"line_end":669,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":137067,"byte_end":137070,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":137075,"byte_end":137089,"line_start":671,"line_end":671,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":137094,"byte_end":137097,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":137102,"byte_end":137109,"line_start":673,"line_end":673,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":137114,"byte_end":137138,"line_start":674,"line_end":674,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":137143,"byte_end":137146,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::with_capacity(0);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":137151,"byte_end":137196,"line_start":676,"line_end":676,"column_start":5,"column_end":50}},{"value":"/ buf.extend_from_slice(b\"aaabbb\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":137201,"byte_end":137238,"line_start":677,"line_end":677,"column_start":5,"column_end":42}},{"value":"/ buf.extend_from_slice(b\"cccddd\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":137243,"byte_end":137280,"line_start":678,"line_end":678,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":137285,"byte_end":137288,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"aaabbbcccddd\", &buf[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":137293,"byte_end":137335,"line_start":680,"line_end":680,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":137340,"byte_end":137347,"line_start":681,"line_end":681,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":138601,"byte_end":138608,"line_start":722,"line_end":722,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<BytesMut>::unsplit","value":"pub fn unsplit(&mut Self, BytesMut)","parent":null,"children":[],"decl_id":null,"docs":" Absorbs a `BytesMut` that was previously split off.","sig":null,"attributes":[{"value":"/ Absorbs a `BytesMut` that was previously split off.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":137774,"byte_end":137829,"line_start":699,"line_end":699,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":137834,"byte_end":137837,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ If the two `BytesMut` objects were previously contiguous, i.e., if","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":137842,"byte_end":137912,"line_start":701,"line_end":701,"column_start":5,"column_end":75}},{"value":"/ `other` was created by calling `split_off` on this `BytesMut`, then","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":137917,"byte_end":137988,"line_start":702,"line_end":702,"column_start":5,"column_end":76}},{"value":"/ this is an `O(1)` operation that just decreases a reference","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":137993,"byte_end":138056,"line_start":703,"line_end":703,"column_start":5,"column_end":68}},{"value":"/ count and sets a few indices. Otherwise this method degenerates to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":138061,"byte_end":138131,"line_start":704,"line_end":704,"column_start":5,"column_end":75}},{"value":"/ `self.extend_from_slice(other.as_ref())`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":138136,"byte_end":138181,"line_start":705,"line_end":705,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":138186,"byte_end":138189,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":138194,"byte_end":138208,"line_start":707,"line_end":707,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":138213,"byte_end":138216,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":138221,"byte_end":138228,"line_start":709,"line_end":709,"column_start":5,"column_end":12}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":138233,"byte_end":138257,"line_start":710,"line_end":710,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":138262,"byte_end":138265,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::with_capacity(64);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":138270,"byte_end":138316,"line_start":712,"line_end":712,"column_start":5,"column_end":51}},{"value":"/ buf.extend_from_slice(b\"aaabbbcccddd\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":138321,"byte_end":138364,"line_start":713,"line_end":713,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":138369,"byte_end":138372,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ let split = buf.split_off(6);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":138377,"byte_end":138410,"line_start":715,"line_end":715,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(b\"aaabbb\", &buf[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":138415,"byte_end":138451,"line_start":716,"line_end":716,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(b\"cccddd\", &split[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":138456,"byte_end":138494,"line_start":717,"line_end":717,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":138499,"byte_end":138502,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ buf.unsplit(split);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":138507,"byte_end":138530,"line_start":719,"line_end":719,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(b\"aaabbbcccddd\", &buf[..]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":138535,"byte_end":138577,"line_start":720,"line_end":720,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":138582,"byte_end":138589,"line_start":721,"line_end":721,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":32754,"byte_end":32757,"line_start":1014,"line_end":1014,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":33059,"byte_end":33065,"line_start":1035,"line_end":1035,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":33646,"byte_end":33652,"line_start":1065,"line_end":1065,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":60333,"byte_end":60336,"line_start":990,"line_end":990,"column_start":44,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":60936,"byte_end":60939,"line_start":1014,"line_end":1014,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63489,"byte_end":63494,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":65655,"byte_end":65660,"line_start":132,"line_end":132,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":66556,"byte_end":66561,"line_start":175,"line_end":175,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":67316,"byte_end":67321,"line_start":211,"line_end":211,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":68104,"byte_end":68112,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":70152,"byte_end":70160,"line_start":112,"line_end":112,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":70560,"byte_end":70568,"line_start":132,"line_end":132,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":70917,"byte_end":70922,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":72074,"byte_end":72079,"line_start":59,"line_end":59,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":72925,"byte_end":72931,"line_start":19,"line_end":19,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":74019,"byte_end":74025,"line_start":65,"line_end":65,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":74278,"byte_end":74284,"line_start":74,"line_end":74,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":74879,"byte_end":74883,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":77534,"byte_end":77538,"line_start":132,"line_end":132,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":78749,"byte_end":78760,"line_start":24,"line_end":24,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81952,"byte_end":81963,"line_start":141,"line_end":141,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/vec_deque.rs","byte_start":83076,"byte_end":83084,"line_start":5,"line_end":5,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":83804,"byte_end":83810,"line_start":19,"line_end":19,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":85182,"byte_end":85188,"line_start":77,"line_end":77,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":89488,"byte_end":89493,"line_start":109,"line_end":109,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":99985,"byte_end":99990,"line_start":509,"line_end":509,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":100015,"byte_end":100020,"line_start":510,"line_end":510,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":100039,"byte_end":100044,"line_start":512,"line_end":512,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":100184,"byte_end":100189,"line_start":519,"line_end":519,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":100330,"byte_end":100335,"line_start":526,"line_end":526,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":101061,"byte_end":101066,"line_start":562,"line_end":562,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":101193,"byte_end":101198,"line_start":571,"line_end":571,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":101300,"byte_end":101305,"line_start":578,"line_end":578,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":101454,"byte_end":101459,"line_start":587,"line_end":587,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":101549,"byte_end":101554,"line_start":593,"line_end":593,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":101919,"byte_end":101924,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":102077,"byte_end":102082,"line_start":619,"line_end":619,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":102200,"byte_end":102205,"line_start":625,"line_end":625,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":102352,"byte_end":102357,"line_start":631,"line_end":631,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":102479,"byte_end":102484,"line_start":637,"line_end":637,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":102514,"byte_end":102519,"line_start":639,"line_end":639,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":102631,"byte_end":102636,"line_start":645,"line_end":645,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":103062,"byte_end":103067,"line_start":663,"line_end":663,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":103188,"byte_end":103193,"line_start":669,"line_end":669,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":103642,"byte_end":103647,"line_start":687,"line_end":687,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":103760,"byte_end":103765,"line_start":693,"line_end":693,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":103921,"byte_end":103924,"line_start":699,"line_end":699,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":104033,"byte_end":104036,"line_start":705,"line_end":705,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":104208,"byte_end":104213,"line_start":711,"line_end":711,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":104324,"byte_end":104329,"line_start":717,"line_end":717,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":104490,"byte_end":104496,"line_start":723,"line_end":723,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":104601,"byte_end":104607,"line_start":729,"line_end":729,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":105373,"byte_end":105378,"line_start":759,"line_end":759,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":105530,"byte_end":105535,"line_start":768,"line_end":768,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":105713,"byte_end":105718,"line_start":779,"line_end":779,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":105822,"byte_end":105827,"line_start":786,"line_end":786,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":105946,"byte_end":105951,"line_start":792,"line_end":792,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":106075,"byte_end":106080,"line_start":798,"line_end":798,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":107010,"byte_end":107015,"line_start":831,"line_end":831,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":107145,"byte_end":107151,"line_start":839,"line_end":839,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120134,"byte_end":120142,"line_start":117,"line_end":117,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":145099,"byte_end":145107,"line_start":923,"line_end":923,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":145541,"byte_end":145549,"line_start":940,"line_end":940,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":146127,"byte_end":146135,"line_start":969,"line_end":969,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":147176,"byte_end":147184,"line_start":1015,"line_end":1015,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":147281,"byte_end":147289,"line_start":1022,"line_end":1022,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":147414,"byte_end":147422,"line_start":1031,"line_end":1031,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":147534,"byte_end":147542,"line_start":1038,"line_end":1038,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":147661,"byte_end":147669,"line_start":1045,"line_end":1045,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":147790,"byte_end":147798,"line_start":1051,"line_end":1051,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":147913,"byte_end":147918,"line_start":1057,"line_end":1057,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":148008,"byte_end":148016,"line_start":1063,"line_end":1063,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":148137,"byte_end":148145,"line_start":1069,"line_end":1069,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":148295,"byte_end":148303,"line_start":1075,"line_end":1075,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":148428,"byte_end":148436,"line_start":1081,"line_end":1081,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":148458,"byte_end":148466,"line_start":1083,"line_end":1083,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":148567,"byte_end":148575,"line_start":1090,"line_end":1090,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":148748,"byte_end":148756,"line_start":1100,"line_end":1100,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":148847,"byte_end":148855,"line_start":1106,"line_end":1106,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":148953,"byte_end":148961,"line_start":1112,"line_end":1112,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":149340,"byte_end":149348,"line_start":1129,"line_end":1129,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":149450,"byte_end":149458,"line_start":1135,"line_end":1135,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":149821,"byte_end":149829,"line_start":1153,"line_end":1153,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":150285,"byte_end":150293,"line_start":1173,"line_end":1173,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":150474,"byte_end":150482,"line_start":1182,"line_end":1182,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":150651,"byte_end":150659,"line_start":1188,"line_end":1188,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":152297,"byte_end":152303,"line_start":1237,"line_end":1237,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":155167,"byte_end":155175,"line_start":1320,"line_end":1320,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":155200,"byte_end":155208,"line_start":1321,"line_end":1321,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":155290,"byte_end":155298,"line_start":1329,"line_end":1329,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":155402,"byte_end":155410,"line_start":1335,"line_end":1335,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":155841,"byte_end":155849,"line_start":1353,"line_end":1353,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":155962,"byte_end":155970,"line_start":1359,"line_end":1359,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":156424,"byte_end":156432,"line_start":1377,"line_end":1377,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":156545,"byte_end":156553,"line_start":1383,"line_end":1383,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":156705,"byte_end":156708,"line_start":1389,"line_end":1389,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":156823,"byte_end":156826,"line_start":1395,"line_end":1395,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":156972,"byte_end":156980,"line_start":1401,"line_end":1401,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":157091,"byte_end":157099,"line_start":1407,"line_end":1407,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":157256,"byte_end":157262,"line_start":1413,"line_end":1413,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":157373,"byte_end":157379,"line_start":1419,"line_end":1419,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":157575,"byte_end":157583,"line_start":1425,"line_end":1425,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":157738,"byte_end":157746,"line_start":1434,"line_end":1434,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":158480,"byte_end":158485,"line_start":1467,"line_end":1467,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":158600,"byte_end":158608,"line_start":1473,"line_end":1473,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/fmt/debug.rs","byte_start":161739,"byte_end":161747,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/fmt/debug.rs","byte_start":162581,"byte_end":162586,"line_start":39,"line_end":39,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/fmt/debug.rs","byte_start":162715,"byte_end":162723,"line_start":45,"line_end":45,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/fmt/hex.rs","byte_start":162964,"byte_end":162972,"line_start":6,"line_end":6,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/fmt/hex.rs","byte_start":163148,"byte_end":163156,"line_start":15,"line_end":15,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/loom.rs","byte_start":164027,"byte_end":164036,"line_start":12,"line_end":12,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/lib.rs","byte_start":2974,"byte_end":2977,"line_start":84,"line_end":84,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":6}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":32754,"byte_end":32757,"line_start":1014,"line_end":1014,"column_start":31,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":4,"index":82},"to":{"krate":0,"index":22}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":33059,"byte_end":33065,"line_start":1035,"line_end":1035,"column_start":14,"column_end":20},"kind":{"Impl":{"id":1}},"from":{"krate":1,"index":30003},"to":{"krate":0,"index":22}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_impl.rs","byte_start":33646,"byte_end":33652,"line_start":1065,"line_end":1065,"column_start":39,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":6628},"to":{"krate":0,"index":22}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":60333,"byte_end":60336,"line_start":990,"line_end":990,"column_start":44,"column_end":47},"kind":{"Impl":{"id":3}},"from":{"krate":4,"index":82},"to":{"krate":0,"index":99}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/buf_mut.rs","byte_start":60936,"byte_end":60939,"line_start":1014,"line_end":1014,"column_start":24,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":4,"index":4232},"to":{"krate":0,"index":99}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":63489,"byte_end":63494,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":65655,"byte_end":65660,"line_start":132,"line_end":132,"column_start":20,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":952},"to":{"krate":0,"index":22}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":66556,"byte_end":66561,"line_start":175,"line_end":175,"column_start":30,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":952},"to":{"krate":0,"index":99}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/chain.rs","byte_start":67316,"byte_end":67321,"line_start":211,"line_end":211,"column_start":29,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":952},"to":{"krate":1,"index":4899}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":68104,"byte_end":68112,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":70152,"byte_end":70160,"line_start":112,"line_end":112,"column_start":27,"column_end":35},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":961},"to":{"krate":1,"index":4989}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/iter.rs","byte_start":70560,"byte_end":70568,"line_start":132,"line_end":132,"column_start":36,"column_end":44},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":961},"to":{"krate":1,"index":4944}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":70917,"byte_end":70922,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/limit.rs","byte_start":72074,"byte_end":72079,"line_start":59,"line_end":59,"column_start":35,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":967},"to":{"krate":0,"index":99}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":72925,"byte_end":72931,"line_start":19,"line_end":19,"column_start":14,"column_end":20},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":974},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":74019,"byte_end":74025,"line_start":65,"line_end":65,"column_start":35,"column_end":41},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":974},"to":{"krate":5,"index":2961}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/reader.rs","byte_start":74278,"byte_end":74284,"line_start":74,"line_end":74,"column_start":38,"column_end":44},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":974},"to":{"krate":5,"index":3044}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":74879,"byte_end":74883,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/take.rs","byte_start":77534,"byte_end":77538,"line_start":132,"line_end":132,"column_start":22,"column_end":26},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":980},"to":{"krate":0,"index":22}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":78749,"byte_end":78760,"line_start":24,"line_end":24,"column_start":6,"column_end":17},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/uninit_slice.rs","byte_start":81952,"byte_end":81963,"line_start":141,"line_end":141,"column_start":21,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":272},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/vec_deque.rs","byte_start":83076,"byte_end":83084,"line_start":5,"line_end":5,"column_start":14,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":4,"index":2538},"to":{"krate":0,"index":22}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":83804,"byte_end":83810,"line_start":19,"line_end":19,"column_start":17,"column_end":23},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/buf/writer.rs","byte_start":85182,"byte_end":85188,"line_start":77,"line_end":77,"column_start":39,"column_end":45},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1017},"to":{"krate":5,"index":3020}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":89488,"byte_end":89493,"line_start":109,"line_end":109,"column_start":6,"column_end":11},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":99985,"byte_end":99990,"line_start":509,"line_end":509,"column_start":22,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1927}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":100015,"byte_end":100020,"line_start":510,"line_end":510,"column_start":22,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1939}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":100039,"byte_end":100044,"line_start":512,"line_end":512,"column_start":15,"column_end":20},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":2122}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":100184,"byte_end":100189,"line_start":519,"line_end":519,"column_start":16,"column_end":21},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1625}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":100330,"byte_end":100335,"line_start":526,"line_end":526,"column_start":14,"column_end":19},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":348},"to":{"krate":0,"index":22}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":101061,"byte_end":101066,"line_start":562,"line_end":562,"column_start":16,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":2098}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":101193,"byte_end":101198,"line_start":571,"line_end":571,"column_start":22,"column_end":27},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1836}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":101300,"byte_end":101305,"line_start":578,"line_end":578,"column_start":21,"column_end":26},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":6391}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":101454,"byte_end":101459,"line_start":587,"line_end":587,"column_start":23,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1603}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":101549,"byte_end":101554,"line_start":593,"line_end":593,"column_start":23,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":4899}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":101919,"byte_end":101924,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":4895}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":102077,"byte_end":102082,"line_start":619,"line_end":619,"column_start":20,"column_end":25},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1653}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":102200,"byte_end":102205,"line_start":625,"line_end":625,"column_start":21,"column_end":26},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":102352,"byte_end":102357,"line_start":631,"line_end":631,"column_start":14,"column_end":19},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1679}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":102479,"byte_end":102484,"line_start":637,"line_end":637,"column_start":13,"column_end":18},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":102514,"byte_end":102519,"line_start":639,"line_end":639,"column_start":26,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1653}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":102631,"byte_end":102636,"line_start":645,"line_end":645,"column_start":27,"column_end":32},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":103062,"byte_end":103067,"line_start":663,"line_end":663,"column_start":25,"column_end":30},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1653}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":103188,"byte_end":103193,"line_start":669,"line_end":669,"column_start":26,"column_end":31},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":103642,"byte_end":103647,"line_start":687,"line_end":687,"column_start":29,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1653}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":103760,"byte_end":103765,"line_start":693,"line_end":693,"column_start":30,"column_end":35},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":103921,"byte_end":103924,"line_start":699,"line_end":699,"column_start":27,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":4,"index":4232},"to":{"krate":1,"index":1653}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":104033,"byte_end":104036,"line_start":705,"line_end":705,"column_start":28,"column_end":31},"kind":{"Impl":{"id":49}},"from":{"krate":4,"index":4232},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":104208,"byte_end":104213,"line_start":711,"line_end":711,"column_start":28,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1653}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":104324,"byte_end":104329,"line_start":717,"line_end":717,"column_start":29,"column_end":34},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":104490,"byte_end":104496,"line_start":723,"line_end":723,"column_start":27,"column_end":33},"kind":{"Impl":{"id":52}},"from":{"krate":4,"index":4932},"to":{"krate":1,"index":1653}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":104601,"byte_end":104607,"line_start":729,"line_end":729,"column_start":28,"column_end":34},"kind":{"Impl":{"id":53}},"from":{"krate":4,"index":4932},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":105373,"byte_end":105378,"line_start":759,"line_end":759,"column_start":42,"column_end":47},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1653}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":105530,"byte_end":105535,"line_start":768,"line_end":768,"column_start":43,"column_end":48},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":105713,"byte_end":105718,"line_start":779,"line_end":779,"column_start":18,"column_end":23},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1915}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":105822,"byte_end":105827,"line_start":786,"line_end":786,"column_start":30,"column_end":35},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1845}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":105946,"byte_end":105951,"line_start":792,"line_end":792,"column_start":29,"column_end":34},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1845}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":106075,"byte_end":106080,"line_start":798,"line_end":798,"column_start":24,"column_end":29},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1845}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":107010,"byte_end":107015,"line_start":831,"line_end":831,"column_start":23,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1845}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes.rs","byte_start":107145,"byte_end":107151,"line_start":839,"line_end":839,"column_start":21,"column_end":27},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":353},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":120134,"byte_end":120142,"line_start":117,"line_end":117,"column_start":6,"column_end":14},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":145099,"byte_end":145107,"line_start":923,"line_end":923,"column_start":15,"column_end":23},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":2122}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":145541,"byte_end":145549,"line_start":940,"line_end":940,"column_start":14,"column_end":22},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":544},"to":{"krate":0,"index":22}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":146127,"byte_end":146135,"line_start":969,"line_end":969,"column_start":24,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":544},"to":{"krate":0,"index":99}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":147176,"byte_end":147184,"line_start":1015,"line_end":1015,"column_start":22,"column_end":30},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1836}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":147281,"byte_end":147289,"line_start":1022,"line_end":1022,"column_start":16,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":2098}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":147414,"byte_end":147422,"line_start":1031,"line_end":1031,"column_start":22,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1839}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":147534,"byte_end":147542,"line_start":1038,"line_end":1038,"column_start":19,"column_end":27},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":2111}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":147661,"byte_end":147669,"line_start":1045,"line_end":1045,"column_start":29,"column_end":37},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1845}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":147790,"byte_end":147798,"line_start":1051,"line_end":1051,"column_start":28,"column_end":36},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1845}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":147913,"byte_end":147918,"line_start":1057,"line_end":1057,"column_start":25,"column_end":30},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1845}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":148008,"byte_end":148016,"line_start":1063,"line_end":1063,"column_start":20,"column_end":28},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1653}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":148137,"byte_end":148145,"line_start":1069,"line_end":1069,"column_start":21,"column_end":29},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":148295,"byte_end":148303,"line_start":1075,"line_end":1075,"column_start":14,"column_end":22},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1679}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":148428,"byte_end":148436,"line_start":1081,"line_end":1081,"column_start":13,"column_end":21},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":148458,"byte_end":148466,"line_start":1083,"line_end":1083,"column_start":18,"column_end":26},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1915}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":148567,"byte_end":148575,"line_start":1090,"line_end":1090,"column_start":21,"column_end":29},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":6391}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":148748,"byte_end":148756,"line_start":1100,"line_end":1100,"column_start":23,"column_end":31},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1603}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":148847,"byte_end":148855,"line_start":1106,"line_end":1106,"column_start":26,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":148953,"byte_end":148961,"line_start":1112,"line_end":1112,"column_start":21,"column_end":29},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":6164}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":149340,"byte_end":149348,"line_start":1129,"line_end":1129,"column_start":16,"column_end":24},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1625}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":149450,"byte_end":149458,"line_start":1135,"line_end":1135,"column_start":23,"column_end":31},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":4899}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":149821,"byte_end":149829,"line_start":1153,"line_end":1153,"column_start":21,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":4908}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":150285,"byte_end":150293,"line_start":1173,"line_end":1173,"column_start":29,"column_end":37},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":4908}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":150474,"byte_end":150482,"line_start":1182,"line_end":1182,"column_start":27,"column_end":35},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":4895}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":150651,"byte_end":150659,"line_start":1188,"line_end":1188,"column_start":35,"column_end":43},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":4895}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":152297,"byte_end":152303,"line_start":1237,"line_end":1237,"column_start":6,"column_end":12},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":155167,"byte_end":155175,"line_start":1320,"line_end":1320,"column_start":22,"column_end":30},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1927}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":155200,"byte_end":155208,"line_start":1321,"line_end":1321,"column_start":22,"column_end":30},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1939}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":155290,"byte_end":155298,"line_start":1329,"line_end":1329,"column_start":26,"column_end":34},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1653}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":155402,"byte_end":155410,"line_start":1335,"line_end":1335,"column_start":27,"column_end":35},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":155841,"byte_end":155849,"line_start":1353,"line_end":1353,"column_start":25,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1653}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":155962,"byte_end":155970,"line_start":1359,"line_end":1359,"column_start":26,"column_end":34},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":156424,"byte_end":156432,"line_start":1377,"line_end":1377,"column_start":29,"column_end":37},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1653}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":156545,"byte_end":156553,"line_start":1383,"line_end":1383,"column_start":30,"column_end":38},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":156705,"byte_end":156708,"line_start":1389,"line_end":1389,"column_start":30,"column_end":33},"kind":{"Impl":{"id":99}},"from":{"krate":4,"index":4232},"to":{"krate":1,"index":1653}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":156823,"byte_end":156826,"line_start":1395,"line_end":1395,"column_start":31,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":4,"index":4232},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":156972,"byte_end":156980,"line_start":1401,"line_end":1401,"column_start":28,"column_end":36},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1653}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":157091,"byte_end":157099,"line_start":1407,"line_end":1407,"column_start":29,"column_end":37},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":157256,"byte_end":157262,"line_start":1413,"line_end":1413,"column_start":30,"column_end":36},"kind":{"Impl":{"id":103}},"from":{"krate":4,"index":4932},"to":{"krate":1,"index":1653}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":157373,"byte_end":157379,"line_start":1419,"line_end":1419,"column_start":31,"column_end":37},"kind":{"Impl":{"id":104}},"from":{"krate":4,"index":4932},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":157575,"byte_end":157583,"line_start":1425,"line_end":1425,"column_start":42,"column_end":50},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1653}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":157738,"byte_end":157746,"line_start":1434,"line_end":1434,"column_start":43,"column_end":51},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":158480,"byte_end":158485,"line_start":1467,"line_end":1467,"column_start":30,"column_end":35},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":1653}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/bytes_mut.rs","byte_start":158600,"byte_end":158608,"line_start":1473,"line_end":1473,"column_start":27,"column_end":35},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":1653}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/fmt/debug.rs","byte_start":161739,"byte_end":161747,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/fmt/debug.rs","byte_start":162581,"byte_end":162586,"line_start":39,"line_end":39,"column_start":16,"column_end":21},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":348},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/fmt/debug.rs","byte_start":162715,"byte_end":162723,"line_start":45,"line_end":45,"column_start":16,"column_end":24},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":544},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/fmt/hex.rs","byte_start":162964,"byte_end":162972,"line_start":6,"line_end":6,"column_start":19,"column_end":27},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":6214}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/fmt/hex.rs","byte_start":163148,"byte_end":163156,"line_start":15,"line_end":15,"column_start":19,"column_end":27},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":6216}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.6.0/src/loom.rs","byte_start":164027,"byte_end":164036,"line_start":12,"line_end":12,"column_start":34,"column_end":43},"kind":{"Impl":{"id":118}},"from":{"krate":1,"index":5862},"to":{"krate":0,"index":783}}]}