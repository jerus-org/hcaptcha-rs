{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7","program":"/home/gorta/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=80e6cbdbde0e0e6c","-C","extra-filename=-80e6cbdbde0e0e6c","--out-dir","/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps","-L","dependency=/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps","--extern","futures_core=/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps/libfutures_core-a10d5343c18bd063.rmeta","--extern","futures_task=/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps/libfutures_task-bb18c73b304c1e7d.rmeta","--extern","pin_project=/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps/libpin_project-aaf0d805ebf0fe7c.rmeta","--extern","pin_utils=/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps/libpin_utils-f9e49bc7e7f315e9.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/gorta/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gorta/garden/hcaptcha-rs/target/rls/debug/deps/libfutures_util-80e6cbdbde0e0e6c.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[9595911263366745918,9125299072298497302]},"crate_root":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src","external_crates":[{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16851962707842592855,4932765248485690217]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3049591816127030880,10952373373500329976]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[11587085401131637304,2097967498245787009]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":4,"id":{"name":"futures_core","disambiguator":[4661823885116174540,79397588579559680]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[18437716656233032650,2349106724991734091]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":6,"id":{"name":"alloc","disambiguator":[697141649018154369,16548652339936893370]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[15777040323210795675,4562741973928336648]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[15931681355194650171,7679759071890480571]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[16378405889910241769,9643272937548158260]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":10,"id":{"name":"backtrace","disambiguator":[8261542656080474758,5147161130074218296]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[1712641478249352838,12464696676097716113]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":12,"id":{"name":"backtrace_sys","disambiguator":[3715598662871405823,1939556143240013170]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":13,"id":{"name":"hashbrown","disambiguator":[4641845549064414815,7418938888650694907]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":14,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18127448783747998133,9149995038350923488]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[8742225116956546677,8424782546207546390]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":16,"id":{"name":"pin_utils","disambiguator":[912976380524781605,4440106111369784297]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","num":17,"id":{"name":"futures_task","disambiguator":[2474850285057534667,9778541337613146272]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","num":18,"id":{"name":"pin_project","disambiguator":[10517135449454469502,2989509990025013374]}},{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","num":19,"id":{"name":"pin_project_internal","disambiguator":[9816404094531620184,2683657035220965680]}}],"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":12599,"line_start":1,"line_end":344,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":131},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":1863,"byte_end":1868,"line_start":41,"line_end":41,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":7},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":1889,"byte_end":1896,"line_start":42,"line_end":42,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":17},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":12919,"byte_end":12930,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":1,"index":8329},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":12932,"byte_end":12938,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":4,"index":32},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":12940,"byte_end":12949,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":17,"index":89},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":12975,"byte_end":12984,"line_start":10,"line_end":10,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":17,"index":55},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":12986,"byte_end":13000,"line_start":10,"line_end":10,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":17,"index":110},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13002,"byte_end":13017,"line_start":10,"line_end":10,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":2622},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13132,"byte_end":13139,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":2515},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13141,"byte_end":13145,"line_start":16,"line_end":16,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":122},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13147,"byte_end":13156,"line_start":16,"line_end":16,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3009},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13158,"byte_end":13165,"line_start":16,"line_end":16,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":2800},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13167,"byte_end":13177,"line_start":16,"line_end":16,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":2732},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13179,"byte_end":13182,"line_start":16,"line_end":16,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3077},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13184,"byte_end":13194,"line_start":16,"line_end":16,"column_start":57,"column_end":67},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":2926},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13196,"byte_end":13200,"line_start":16,"line_end":16,"column_start":69,"column_end":73},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3131},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13202,"byte_end":13211,"line_start":16,"line_end":16,"column_start":75,"column_end":84},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":2856},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13213,"byte_end":13220,"line_start":16,"line_end":16,"column_start":86,"column_end":93},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":2676},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13316,"byte_end":13329,"line_start":20,"line_end":20,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3541},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13645,"byte_end":13652,"line_start":35,"line_end":35,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3708},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13654,"byte_end":13661,"line_start":35,"line_end":35,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3777},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13663,"byte_end":13669,"line_start":35,"line_end":35,"column_start":23,"column_end":29},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3915},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13671,"byte_end":13681,"line_start":35,"line_end":35,"column_start":31,"column_end":41},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3846},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13683,"byte_end":13692,"line_start":35,"line_end":35,"column_start":43,"column_end":52},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3183},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13694,"byte_end":13704,"line_start":35,"line_end":35,"column_start":54,"column_end":64},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4053},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13706,"byte_end":13712,"line_start":35,"line_end":35,"column_start":66,"column_end":72},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3984},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13714,"byte_end":13719,"line_start":35,"line_end":35,"column_start":74,"column_end":79},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3625},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13721,"byte_end":13727,"line_start":35,"line_end":35,"column_start":81,"column_end":87},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3484},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13729,"byte_end":13745,"line_start":35,"line_end":35,"column_start":89,"column_end":105},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":261},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13751,"byte_end":13763,"line_start":36,"line_end":36,"column_start":5,"column_end":17},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4206},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13765,"byte_end":13777,"line_start":36,"line_end":36,"column_start":19,"column_end":31},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4123},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13779,"byte_end":13790,"line_start":36,"line_end":36,"column_start":33,"column_end":44},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3347},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13792,"byte_end":13802,"line_start":36,"line_end":36,"column_start":46,"column_end":56},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":317},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13974,"byte_end":13978,"line_start":46,"line_end":46,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4272},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13980,"byte_end":13984,"line_start":46,"line_end":46,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":344},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14025,"byte_end":14032,"line_start":49,"line_end":49,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4278},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14034,"byte_end":14041,"line_start":49,"line_end":49,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":367},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14088,"byte_end":14098,"line_start":52,"line_end":52,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4284},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14100,"byte_end":14109,"line_start":52,"line_end":52,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":393},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14164,"byte_end":14178,"line_start":55,"line_end":55,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4343},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14180,"byte_end":14192,"line_start":55,"line_end":55,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4402},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14230,"byte_end":14242,"line_start":58,"line_end":58,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":441},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14282,"byte_end":14289,"line_start":61,"line_end":61,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":436},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14291,"byte_end":14297,"line_start":61,"line_end":61,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":480},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14334,"byte_end":14337,"line_start":64,"line_end":64,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":477},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14339,"byte_end":14341,"line_start":64,"line_end":64,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":475},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14343,"byte_end":14348,"line_start":64,"line_end":64,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4450},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14350,"byte_end":14355,"line_start":64,"line_end":64,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":503},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14390,"byte_end":14394,"line_start":67,"line_end":67,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":506},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14396,"byte_end":14401,"line_start":67,"line_end":67,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":510},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14403,"byte_end":14408,"line_start":67,"line_end":67,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":515},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14410,"byte_end":14415,"line_start":67,"line_end":67,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4552},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14417,"byte_end":14421,"line_start":67,"line_end":67,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4605},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14423,"byte_end":14428,"line_start":67,"line_end":67,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4672},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14430,"byte_end":14435,"line_start":67,"line_end":67,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4753},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14437,"byte_end":14442,"line_start":67,"line_end":67,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":544},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14593,"byte_end":14599,"line_start":75,"line_end":75,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4848},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14601,"byte_end":14607,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":573},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14775,"byte_end":14783,"line_start":84,"line_end":84,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":576},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14785,"byte_end":14794,"line_start":84,"line_end":84,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":580},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14796,"byte_end":14805,"line_start":84,"line_end":84,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":585},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14807,"byte_end":14816,"line_start":84,"line_end":84,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4926},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14818,"byte_end":14825,"line_start":84,"line_end":84,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":4979},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14827,"byte_end":14835,"line_start":84,"line_end":84,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":5046},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14837,"byte_end":14845,"line_start":84,"line_end":84,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":5127},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14847,"byte_end":14855,"line_start":84,"line_end":84,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":614},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":15031,"byte_end":15041,"line_start":93,"line_end":93,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":5222},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":15043,"byte_end":15052,"line_start":93,"line_end":93,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":5230},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":15206,"byte_end":15212,"line_start":101,"line_end":101,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":122},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":11873,"byte_end":11882,"line_start":311,"line_end":311,"column_start":40,"column_end":49},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":261},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":11884,"byte_end":11896,"line_start":311,"line_end":311,"column_start":51,"column_end":63},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":82},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113556,"byte_end":113567,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":4,"index":68},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113569,"byte_end":113575,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":4,"index":97},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113577,"byte_end":113586,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":5288},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113702,"byte_end":113707,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":5345},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113709,"byte_end":113716,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":5401},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113718,"byte_end":113724,"line_start":16,"line_end":16,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":5446},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113726,"byte_end":113735,"line_start":16,"line_end":16,"column_start":29,"column_end":38},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":5495},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113737,"byte_end":113743,"line_start":16,"line_end":16,"column_start":40,"column_end":46},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":5568},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113745,"byte_end":113754,"line_start":16,"line_end":16,"column_start":48,"column_end":57},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6097},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113756,"byte_end":113763,"line_start":16,"line_end":16,"column_start":59,"column_end":66},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":5701},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113765,"byte_end":113772,"line_start":16,"line_end":16,"column_start":68,"column_end":75},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":5760},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113774,"byte_end":113778,"line_start":16,"line_end":16,"column_start":77,"column_end":81},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":5839},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113780,"byte_end":113787,"line_start":16,"line_end":16,"column_start":83,"column_end":90},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":5905},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113789,"byte_end":113793,"line_start":16,"line_end":16,"column_start":92,"column_end":96},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":5963},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113799,"byte_end":113806,"line_start":17,"line_end":17,"column_start":5,"column_end":12},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6037},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113808,"byte_end":113811,"line_start":17,"line_end":17,"column_start":14,"column_end":17},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6186},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113813,"byte_end":113817,"line_start":17,"line_end":17,"column_start":19,"column_end":23},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6251},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113819,"byte_end":113823,"line_start":17,"line_end":17,"column_start":25,"column_end":29},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6202},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113825,"byte_end":113833,"line_start":17,"line_end":17,"column_start":31,"column_end":39},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6746},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113835,"byte_end":113839,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6194},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113841,"byte_end":113855,"line_start":17,"line_end":17,"column_start":47,"column_end":61},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6300},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113857,"byte_end":113861,"line_start":17,"line_end":17,"column_start":63,"column_end":67},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6349},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113863,"byte_end":113872,"line_start":17,"line_end":17,"column_start":69,"column_end":78},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":1393},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113874,"byte_end":113883,"line_start":17,"line_end":17,"column_start":80,"column_end":89},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":5954},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113889,"byte_end":113901,"line_start":18,"line_end":18,"column_start":5,"column_end":17},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6425},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113903,"byte_end":113907,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6474},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113909,"byte_end":113918,"line_start":18,"line_end":18,"column_start":25,"column_end":34},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6550},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113920,"byte_end":113929,"line_start":18,"line_end":18,"column_start":36,"column_end":45},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6613},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113931,"byte_end":113935,"line_start":18,"line_end":18,"column_start":47,"column_end":51},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6683},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113937,"byte_end":113940,"line_start":18,"line_end":18,"column_start":53,"column_end":56},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":1836},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":114695,"byte_end":114705,"line_start":46,"line_end":46,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6826},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":114707,"byte_end":114714,"line_start":46,"line_end":46,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6899},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":114716,"byte_end":114723,"line_start":46,"line_end":46,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7053},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":114725,"byte_end":114735,"line_start":46,"line_end":46,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":6976},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":114737,"byte_end":114746,"line_start":46,"line_end":46,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7127},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":114748,"byte_end":114758,"line_start":46,"line_end":46,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7253},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":114760,"byte_end":114766,"line_start":46,"line_end":46,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7176},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":114768,"byte_end":114773,"line_start":46,"line_end":46,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7327},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":114775,"byte_end":114781,"line_start":46,"line_end":46,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7664},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":114787,"byte_end":114797,"line_start":47,"line_end":47,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7720},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":114799,"byte_end":114808,"line_start":47,"line_end":47,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7471},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":114810,"byte_end":114819,"line_start":47,"line_end":47,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7544},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":114821,"byte_end":114833,"line_start":47,"line_end":47,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7614},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":114835,"byte_end":114845,"line_start":47,"line_end":47,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7765},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":114847,"byte_end":114854,"line_start":47,"line_end":47,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7405},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":114856,"byte_end":114866,"line_start":47,"line_end":47,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7397},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":114868,"byte_end":114875,"line_start":47,"line_end":47,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7909},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":114881,"byte_end":114893,"line_start":48,"line_end":48,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":1930},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":114895,"byte_end":114907,"line_start":48,"line_end":48,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7985},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":114909,"byte_end":114921,"line_start":48,"line_end":48,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":7844},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":114923,"byte_end":114932,"line_start":48,"line_end":48,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":2006},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":115302,"byte_end":115306,"line_start":63,"line_end":63,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":8061},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":115308,"byte_end":115312,"line_start":63,"line_end":63,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":2024},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":115351,"byte_end":115357,"line_start":66,"line_end":66,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":8067},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":115359,"byte_end":115365,"line_start":66,"line_end":66,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":2048},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":115402,"byte_end":115407,"line_start":69,"line_end":69,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":8073},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":115409,"byte_end":115414,"line_start":69,"line_end":69,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":2073},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":115449,"byte_end":115453,"line_start":72,"line_end":72,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":8079},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":115455,"byte_end":115459,"line_start":72,"line_end":72,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":2098},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":115500,"byte_end":115507,"line_start":75,"line_end":75,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":8121},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":115509,"byte_end":115516,"line_start":75,"line_end":75,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":2128},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":115557,"byte_end":115564,"line_start":78,"line_end":78,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":2120},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":115566,"byte_end":115572,"line_start":78,"line_end":78,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":2151},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":115611,"byte_end":115617,"line_start":81,"line_end":81,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":8127},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":115619,"byte_end":115625,"line_start":81,"line_end":81,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":2187},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":115664,"byte_end":115670,"line_start":84,"line_end":84,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":8187},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":115672,"byte_end":115678,"line_start":84,"line_end":84,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":1393},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":11955,"byte_end":11964,"line_start":314,"line_end":314,"column_start":40,"column_end":49},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1930},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":11966,"byte_end":11978,"line_start":314,"line_end":314,"column_start":51,"column_end":63},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":142},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":305989,"byte_end":306000,"line_start":13,"line_end":13,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":2219}},{"kind":"Use","ref_id":{"krate":0,"index":2228},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":306038,"byte_end":306046,"line_start":17,"line_end":17,"column_start":23,"column_end":31},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":2219}},{"kind":"Use","ref_id":{"krate":0,"index":2229},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":306048,"byte_end":306061,"line_start":17,"line_end":17,"column_start":33,"column_end":46},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":2219}},{"kind":"Use","ref_id":{"krate":1,"index":8495},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":306094,"byte_end":306101,"line_start":19,"line_end":19,"column_start":30,"column_end":37},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":2219}},{"kind":"Use","ref_id":{"krate":1,"index":32543},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":306103,"byte_end":306107,"line_start":19,"line_end":19,"column_start":39,"column_end":43},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":2219}},{"kind":"Use","ref_id":{"krate":1,"index":8505},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":306109,"byte_end":306114,"line_start":19,"line_end":19,"column_start":45,"column_end":50},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":2219}},{"kind":"Use","ref_id":{"krate":1,"index":32583},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":306116,"byte_end":306124,"line_start":19,"line_end":19,"column_start":52,"column_end":60},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":2219}},{"kind":"Use","ref_id":{"krate":1,"index":32592},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":306126,"byte_end":306140,"line_start":19,"line_end":19,"column_start":62,"column_end":76},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":2219}},{"kind":"Use","ref_id":{"krate":17,"index":10},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":306172,"byte_end":306177,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":2219}},{"kind":"Use","ref_id":{"krate":17,"index":13},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":306179,"byte_end":306189,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":2219}},{"kind":"Use","ref_id":{"krate":17,"index":16},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":306191,"byte_end":306201,"line_start":22,"line_end":22,"column_start":24,"column_end":34},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":2219}},{"kind":"Use","ref_id":{"krate":17,"index":89},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":306207,"byte_end":306216,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":2219}},{"kind":"Use","ref_id":{"krate":17,"index":55},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":306218,"byte_end":306232,"line_start":23,"line_end":23,"column_start":16,"column_end":30},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":2219}},{"kind":"Use","ref_id":{"krate":17,"index":110},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":306234,"byte_end":306249,"line_start":23,"line_end":23,"column_start":32,"column_end":47},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":2219}},{"kind":"Use","ref_id":{"krate":17,"index":151},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":306277,"byte_end":306287,"line_start":26,"line_end":26,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":2219}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":12599,"line_start":1,"line_end":344,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":12},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":2216},{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2247},{"krate":0,"index":2249}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"! Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"! and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"no_std","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":385,"byte_end":391,"line_start":8,"line_end":8,"column_start":35,"column_end":41}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":394,"byte_end":482,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":650,"byte_end":671,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"allow(clippy :: mem_replace_with_default, clippy ::\n        match_like_matches_macro)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":876,"byte_end":953,"line_start":17,"line_end":17,"column_start":1,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":12},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":668},{"krate":0,"index":669}],"decl_id":null,"docs":" Futures","sig":null,"attributes":[{"value":"! Futures","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":12601,"byte_end":12612,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":12613,"byte_end":12616,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Future`s,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":12617,"byte_end":12691,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! including the [`FutureExt`] trait and the [`TryFutureExt`] trait which add","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":12692,"byte_end":12770,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! methods to `Future` types.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":12771,"byte_end":12801,"line_start":5,"line_end":5,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2460},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":35799,"byte_end":35804,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First(Fut1)","parent":{"krate":0,"index":2457},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2462},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":35823,"byte_end":35829,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second(Fut2)","parent":{"krate":0,"index":2457},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2464},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":35848,"byte_end":35853,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":2457},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2457},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":35773,"byte_end":35780,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First(\n          #[pin]\n          Fut1),\n    Second(\n           #[pin]\n           Fut2),\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":2460},{"krate":0,"index":2462},{"krate":0,"index":2464}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private(project = FlattenProj))","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":35709,"byte_end":35746,"line_start":9,"line_end":9,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2486},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":35773,"byte_end":35780,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"__Flatten","qualname":"::future::future::flatten::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":2490},{"krate":0,"index":2491},{"krate":0,"index":2492}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":35709,"byte_end":35746,"line_start":9,"line_end":9,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2515},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40212,"byte_end":40216,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40133,"byte_end":40200,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40101,"byte_end":40115,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2538},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40212,"byte_end":40216,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"__Fuse","qualname":"::future::future::fuse::_::__Fuse","value":"__Fuse {  }","parent":null,"children":[{"krate":0,"index":2541},{"krate":0,"index":2542}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40101,"byte_end":40115,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41998,"byte_end":42008,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Fuse<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40376,"byte_end":40444,"line_start":19,"line_end":19,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40449,"byte_end":40452,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40457,"byte_end":40525,"line_start":21,"line_end":21,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40530,"byte_end":40575,"line_start":22,"line_end":22,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40580,"byte_end":40583,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40588,"byte_end":40602,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40607,"byte_end":40610,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40615,"byte_end":40622,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40627,"byte_end":40668,"line_start":27,"line_end":27,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40673,"byte_end":40704,"line_start":28,"line_end":28,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40709,"byte_end":40765,"line_start":29,"line_end":29,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40770,"byte_end":40794,"line_start":30,"line_end":30,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40799,"byte_end":40834,"line_start":31,"line_end":31,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40839,"byte_end":40864,"line_start":32,"line_end":32,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40869,"byte_end":40872,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40877,"byte_end":40926,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40931,"byte_end":40934,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40939,"byte_end":40981,"line_start":36,"line_end":36,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40986,"byte_end":41025,"line_start":37,"line_end":37,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41030,"byte_end":41069,"line_start":38,"line_end":38,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41074,"byte_end":41091,"line_start":39,"line_end":39,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41096,"byte_end":41099,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41104,"byte_end":41174,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41179,"byte_end":41218,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41223,"byte_end":41264,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41269,"byte_end":41295,"line_start":44,"line_end":44,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41300,"byte_end":41303,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41308,"byte_end":41318,"line_start":46,"line_end":46,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41323,"byte_end":41340,"line_start":47,"line_end":47,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41345,"byte_end":41379,"line_start":48,"line_end":48,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41384,"byte_end":41431,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41436,"byte_end":41485,"line_start":50,"line_end":50,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41490,"byte_end":41552,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41557,"byte_end":41581,"line_start":52,"line_end":52,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41586,"byte_end":41629,"line_start":53,"line_end":53,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41634,"byte_end":41691,"line_start":54,"line_end":54,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41696,"byte_end":41771,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41776,"byte_end":41806,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41811,"byte_end":41828,"line_start":57,"line_end":57,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41833,"byte_end":41847,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41852,"byte_end":41936,"line_start":59,"line_end":59,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41941,"byte_end":41950,"line_start":60,"line_end":60,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41955,"byte_end":41960,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41965,"byte_end":41974,"line_start":62,"line_end":62,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41979,"byte_end":41986,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":2563},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":42984,"byte_end":42994,"line_start":13,"line_end":13,"column_start":5,"column_end":15},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":2560},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2565},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":43058,"byte_end":43066,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":2560},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2560},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":42966,"byte_end":42969,"line_start":12,"line_end":12,"column_start":10,"column_end":13},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        #[pin]\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":2563},{"krate":0,"index":2565}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":42889,"byte_end":42956,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private(project = MapProj, project_replace = MapProjOwn))","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":42808,"byte_end":42871,"line_start":9,"line_end":9,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":2592},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":42966,"byte_end":42969,"line_start":12,"line_end":12,"column_start":10,"column_end":13},"name":"__Map","qualname":"::future::future::map::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":2596},{"krate":0,"index":2597}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":42808,"byte_end":42871,"line_start":9,"line_end":9,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":2622},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":2624}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2642},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__Flatten","qualname":"::future::future::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":2645},{"krate":0,"index":2646}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2676},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":2678}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2696},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__FlattenStream","qualname":"::future::future::_::__FlattenStream","value":"__FlattenStream {  }","parent":null,"children":[{"krate":0,"index":2699},{"krate":0,"index":2700}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2732},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":2735}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2757},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__Map","qualname":"::future::future::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":2761},{"krate":0,"index":2762}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2800},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":2802}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2820},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__IntoStream","qualname":"::future::future::_::__IntoStream","value":"__IntoStream {  }","parent":null,"children":[{"krate":0,"index":2823},{"krate":0,"index":2824}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2856},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":2859}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2881},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__MapInto","qualname":"::future::future::_::__MapInto","value":"__MapInto {  }","parent":null,"children":[{"krate":0,"index":2885},{"krate":0,"index":2886}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2926},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":2930}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2956},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__Then","qualname":"::future::future::_::__Then","value":"__Then {  }","parent":null,"children":[{"krate":0,"index":2961},{"krate":0,"index":2962}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3009},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":3012}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3034},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__Inspect","qualname":"::future::future::_::__Inspect","value":"__Inspect {  }","parent":null,"children":[{"krate":0,"index":3038},{"krate":0,"index":3039}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3077},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":3079}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3097},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__NeverError","qualname":"::future::future::_::__NeverError","value":"__NeverError {  }","parent":null,"children":[{"krate":0,"index":3100},{"krate":0,"index":3101}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3131},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":3133}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3151},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__UnitError","qualname":"::future::future::_::__UnitError","value":"__UnitError {  }","parent":null,"children":[{"krate":0,"index":3154},{"krate":0,"index":3155}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":122},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19296,"byte_end":19305,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19197,"byte_end":19271,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19272,"byte_end":19285,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20137,"byte_end":20140,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19320,"byte_end":19395,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19400,"byte_end":19423,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19428,"byte_end":19431,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19436,"byte_end":19510,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19515,"byte_end":19586,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19591,"byte_end":19653,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19658,"byte_end":19661,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19666,"byte_end":19737,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19742,"byte_end":19813,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19818,"byte_end":19839,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19844,"byte_end":19847,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19852,"byte_end":19866,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19871,"byte_end":19874,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19879,"byte_end":19886,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19891,"byte_end":19932,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19937,"byte_end":19972,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19977,"byte_end":19980,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19985,"byte_end":20014,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20019,"byte_end":20062,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20067,"byte_end":20103,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20108,"byte_end":20117,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20122,"byte_end":20129,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20537,"byte_end":20545,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20310,"byte_end":20385,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20390,"byte_end":20413,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20418,"byte_end":20421,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20426,"byte_end":20504,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20509,"byte_end":20529,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21557,"byte_end":21561,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20704,"byte_end":20780,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20785,"byte_end":20828,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20833,"byte_end":20836,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20841,"byte_end":20912,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20917,"byte_end":20991,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20996,"byte_end":21012,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21017,"byte_end":21020,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21025,"byte_end":21100,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21105,"byte_end":21116,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21121,"byte_end":21124,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21129,"byte_end":21200,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21205,"byte_end":21231,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21236,"byte_end":21239,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21244,"byte_end":21258,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21263,"byte_end":21266,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21271,"byte_end":21278,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21283,"byte_end":21324,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21329,"byte_end":21364,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21369,"byte_end":21372,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21377,"byte_end":21411,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21416,"byte_end":21481,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21486,"byte_end":21523,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21528,"byte_end":21537,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21542,"byte_end":21549,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22431,"byte_end":22442,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21773,"byte_end":21848,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21853,"byte_end":21874,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21879,"byte_end":21882,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21887,"byte_end":21967,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21972,"byte_end":22044,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22049,"byte_end":22052,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22057,"byte_end":22071,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22076,"byte_end":22079,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22084,"byte_end":22091,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22096,"byte_end":22137,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22142,"byte_end":22177,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22182,"byte_end":22185,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22190,"byte_end":22204,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22209,"byte_end":22237,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22242,"byte_end":22278,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22283,"byte_end":22295,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22300,"byte_end":22338,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22343,"byte_end":22349,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22354,"byte_end":22357,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22362,"byte_end":22397,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22402,"byte_end":22411,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22416,"byte_end":22423,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23281,"byte_end":23293,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22622,"byte_end":22698,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22703,"byte_end":22724,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22729,"byte_end":22732,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22737,"byte_end":22816,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22821,"byte_end":22893,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22898,"byte_end":22901,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22906,"byte_end":22920,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22925,"byte_end":22928,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22933,"byte_end":22940,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22945,"byte_end":22986,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22991,"byte_end":23026,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23031,"byte_end":23034,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23039,"byte_end":23053,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23058,"byte_end":23086,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23091,"byte_end":23127,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23132,"byte_end":23144,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23149,"byte_end":23187,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23192,"byte_end":23198,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23203,"byte_end":23206,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23211,"byte_end":23247,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23252,"byte_end":23261,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23266,"byte_end":23273,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24072,"byte_end":24083,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23474,"byte_end":23527,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23532,"byte_end":23535,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23540,"byte_end":23614,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23619,"byte_end":23682,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23687,"byte_end":23690,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23695,"byte_end":23709,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23714,"byte_end":23717,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23722,"byte_end":23729,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23734,"byte_end":23775,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23780,"byte_end":23815,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23820,"byte_end":23855,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23860,"byte_end":23863,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23868,"byte_end":23898,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23903,"byte_end":23941,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23946,"byte_end":23997,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24002,"byte_end":24038,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24043,"byte_end":24052,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24057,"byte_end":24064,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24948,"byte_end":24955,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24222,"byte_end":24286,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24291,"byte_end":24327,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24332,"byte_end":24335,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24340,"byte_end":24409,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24414,"byte_end":24451,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24456,"byte_end":24459,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24464,"byte_end":24524,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24529,"byte_end":24532,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24537,"byte_end":24608,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24613,"byte_end":24639,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24644,"byte_end":24647,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24652,"byte_end":24666,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24671,"byte_end":24674,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24679,"byte_end":24686,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24691,"byte_end":24732,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24737,"byte_end":24772,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24777,"byte_end":24780,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24785,"byte_end":24831,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24836,"byte_end":24877,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24882,"byte_end":24914,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24919,"byte_end":24928,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24933,"byte_end":24940,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26060,"byte_end":26074,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25169,"byte_end":25244,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25249,"byte_end":25272,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25277,"byte_end":25280,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25285,"byte_end":25357,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25362,"byte_end":25435,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25440,"byte_end":25454,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25459,"byte_end":25462,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25467,"byte_end":25537,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25542,"byte_end":25560,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25565,"byte_end":25568,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25573,"byte_end":25587,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25592,"byte_end":25595,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25600,"byte_end":25607,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25612,"byte_end":25653,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25658,"byte_end":25693,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25698,"byte_end":25741,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25746,"byte_end":25749,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25754,"byte_end":25794,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25799,"byte_end":25865,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25870,"byte_end":25873,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25878,"byte_end":25931,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25936,"byte_end":25982,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25987,"byte_end":26026,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26031,"byte_end":26040,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26045,"byte_end":26052,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27162,"byte_end":27166,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26267,"byte_end":26340,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26345,"byte_end":26411,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26416,"byte_end":26434,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26439,"byte_end":26442,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26447,"byte_end":26514,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26519,"byte_end":26584,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26589,"byte_end":26661,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26666,"byte_end":26740,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26745,"byte_end":26771,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26776,"byte_end":26779,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26784,"byte_end":26855,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26860,"byte_end":26935,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26940,"byte_end":26994,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26999,"byte_end":27002,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27007,"byte_end":27081,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27086,"byte_end":27154,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":28006,"byte_end":28013,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27312,"byte_end":27378,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27383,"byte_end":27386,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27391,"byte_end":27466,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27471,"byte_end":27544,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27549,"byte_end":27618,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27623,"byte_end":27673,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27678,"byte_end":27681,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27686,"byte_end":27700,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27705,"byte_end":27708,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27713,"byte_end":27720,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27725,"byte_end":27766,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27771,"byte_end":27806,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27811,"byte_end":27814,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27819,"byte_end":27848,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27853,"byte_end":27931,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27936,"byte_end":27972,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27977,"byte_end":27986,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27991,"byte_end":27998,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":33174,"byte_end":33184,"line_start":540,"line_end":540,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":33041,"byte_end":33090,"line_start":538,"line_end":538,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":33095,"byte_end":33166,"line_start":539,"line_end":539,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":33469,"byte_end":33480,"line_start":549,"line_end":549,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":33333,"byte_end":33382,"line_start":547,"line_end":547,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":33387,"byte_end":33461,"line_start":548,"line_end":548,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":33711,"byte_end":33721,"line_start":557,"line_end":557,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":33634,"byte_end":33703,"line_start":556,"line_end":556,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":35117,"byte_end":35129,"line_start":595,"line_end":595,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":33857,"byte_end":33929,"line_start":564,"line_end":564,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":33934,"byte_end":33997,"line_start":565,"line_end":565,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34002,"byte_end":34005,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34010,"byte_end":34076,"line_start":567,"line_end":567,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34081,"byte_end":34084,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34089,"byte_end":34162,"line_start":569,"line_end":569,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34167,"byte_end":34236,"line_start":570,"line_end":570,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34241,"byte_end":34311,"line_start":571,"line_end":571,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34316,"byte_end":34319,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34324,"byte_end":34338,"line_start":573,"line_end":573,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34343,"byte_end":34346,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34351,"byte_end":34358,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34363,"byte_end":34393,"line_start":576,"line_end":576,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34398,"byte_end":34448,"line_start":577,"line_end":577,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34453,"byte_end":34492,"line_start":578,"line_end":578,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34497,"byte_end":34548,"line_start":579,"line_end":579,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34553,"byte_end":34556,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34561,"byte_end":34621,"line_start":581,"line_end":581,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34626,"byte_end":34678,"line_start":582,"line_end":582,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34683,"byte_end":34690,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34695,"byte_end":34698,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34703,"byte_end":34772,"line_start":585,"line_end":585,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34777,"byte_end":34850,"line_start":586,"line_end":586,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34855,"byte_end":34887,"line_start":587,"line_end":587,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34892,"byte_end":34895,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34900,"byte_end":34907,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34912,"byte_end":34959,"line_start":590,"line_end":590,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34964,"byte_end":35003,"line_start":591,"line_end":591,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":35008,"byte_end":35011,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":35016,"byte_end":35097,"line_start":593,"line_end":593,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":35102,"byte_end":35109,"line_start":594,"line_end":594,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3183},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":66089,"byte_end":66099,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":66010,"byte_end":66077,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":65978,"byte_end":65992,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3206},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":66089,"byte_end":66099,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"__IntoFuture","qualname":"::future::try_future::into_future::_::__IntoFuture","value":"__IntoFuture {  }","parent":null,"children":[{"krate":0,"index":3209},{"krate":0,"index":3210}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":65978,"byte_end":65992,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3231},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":67007,"byte_end":67012,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First(Fut1)","parent":{"krate":0,"index":3228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3233},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":67031,"byte_end":67037,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second(Fut2)","parent":{"krate":0,"index":3228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3235},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":67056,"byte_end":67061,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":3228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3228},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":66978,"byte_end":66988,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First(\n          #[pin]\n          Fut1),\n    Second(\n           #[pin]\n           Fut2),\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":3231},{"krate":0,"index":3233},{"krate":0,"index":3235}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private(project = TryFlattenProj))","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":66911,"byte_end":66951,"line_start":9,"line_end":9,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3257},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":66978,"byte_end":66988,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"__TryFlatten","qualname":"::future::try_future::try_flatten::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":3261},{"krate":0,"index":3262},{"krate":0,"index":3263}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":66911,"byte_end":66951,"line_start":9,"line_end":9,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3289},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":72154,"byte_end":72159,"line_start":9,"line_end":9,"column_start":5,"column_end":10},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First(Fut1)","parent":{"krate":0,"index":3286},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3291},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":72178,"byte_end":72184,"line_start":10,"line_end":10,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second(Fut2)","parent":{"krate":0,"index":3286},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3293},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":72203,"byte_end":72208,"line_start":11,"line_end":11,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":3286},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3286},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":72122,"byte_end":72135,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First(\n          #[pin]\n          Fut1),\n    Second(\n           #[pin]\n           Fut2),\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":3289},{"krate":0,"index":3291},{"krate":0,"index":3293}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private(project = TryFlattenErrProj))","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":72052,"byte_end":72095,"line_start":6,"line_end":6,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":3315},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":72122,"byte_end":72135,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"__TryFlattenErr","qualname":"::future::try_future::try_flatten_err::_::__TryFlattenErr","value":"__TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":3319},{"krate":0,"index":3320},{"krate":0,"index":3321}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":72052,"byte_end":72095,"line_start":6,"line_end":6,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":3347},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":3350}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3372},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__TryFlatten","qualname":"::future::try_future::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":3376},{"krate":0,"index":3377}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3416},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":3419}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3441},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__TryFlattenErr","qualname":"::future::try_future::_::__TryFlattenErr","value":"__TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":3445},{"krate":0,"index":3446}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3484},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":3486}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3504},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__TryFlattenStream","qualname":"::future::try_future::_::__TryFlattenStream","value":"__TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":3507},{"krate":0,"index":3508}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3541},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":3545}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3571},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__AndThen","qualname":"::future::try_future::_::__AndThen","value":"__AndThen {  }","parent":null,"children":[{"krate":0,"index":3576},{"krate":0,"index":3577}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3625},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":3629}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3655},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__OrElse","qualname":"::future::try_future::_::__OrElse","value":"__OrElse {  }","parent":null,"children":[{"krate":0,"index":3660},{"krate":0,"index":3661}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3708},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":3711}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3733},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__ErrInto","qualname":"::future::try_future::_::__ErrInto","value":"__ErrInto {  }","parent":null,"children":[{"krate":0,"index":3737},{"krate":0,"index":3738}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3777},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":3780}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3802},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__OkInto","qualname":"::future::try_future::_::__OkInto","value":"__OkInto {  }","parent":null,"children":[{"krate":0,"index":3806},{"krate":0,"index":3807}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3846},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":3849}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3871},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__InspectOk","qualname":"::future::try_future::_::__InspectOk","value":"__InspectOk {  }","parent":null,"children":[{"krate":0,"index":3875},{"krate":0,"index":3876}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3915},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":3918}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3940},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__InspectErr","qualname":"::future::try_future::_::__InspectErr","value":"__InspectErr {  }","parent":null,"children":[{"krate":0,"index":3944},{"krate":0,"index":3945}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3984},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":3987}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4009},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__MapOk","qualname":"::future::try_future::_::__MapOk","value":"__MapOk {  }","parent":null,"children":[{"krate":0,"index":4013},{"krate":0,"index":4014}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4053},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":4056}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4078},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__MapErr","qualname":"::future::try_future::_::__MapErr","value":"__MapErr {  }","parent":null,"children":[{"krate":0,"index":4082},{"krate":0,"index":4083}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4123},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":4127}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4153},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__MapOkOrElse","qualname":"::future::try_future::_::__MapOkOrElse","value":"__MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":4158},{"krate":0,"index":4159}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4206},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":4209}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4231},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__UnwrapOrElse","qualname":"::future::try_future::_::__UnwrapOrElse","value":"__UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":4235},{"krate":0,"index":4236}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":261},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":48923,"byte_end":48935,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":291}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":48859,"byte_end":48912,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":51645,"byte_end":51651,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":50273,"byte_end":50331,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":50336,"byte_end":50339,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":50344,"byte_end":50419,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":50424,"byte_end":50494,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":50499,"byte_end":50572,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":50577,"byte_end":50606,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":50611,"byte_end":50614,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":50619,"byte_end":50694,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":50699,"byte_end":50774,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":50779,"byte_end":50826,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":50831,"byte_end":50834,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":50839,"byte_end":50914,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":50919,"byte_end":50945,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":50950,"byte_end":50953,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":50958,"byte_end":50972,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":50977,"byte_end":50980,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":50985,"byte_end":50992,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":50997,"byte_end":51035,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":51040,"byte_end":51043,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":51048,"byte_end":51089,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":51094,"byte_end":51139,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":51144,"byte_end":51186,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":51191,"byte_end":51227,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":51232,"byte_end":51241,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":51246,"byte_end":51253,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":51258,"byte_end":51261,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":51266,"byte_end":51338,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":51343,"byte_end":51354,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":51359,"byte_end":51362,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":51367,"byte_end":51374,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":51379,"byte_end":51417,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":51422,"byte_end":51425,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":51430,"byte_end":51471,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":51476,"byte_end":51522,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":51527,"byte_end":51569,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":51574,"byte_end":51611,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":51616,"byte_end":51625,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":51630,"byte_end":51637,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":53210,"byte_end":53224,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":51842,"byte_end":51959,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":51964,"byte_end":51967,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":51972,"byte_end":52094,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":52099,"byte_end":52149,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":52154,"byte_end":52157,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":52162,"byte_end":52237,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":52242,"byte_end":52317,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":52322,"byte_end":52369,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":52374,"byte_end":52377,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":52382,"byte_end":52457,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":52462,"byte_end":52537,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":52542,"byte_end":52589,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":52594,"byte_end":52597,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":52602,"byte_end":52677,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":52682,"byte_end":52708,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":52713,"byte_end":52716,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":52721,"byte_end":52735,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":52740,"byte_end":52743,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":52748,"byte_end":52755,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":52760,"byte_end":52798,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":52803,"byte_end":52806,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":52811,"byte_end":52852,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":52857,"byte_end":52902,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":52907,"byte_end":52968,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":52973,"byte_end":53005,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":53010,"byte_end":53013,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":53018,"byte_end":53064,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":53069,"byte_end":53130,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":53135,"byte_end":53168,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":53173,"byte_end":53182,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":53187,"byte_end":53194,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":53199,"byte_end":53202,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54907,"byte_end":54914,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":53458,"byte_end":53514,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":53519,"byte_end":53522,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":53527,"byte_end":53601,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":53606,"byte_end":53667,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":53672,"byte_end":53742,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":53747,"byte_end":53822,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":53827,"byte_end":53862,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":53867,"byte_end":53870,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":53875,"byte_end":53950,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":53955,"byte_end":54030,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54035,"byte_end":54082,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54087,"byte_end":54090,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54095,"byte_end":54170,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54175,"byte_end":54201,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54206,"byte_end":54209,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54214,"byte_end":54228,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54233,"byte_end":54236,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54241,"byte_end":54248,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54253,"byte_end":54291,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54296,"byte_end":54299,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54304,"byte_end":54345,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54350,"byte_end":54396,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54401,"byte_end":54444,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54449,"byte_end":54486,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54491,"byte_end":54500,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54505,"byte_end":54512,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54517,"byte_end":54520,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54525,"byte_end":54598,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54603,"byte_end":54617,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54622,"byte_end":54625,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54630,"byte_end":54637,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54642,"byte_end":54680,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54685,"byte_end":54688,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54693,"byte_end":54734,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54739,"byte_end":54784,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54789,"byte_end":54832,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54837,"byte_end":54873,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54878,"byte_end":54887,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":54892,"byte_end":54899,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":56004,"byte_end":56012,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":55107,"byte_end":55177,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":55182,"byte_end":55231,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":55236,"byte_end":55239,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":55244,"byte_end":55307,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":55312,"byte_end":55380,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":55385,"byte_end":55458,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":55463,"byte_end":55539,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":55544,"byte_end":55589,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":55594,"byte_end":55597,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":55602,"byte_end":55677,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":55682,"byte_end":55708,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":55713,"byte_end":55716,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":55721,"byte_end":55735,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":55740,"byte_end":55743,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":55748,"byte_end":55755,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":55760,"byte_end":55798,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":55803,"byte_end":55806,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":55811,"byte_end":55852,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":55857,"byte_end":55908,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":55913,"byte_end":55970,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":55975,"byte_end":55984,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":55989,"byte_end":55996,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":56308,"byte_end":56315,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":56188,"byte_end":56246,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":56251,"byte_end":56300,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57870,"byte_end":57878,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":56489,"byte_end":56558,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":56563,"byte_end":56637,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":56642,"byte_end":56645,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":56650,"byte_end":56725,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":56730,"byte_end":56800,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":56805,"byte_end":56870,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":56875,"byte_end":56941,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":56946,"byte_end":56980,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":56985,"byte_end":56988,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":56993,"byte_end":57068,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57073,"byte_end":57099,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57104,"byte_end":57107,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57112,"byte_end":57126,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57131,"byte_end":57134,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57139,"byte_end":57146,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57151,"byte_end":57189,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57194,"byte_end":57197,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57202,"byte_end":57243,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57248,"byte_end":57293,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57298,"byte_end":57373,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57378,"byte_end":57414,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57419,"byte_end":57428,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57433,"byte_end":57440,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57445,"byte_end":57448,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57453,"byte_end":57529,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57534,"byte_end":57545,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57550,"byte_end":57553,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57558,"byte_end":57565,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57570,"byte_end":57608,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57613,"byte_end":57616,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57621,"byte_end":57662,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57667,"byte_end":57713,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57718,"byte_end":57794,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57799,"byte_end":57836,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57841,"byte_end":57850,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":57855,"byte_end":57862,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":59499,"byte_end":59506,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58132,"byte_end":58197,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58202,"byte_end":58274,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58279,"byte_end":58282,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58287,"byte_end":58362,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58367,"byte_end":58437,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58442,"byte_end":58507,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58512,"byte_end":58588,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58593,"byte_end":58611,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58616,"byte_end":58619,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58624,"byte_end":58699,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58704,"byte_end":58730,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58735,"byte_end":58738,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58743,"byte_end":58757,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58762,"byte_end":58765,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58770,"byte_end":58777,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58782,"byte_end":58820,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58825,"byte_end":58828,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58833,"byte_end":58874,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58879,"byte_end":58925,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58930,"byte_end":59005,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":59010,"byte_end":59047,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":59052,"byte_end":59061,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":59066,"byte_end":59073,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":59078,"byte_end":59081,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":59086,"byte_end":59159,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":59164,"byte_end":59178,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":59183,"byte_end":59186,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":59191,"byte_end":59198,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":59203,"byte_end":59241,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":59246,"byte_end":59249,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":59254,"byte_end":59295,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":59300,"byte_end":59345,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":59350,"byte_end":59424,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":59429,"byte_end":59465,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":59470,"byte_end":59479,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":59484,"byte_end":59491,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60482,"byte_end":60492,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":59755,"byte_end":59828,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":59833,"byte_end":59836,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":59841,"byte_end":59916,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":59921,"byte_end":59994,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":59999,"byte_end":60068,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60073,"byte_end":60126,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60131,"byte_end":60134,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60139,"byte_end":60153,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60158,"byte_end":60161,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60166,"byte_end":60173,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60178,"byte_end":60219,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60224,"byte_end":60262,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60267,"byte_end":60270,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60275,"byte_end":60317,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60322,"byte_end":60403,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60408,"byte_end":60448,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60453,"byte_end":60462,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60467,"byte_end":60474,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61418,"byte_end":61429,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60691,"byte_end":60762,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60767,"byte_end":60770,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60775,"byte_end":60850,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60855,"byte_end":60928,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60933,"byte_end":61002,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61007,"byte_end":61061,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61066,"byte_end":61069,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61074,"byte_end":61088,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61093,"byte_end":61096,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61101,"byte_end":61108,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61113,"byte_end":61154,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61159,"byte_end":61197,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61202,"byte_end":61205,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61210,"byte_end":61253,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61258,"byte_end":61338,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61343,"byte_end":61384,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61389,"byte_end":61398,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61403,"byte_end":61410,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61814,"byte_end":61825,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61633,"byte_end":61708,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61713,"byte_end":61742,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61747,"byte_end":61750,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61755,"byte_end":61806,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62934,"byte_end":62952,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61990,"byte_end":62065,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62070,"byte_end":62093,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62098,"byte_end":62101,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62106,"byte_end":62178,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62183,"byte_end":62256,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62261,"byte_end":62275,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62280,"byte_end":62283,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62288,"byte_end":62358,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62363,"byte_end":62381,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62386,"byte_end":62389,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62394,"byte_end":62408,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62413,"byte_end":62416,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62421,"byte_end":62428,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62433,"byte_end":62474,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62479,"byte_end":62517,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62522,"byte_end":62568,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62573,"byte_end":62576,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62581,"byte_end":62641,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62646,"byte_end":62725,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62730,"byte_end":62733,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62738,"byte_end":62795,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62800,"byte_end":62852,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62857,"byte_end":62900,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62905,"byte_end":62914,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62919,"byte_end":62926,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64042,"byte_end":64056,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Unwraps this future's ouput, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's ouput, producing a future with this future's","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63212,"byte_end":63282,"line_start":542,"line_end":542,"column_start":5,"column_end":75}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63287,"byte_end":63324,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63329,"byte_end":63378,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63383,"byte_end":63386,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63391,"byte_end":63460,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63465,"byte_end":63538,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63543,"byte_end":63613,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63618,"byte_end":63636,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63641,"byte_end":63644,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63649,"byte_end":63717,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63722,"byte_end":63725,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63730,"byte_end":63744,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63749,"byte_end":63752,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63757,"byte_end":63764,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63769,"byte_end":63807,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63812,"byte_end":63815,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63820,"byte_end":63861,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63866,"byte_end":63918,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63923,"byte_end":63970,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63975,"byte_end":64008,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64013,"byte_end":64022,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64027,"byte_end":64034,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65310,"byte_end":65321,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64609,"byte_end":64662,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64667,"byte_end":64703,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64708,"byte_end":64711,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64716,"byte_end":64765,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64770,"byte_end":64837,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64842,"byte_end":64855,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64860,"byte_end":64863,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64868,"byte_end":64882,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64887,"byte_end":64890,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64895,"byte_end":64902,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64907,"byte_end":64966,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64971,"byte_end":64974,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64979,"byte_end":64998,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65003,"byte_end":65021,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65026,"byte_end":65098,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65103,"byte_end":65135,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65140,"byte_end":65147,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65152,"byte_end":65228,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65233,"byte_end":65236,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65241,"byte_end":65290,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65295,"byte_end":65302,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65580,"byte_end":65594,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65477,"byte_end":65550,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65555,"byte_end":65572,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":4272},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":73931,"byte_end":73935,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":4274}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":73797,"byte_end":73834,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":73852,"byte_end":73919,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":317},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74476,"byte_end":74480,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74039,"byte_end":74107,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74108,"byte_end":74111,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74112,"byte_end":74175,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74176,"byte_end":74179,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74180,"byte_end":74194,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74195,"byte_end":74198,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74199,"byte_end":74206,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74207,"byte_end":74248,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74249,"byte_end":74273,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74274,"byte_end":74277,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74278,"byte_end":74310,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74311,"byte_end":74338,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74339,"byte_end":74342,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74343,"byte_end":74380,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74381,"byte_end":74405,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74406,"byte_end":74413,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74414,"byte_end":74450,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74451,"byte_end":74460,"line_start":32,"line_end":32,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74461,"byte_end":74468,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4278},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":75246,"byte_end":75253,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":4280}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":75107,"byte_end":75149,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":75167,"byte_end":75234,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":344},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":75772,"byte_end":75779,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":75394,"byte_end":75474,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":75475,"byte_end":75488,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":75489,"byte_end":75492,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":75493,"byte_end":75555,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":75556,"byte_end":75559,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":75560,"byte_end":75574,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":75575,"byte_end":75578,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":75579,"byte_end":75592,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":75593,"byte_end":75634,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":75635,"byte_end":75659,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":75660,"byte_end":75663,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":75664,"byte_end":75699,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":75700,"byte_end":75726,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":75727,"byte_end":75746,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":75747,"byte_end":75756,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":75757,"byte_end":75764,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4286},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":76582,"byte_end":76588,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":4284},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":76547,"byte_end":76577,"line_start":14,"line_end":14,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4288},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":76649,"byte_end":76653,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":4284},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":76606,"byte_end":76644,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4291},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":76815,"byte_end":76819,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":4284},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":76672,"byte_end":76738,"line_start":18,"line_end":18,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":76743,"byte_end":76810,"line_start":19,"line_end":19,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":4284},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":76518,"byte_end":76527,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(\n           #[pin]\n           Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":4286},{"krate":0,"index":4288},{"krate":0,"index":4291}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"pin(__private(project = MaybeDoneProj, project_replace = MaybeDoneProjOwn))","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":76416,"byte_end":76491,"line_start":11,"line_end":11,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4321},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":76518,"byte_end":76527,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"__MaybeDone","qualname":"::future::maybe_done::_::__MaybeDone","value":"__MaybeDone {  }","parent":null,"children":[{"krate":0,"index":4324},{"krate":0,"index":4325}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":76416,"byte_end":76491,"line_start":11,"line_end":11,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":367},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":77285,"byte_end":77295,"line_start":40,"line_end":40,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":76824,"byte_end":76861,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":76862,"byte_end":76865,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":76866,"byte_end":76880,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":76881,"byte_end":76884,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":76885,"byte_end":76892,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":76893,"byte_end":76934,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":76935,"byte_end":76959,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":76960,"byte_end":76985,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":76986,"byte_end":76989,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":76990,"byte_end":77039,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":77040,"byte_end":77061,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":77062,"byte_end":77114,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":77115,"byte_end":77150,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":77151,"byte_end":77206,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":77207,"byte_end":77259,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":77260,"byte_end":77269,"line_start":38,"line_end":38,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":77270,"byte_end":77277,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":77712,"byte_end":77722,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":77414,"byte_end":77499,"line_start":45,"line_end":45,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":77504,"byte_end":77575,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":77580,"byte_end":77653,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":77658,"byte_end":77686,"line_start":48,"line_end":48,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":77691,"byte_end":77700,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":78021,"byte_end":78032,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":77901,"byte_end":77967,"line_start":57,"line_end":57,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":77972,"byte_end":77995,"line_start":58,"line_end":58,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":78000,"byte_end":78009,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4345},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":79612,"byte_end":79618,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":4343},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":79577,"byte_end":79607,"line_start":14,"line_end":14,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4347},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":79679,"byte_end":79683,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":4343},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":79636,"byte_end":79674,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4350},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":79891,"byte_end":79895,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":4343},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":79698,"byte_end":79767,"line_start":18,"line_end":18,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":79772,"byte_end":79842,"line_start":19,"line_end":19,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":79847,"byte_end":79886,"line_start":20,"line_end":20,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":4343},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":79542,"byte_end":79554,"line_start":13,"line_end":13,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> {\n\n    /// A not-yet-completed future\n    Future(\n           #[pin]\n           Fut),\n\n    /// The output of the completed future\n    Done(Fut::Ok),\n\n    /// The empty variant after the result of a [`TryMaybeDone`] has been\n    /// taken using the [`take_output`](TryMaybeDone::take_output) method,\n    /// or if the future returned an error.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":4345},{"krate":0,"index":4347},{"krate":0,"index":4350}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"pin(__private(project = TryMaybeDoneProj, project_replace =\n                TryMaybeDoneProjOwn))","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":79434,"byte_end":79515,"line_start":11,"line_end":11,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":4380},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":79542,"byte_end":79554,"line_start":13,"line_end":13,"column_start":10,"column_end":22},"name":"__TryMaybeDone","qualname":"::future::try_maybe_done::_::__TryMaybeDone","value":"__TryMaybeDone {  }","parent":null,"children":[{"krate":0,"index":4383},{"krate":0,"index":4384}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":79434,"byte_end":79515,"line_start":11,"line_end":11,"column_start":1,"column_end":82}}]},{"kind":"Function","id":{"krate":0,"index":393},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":79948,"byte_end":79962,"line_start":25,"line_end":25,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":79900,"byte_end":79940,"line_start":24,"line_end":24,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":80405,"byte_end":80415,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":80096,"byte_end":80181,"line_start":30,"line_end":30,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":80186,"byte_end":80257,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":80262,"byte_end":80346,"line_start":32,"line_end":32,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":80351,"byte_end":80379,"line_start":33,"line_end":33,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":80384,"byte_end":80393,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":80716,"byte_end":80727,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":80593,"byte_end":80662,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":80667,"byte_end":80690,"line_start":43,"line_end":43,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":80695,"byte_end":80704,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4402},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":82839,"byte_end":82851,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":82760,"byte_end":82827,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":82721,"byte_end":82735,"line_start":25,"line_end":25,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4425},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":82839,"byte_end":82851,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"__OptionFuture","qualname":"::future::option::_::__OptionFuture","value":"__OptionFuture {  }","parent":null,"children":[{"krate":0,"index":4428},{"krate":0,"index":4429}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":82721,"byte_end":82735,"line_start":25,"line_end":25,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":436},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":83821,"byte_end":83827,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":438}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":83701,"byte_end":83741,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":83742,"byte_end":83809,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":441},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":84414,"byte_end":84421,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":83878,"byte_end":83949,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":83950,"byte_end":83953,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":83954,"byte_end":84020,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":84021,"byte_end":84024,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":84025,"byte_end":84039,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":84040,"byte_end":84043,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":84044,"byte_end":84051,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":84052,"byte_end":84093,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":84094,"byte_end":84127,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":84128,"byte_end":84167,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":84168,"byte_end":84171,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":84172,"byte_end":84229,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":84230,"byte_end":84273,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":84274,"byte_end":84279,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":84280,"byte_end":84283,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":84284,"byte_end":84325,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":84326,"byte_end":84388,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":84389,"byte_end":84398,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":84399,"byte_end":84406,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4450},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85141,"byte_end":85146,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":84990,"byte_end":85037,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85062,"byte_end":85129,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85269,"byte_end":85279,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85186,"byte_end":85243,"line_start":11,"line_end":11,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85248,"byte_end":85257,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":475},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85945,"byte_end":85950,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85699,"byte_end":85759,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85760,"byte_end":85763,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85764,"byte_end":85778,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85779,"byte_end":85782,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85783,"byte_end":85790,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85791,"byte_end":85832,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85833,"byte_end":85857,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85858,"byte_end":85861,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85862,"byte_end":85891,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85892,"byte_end":85919,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85920,"byte_end":85929,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85930,"byte_end":85937,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":477},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86262,"byte_end":86264,"line_start":63,"line_end":63,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85996,"byte_end":86063,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86064,"byte_end":86067,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86068,"byte_end":86082,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86083,"byte_end":86086,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86087,"byte_end":86094,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86095,"byte_end":86136,"line_start":56,"line_end":56,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86137,"byte_end":86161,"line_start":57,"line_end":57,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86162,"byte_end":86165,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86166,"byte_end":86204,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86205,"byte_end":86236,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86237,"byte_end":86246,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86247,"byte_end":86254,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":480},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86595,"byte_end":86598,"line_start":79,"line_end":79,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86328,"byte_end":86394,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86395,"byte_end":86398,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86399,"byte_end":86413,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86414,"byte_end":86417,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86418,"byte_end":86425,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86426,"byte_end":86467,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86468,"byte_end":86492,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86493,"byte_end":86496,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86497,"byte_end":86536,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86537,"byte_end":86569,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86570,"byte_end":86579,"line_start":77,"line_end":77,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":86580,"byte_end":86587,"line_start":78,"line_end":78,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4552},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":87063,"byte_end":87077,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":4555},{"krate":0,"index":4556}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":87063,"byte_end":87077,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4580},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":87063,"byte_end":87077,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join","qualname":"::future::join::_::__Join","value":"__Join {  }","parent":null,"children":[{"krate":0,"index":4584},{"krate":0,"index":4585},{"krate":0,"index":4586}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":87063,"byte_end":87077,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4605},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":87063,"byte_end":87077,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":4609},{"krate":0,"index":4610},{"krate":0,"index":4611}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":87063,"byte_end":87077,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4641},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":87063,"byte_end":87077,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join3","qualname":"::future::join::_::__Join3","value":"__Join3 {  }","parent":null,"children":[{"krate":0,"index":4646},{"krate":0,"index":4647},{"krate":0,"index":4648},{"krate":0,"index":4649}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":87063,"byte_end":87077,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4672},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":87063,"byte_end":87077,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":4677},{"krate":0,"index":4678},{"krate":0,"index":4679},{"krate":0,"index":4680}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":87063,"byte_end":87077,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4716},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":87063,"byte_end":87077,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join4","qualname":"::future::join::_::__Join4","value":"__Join4 {  }","parent":null,"children":[{"krate":0,"index":4722},{"krate":0,"index":4723},{"krate":0,"index":4724},{"krate":0,"index":4725},{"krate":0,"index":4726}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":87063,"byte_end":87077,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4753},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":87063,"byte_end":87077,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":4759},{"krate":0,"index":4760},{"krate":0,"index":4761},{"krate":0,"index":4762},{"krate":0,"index":4763}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":87063,"byte_end":87077,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4805},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":87063,"byte_end":87077,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join5","qualname":"::future::join::_::__Join5","value":"__Join5 {  }","parent":null,"children":[{"krate":0,"index":4812},{"krate":0,"index":4813},{"krate":0,"index":4814},{"krate":0,"index":4815},{"krate":0,"index":4816},{"krate":0,"index":4817}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":87063,"byte_end":87077,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":503},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89713,"byte_end":89717,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89136,"byte_end":89207,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89208,"byte_end":89211,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89212,"byte_end":89283,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89284,"byte_end":89359,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89360,"byte_end":89363,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89364,"byte_end":89433,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89434,"byte_end":89460,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89461,"byte_end":89464,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89465,"byte_end":89479,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89480,"byte_end":89483,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89484,"byte_end":89491,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89492,"byte_end":89533,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89534,"byte_end":89558,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89559,"byte_end":89562,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89563,"byte_end":89587,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89588,"byte_end":89612,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89613,"byte_end":89647,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89648,"byte_end":89651,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89652,"byte_end":89687,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89688,"byte_end":89697,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89698,"byte_end":89705,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":506},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90263,"byte_end":90268,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89924,"byte_end":89976,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89977,"byte_end":89980,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89981,"byte_end":89995,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":89996,"byte_end":89999,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90000,"byte_end":90007,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90008,"byte_end":90049,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90050,"byte_end":90074,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90075,"byte_end":90078,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90079,"byte_end":90103,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90104,"byte_end":90128,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90129,"byte_end":90153,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90154,"byte_end":90193,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90194,"byte_end":90197,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90198,"byte_end":90237,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90238,"byte_end":90247,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90248,"byte_end":90255,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":510},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90851,"byte_end":90856,"line_start":166,"line_end":166,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90481,"byte_end":90533,"line_start":149,"line_end":149,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90534,"byte_end":90537,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90538,"byte_end":90552,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90553,"byte_end":90556,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90557,"byte_end":90564,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90565,"byte_end":90606,"line_start":154,"line_end":154,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90607,"byte_end":90631,"line_start":155,"line_end":155,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90632,"byte_end":90635,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90636,"byte_end":90660,"line_start":157,"line_end":157,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90661,"byte_end":90685,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90686,"byte_end":90710,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90711,"byte_end":90735,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90736,"byte_end":90778,"line_start":161,"line_end":161,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90779,"byte_end":90782,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90783,"byte_end":90825,"line_start":163,"line_end":163,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90826,"byte_end":90835,"line_start":164,"line_end":164,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":90836,"byte_end":90843,"line_start":165,"line_end":165,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":515},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":91528,"byte_end":91533,"line_start":199,"line_end":199,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":91127,"byte_end":91179,"line_start":181,"line_end":181,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":91180,"byte_end":91183,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":91184,"byte_end":91198,"line_start":183,"line_end":183,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":91199,"byte_end":91202,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":91203,"byte_end":91210,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":91211,"byte_end":91252,"line_start":186,"line_end":186,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":91253,"byte_end":91277,"line_start":187,"line_end":187,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":91278,"byte_end":91281,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":91282,"byte_end":91306,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":91307,"byte_end":91331,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":91332,"byte_end":91356,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":91357,"byte_end":91381,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":91382,"byte_end":91406,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":91407,"byte_end":91452,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":91453,"byte_end":91456,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":91457,"byte_end":91502,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":91503,"byte_end":91512,"line_start":197,"line_end":197,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":91513,"byte_end":91520,"line_start":198,"line_end":198,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4848},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92151,"byte_end":92157,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":4851}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92013,"byte_end":92054,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92055,"byte_end":92122,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":544},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":94305,"byte_end":94311,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92248,"byte_end":92318,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92319,"byte_end":92322,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92323,"byte_end":92401,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92402,"byte_end":92478,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92479,"byte_end":92551,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92552,"byte_end":92555,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92556,"byte_end":92628,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92629,"byte_end":92657,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92658,"byte_end":92661,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92662,"byte_end":92729,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92730,"byte_end":92794,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92795,"byte_end":92845,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92846,"byte_end":92849,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92850,"byte_end":92864,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92865,"byte_end":92868,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92869,"byte_end":92889,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92890,"byte_end":92893,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92894,"byte_end":92901,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92902,"byte_end":92943,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, Either};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92944,"byte_end":92984,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92985,"byte_end":93010,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93011,"byte_end":93014,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93015,"byte_end":93105,"line_start":37,"line_end":37,"column_start":1,"column_end":91}},{"value":"/ let future1 = async { 1 };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93106,"byte_end":93136,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/ let future2 = async { 2 };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93137,"byte_end":93167,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93168,"byte_end":93171,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93172,"byte_end":93218,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93219,"byte_end":93241,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93242,"byte_end":93264,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93265,"byte_end":93268,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93269,"byte_end":93331,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1, // `value1` is resolved from `future1`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93332,"byte_end":93415,"line_start":46,"line_end":46,"column_start":1,"column_end":84}},{"value":"/                                          // `_` represents `future2`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93416,"byte_end":93488,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93489,"byte_end":93573,"line_start":48,"line_end":48,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93574,"byte_end":93647,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93648,"byte_end":93654,"line_start":50,"line_end":50,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93655,"byte_end":93658,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 1 || value == 2);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93659,"byte_end":93697,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93698,"byte_end":93707,"line_start":53,"line_end":53,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93708,"byte_end":93715,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93716,"byte_end":93719,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93720,"byte_end":93746,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93747,"byte_end":93750,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93751,"byte_end":93758,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93759,"byte_end":93818,"line_start":59,"line_end":59,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93819,"byte_end":93822,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93823,"byte_end":93876,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93877,"byte_end":93880,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93881,"byte_end":93956,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93957,"byte_end":93989,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":93990,"byte_end":94022,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":94023,"byte_end":94028,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":94029,"byte_end":94073,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":94074,"byte_end":94100,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":94101,"byte_end":94178,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":94179,"byte_end":94258,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":94259,"byte_end":94272,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":94273,"byte_end":94283,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":94284,"byte_end":94289,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":94290,"byte_end":94297,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4926},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":95711,"byte_end":95725,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":4929},{"krate":0,"index":4930}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":95711,"byte_end":95725,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4954},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":95711,"byte_end":95725,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin","qualname":"::future::try_join::_::__TryJoin","value":"__TryJoin {  }","parent":null,"children":[{"krate":0,"index":4958},{"krate":0,"index":4959},{"krate":0,"index":4960}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":95711,"byte_end":95725,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4979},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":95711,"byte_end":95725,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":4983},{"krate":0,"index":4984},{"krate":0,"index":4985}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":95711,"byte_end":95725,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5015},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":95711,"byte_end":95725,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin3","qualname":"::future::try_join::_::__TryJoin3","value":"__TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":5020},{"krate":0,"index":5021},{"krate":0,"index":5022},{"krate":0,"index":5023}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":95711,"byte_end":95725,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5046},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":95711,"byte_end":95725,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":5051},{"krate":0,"index":5052},{"krate":0,"index":5053},{"krate":0,"index":5054}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":95711,"byte_end":95725,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5090},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":95711,"byte_end":95725,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin4","qualname":"::future::try_join::_::__TryJoin4","value":"__TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":5096},{"krate":0,"index":5097},{"krate":0,"index":5098},{"krate":0,"index":5099},{"krate":0,"index":5100}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":95711,"byte_end":95725,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5127},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":95711,"byte_end":95725,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":5133},{"krate":0,"index":5134},{"krate":0,"index":5135},{"krate":0,"index":5136},{"krate":0,"index":5137}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":95711,"byte_end":95725,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5179},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":95711,"byte_end":95725,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin5","qualname":"::future::try_join::_::__TryJoin5","value":"__TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":5186},{"krate":0,"index":5187},{"krate":0,"index":5188},{"krate":0,"index":5189},{"krate":0,"index":5190},{"krate":0,"index":5191}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":95711,"byte_end":95725,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":573},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99707,"byte_end":99715,"line_start":147,"line_end":147,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":98473,"byte_end":98546,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":98547,"byte_end":98579,"line_start":106,"line_end":106,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":98580,"byte_end":98583,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":98584,"byte_end":98655,"line_start":108,"line_end":108,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":98656,"byte_end":98732,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccesful, it will complete with the first error","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":98733,"byte_end":98804,"line_start":110,"line_end":110,"column_start":1,"column_end":72}},{"value":"/ encountered.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":98805,"byte_end":98821,"line_start":111,"line_end":111,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":98822,"byte_end":98825,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":98826,"byte_end":98895,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":98896,"byte_end":98922,"line_start":114,"line_end":114,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":98923,"byte_end":98926,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":98927,"byte_end":98941,"line_start":116,"line_end":116,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":98942,"byte_end":98945,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":98946,"byte_end":99022,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99023,"byte_end":99059,"line_start":119,"line_end":119,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99060,"byte_end":99063,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99064,"byte_end":99071,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99072,"byte_end":99113,"line_start":122,"line_end":122,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99114,"byte_end":99138,"line_start":123,"line_end":123,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99139,"byte_end":99142,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99143,"byte_end":99188,"line_start":125,"line_end":125,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99189,"byte_end":99234,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99235,"byte_end":99273,"line_start":127,"line_end":127,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99274,"byte_end":99277,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99278,"byte_end":99317,"line_start":129,"line_end":129,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99318,"byte_end":99327,"line_start":130,"line_end":130,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99328,"byte_end":99335,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99336,"byte_end":99339,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99340,"byte_end":99410,"line_start":133,"line_end":133,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99411,"byte_end":99426,"line_start":134,"line_end":134,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99427,"byte_end":99430,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99431,"byte_end":99438,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99439,"byte_end":99480,"line_start":137,"line_end":137,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99481,"byte_end":99505,"line_start":138,"line_end":138,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99506,"byte_end":99509,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99510,"byte_end":99555,"line_start":140,"line_end":140,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99556,"byte_end":99602,"line_start":141,"line_end":141,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99603,"byte_end":99641,"line_start":142,"line_end":142,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99642,"byte_end":99645,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99646,"byte_end":99681,"line_start":144,"line_end":144,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99682,"byte_end":99691,"line_start":145,"line_end":145,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99692,"byte_end":99699,"line_start":146,"line_end":146,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":576},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100308,"byte_end":100317,"line_start":171,"line_end":171,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99890,"byte_end":99950,"line_start":155,"line_end":155,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99951,"byte_end":99954,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99955,"byte_end":99969,"line_start":157,"line_end":157,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99970,"byte_end":99973,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99974,"byte_end":99981,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":99982,"byte_end":100023,"line_start":160,"line_end":160,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100024,"byte_end":100048,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100049,"byte_end":100052,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100053,"byte_end":100098,"line_start":163,"line_end":163,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100099,"byte_end":100144,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100145,"byte_end":100190,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100191,"byte_end":100234,"line_start":166,"line_end":166,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100235,"byte_end":100238,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100239,"byte_end":100282,"line_start":168,"line_end":168,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100283,"byte_end":100292,"line_start":169,"line_end":169,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100293,"byte_end":100300,"line_start":170,"line_end":170,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":580},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":101057,"byte_end":101066,"line_start":201,"line_end":201,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100587,"byte_end":100647,"line_start":184,"line_end":184,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100648,"byte_end":100651,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100652,"byte_end":100666,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100667,"byte_end":100670,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100671,"byte_end":100678,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100679,"byte_end":100720,"line_start":189,"line_end":189,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100721,"byte_end":100745,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100746,"byte_end":100749,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100750,"byte_end":100795,"line_start":192,"line_end":192,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100796,"byte_end":100841,"line_start":193,"line_end":193,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100842,"byte_end":100887,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100888,"byte_end":100933,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100934,"byte_end":100980,"line_start":196,"line_end":196,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100981,"byte_end":100984,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":100985,"byte_end":101031,"line_start":198,"line_end":198,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":101032,"byte_end":101041,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":101042,"byte_end":101049,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":585},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":101940,"byte_end":101949,"line_start":234,"line_end":234,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":101418,"byte_end":101478,"line_start":216,"line_end":216,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":101479,"byte_end":101482,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":101483,"byte_end":101497,"line_start":218,"line_end":218,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":101498,"byte_end":101501,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":101502,"byte_end":101509,"line_start":220,"line_end":220,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":101510,"byte_end":101551,"line_start":221,"line_end":221,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":101552,"byte_end":101576,"line_start":222,"line_end":222,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":101577,"byte_end":101580,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":101581,"byte_end":101626,"line_start":224,"line_end":224,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":101627,"byte_end":101672,"line_start":225,"line_end":225,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":101673,"byte_end":101718,"line_start":226,"line_end":226,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":101719,"byte_end":101764,"line_start":227,"line_end":227,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":101765,"byte_end":101810,"line_start":228,"line_end":228,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":101811,"byte_end":101860,"line_start":229,"line_end":229,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":101861,"byte_end":101864,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":101865,"byte_end":101914,"line_start":231,"line_end":231,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":101915,"byte_end":101924,"line_start":232,"line_end":232,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":101925,"byte_end":101932,"line_start":233,"line_end":233,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5222},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":102677,"byte_end":102686,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":5225}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":102535,"byte_end":102580,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":102581,"byte_end":102648,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":614},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":104271,"byte_end":104281,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":102780,"byte_end":102850,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":102851,"byte_end":102854,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":102855,"byte_end":102933,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":102934,"byte_end":103010,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":103011,"byte_end":103083,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":103084,"byte_end":103087,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":103088,"byte_end":103160,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":103161,"byte_end":103189,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":103190,"byte_end":103193,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":103194,"byte_end":103261,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":103262,"byte_end":103333,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":103334,"byte_end":103384,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":103385,"byte_end":103388,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":103389,"byte_end":103403,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":103404,"byte_end":103407,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":103408,"byte_end":103415,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":103416,"byte_end":103500,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":103501,"byte_end":103504,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":103505,"byte_end":103562,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":103563,"byte_end":103566,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":103567,"byte_end":103649,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":103650,"byte_end":103707,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":103708,"byte_end":103765,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":103766,"byte_end":103792,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":103793,"byte_end":103798,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":103799,"byte_end":103894,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":103895,"byte_end":103918,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":103919,"byte_end":103999,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":104000,"byte_end":104081,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":104082,"byte_end":104152,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":104153,"byte_end":104224,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":104225,"byte_end":104238,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":104239,"byte_end":104249,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":104250,"byte_end":104255,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":104256,"byte_end":104263,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5233},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":105887,"byte_end":105891,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":5230},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":105854,"byte_end":105882,"line_start":14,"line_end":14,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5235},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":105941,"byte_end":105946,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":5230},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":105907,"byte_end":105936,"line_start":16,"line_end":16,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":5230},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":105835,"byte_end":105841,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> {\n\n    /// First branch of the type\n    Left(\n         #[pin]\n         A),\n\n    /// Second branch of the type\n    Right(\n          #[pin]\n          B),\n}","parent":null,"children":[{"krate":0,"index":5233},{"krate":0,"index":5235}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single\n type.\n","sig":null,"attributes":[{"value":"pin(__private(project = EitherProj))","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":105765,"byte_end":105801,"line_start":11,"line_end":11,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5255},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":105835,"byte_end":105841,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"__Either","qualname":"::future::either::_::__Either","value":"__Either {  }","parent":null,"children":[{"krate":0,"index":5259},{"krate":0,"index":5260},{"krate":0,"index":5261}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":105765,"byte_end":105801,"line_start":11,"line_end":11,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":106152,"byte_end":106164,"line_start":24,"line_end":24,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":106004,"byte_end":106062,"line_start":21,"line_end":21,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":106067,"byte_end":106070,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":106075,"byte_end":106140,"line_start":23,"line_end":23,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":106544,"byte_end":106557,"line_start":36,"line_end":36,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":106395,"byte_end":106453,"line_start":33,"line_end":33,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":106458,"byte_end":106461,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":106466,"byte_end":106532,"line_start":35,"line_end":35,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":106845,"byte_end":106855,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":106772,"byte_end":106833,"line_start":45,"line_end":45,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":675},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1976},{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1982},{"krate":0,"index":1983},{"krate":0,"index":1984},{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":1987},{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":2013},{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2086},{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2136},{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2139},{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":2210},{"krate":0,"index":2211},{"krate":0,"index":2212},{"krate":0,"index":2213}],"decl_id":null,"docs":" Streams","sig":null,"attributes":[{"value":"! Streams","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113239,"byte_end":113250,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113251,"byte_end":113254,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Stream`s,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113255,"byte_end":113329,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! including the [`StreamExt`] trait and the [`TryStreamExt`] trait which add","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113330,"byte_end":113408,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! methods to `Stream` types","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":113409,"byte_end":113438,"line_start":5,"line_end":5,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":5288},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":164305,"byte_end":164310,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":5291},{"krate":0,"index":5292}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":164245,"byte_end":164293,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":164213,"byte_end":164227,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5316},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":164305,"byte_end":164310,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"__Chain","qualname":"::stream::stream::chain::_::__Chain","value":"__Chain {  }","parent":null,"children":[{"krate":0,"index":5320},{"krate":0,"index":5321},{"krate":0,"index":5322}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":164213,"byte_end":164227,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5345},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":166423,"byte_end":166430,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":5349},{"krate":0,"index":5348}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":166344,"byte_end":166411,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":166312,"byte_end":166326,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5373},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":166423,"byte_end":166430,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"__Collect","qualname":"::stream::stream::collect::_::__Collect","value":"__Collect {  }","parent":null,"children":[{"krate":0,"index":5377},{"krate":0,"index":5378}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":166312,"byte_end":166326,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5401},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":167829,"byte_end":167835,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":5404},{"krate":0,"index":5403}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":167750,"byte_end":167817,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":167718,"byte_end":167732,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5424},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":167829,"byte_end":167835,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"__Concat","qualname":"::stream::stream::concat::_::__Concat","value":"__Concat {  }","parent":null,"children":[{"krate":0,"index":5427},{"krate":0,"index":5428}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":167718,"byte_end":167732,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5446},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":169574,"byte_end":169583,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":5449},{"krate":0,"index":5448}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":169514,"byte_end":169562,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":169482,"byte_end":169496,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5469},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":169574,"byte_end":169583,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"__Enumerate","qualname":"::stream::stream::enumerate::_::__Enumerate","value":"__Enumerate {  }","parent":null,"children":[{"krate":0,"index":5472},{"krate":0,"index":5473}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":169482,"byte_end":169496,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5495},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":171225,"byte_end":171231,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":5501},{"krate":0,"index":5499},{"krate":0,"index":5502},{"krate":0,"index":5500}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":171165,"byte_end":171213,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":171150,"byte_end":171164,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5534},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":171225,"byte_end":171231,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"__Filter","qualname":"::stream::stream::filter::_::__Filter","value":"__Filter {  }","parent":null,"children":[{"krate":0,"index":5539},{"krate":0,"index":5540},{"krate":0,"index":5541}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":171150,"byte_end":171164,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5568},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":174673,"byte_end":174682,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":5573},{"krate":0,"index":5572},{"krate":0,"index":5574}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":174613,"byte_end":174661,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":174598,"byte_end":174612,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5604},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":174673,"byte_end":174682,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__FilterMap","qualname":"::stream::stream::filter_map::_::__FilterMap","value":"__FilterMap {  }","parent":null,"children":[{"krate":0,"index":5609},{"krate":0,"index":5610},{"krate":0,"index":5611}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":174598,"byte_end":174612,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5638},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":177703,"byte_end":177710,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":5641},{"krate":0,"index":5642}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":177643,"byte_end":177691,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":177611,"byte_end":177625,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5666},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":177703,"byte_end":177710,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"__Flatten","qualname":"::stream::stream::flatten::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":5670},{"krate":0,"index":5671},{"krate":0,"index":5672}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":177611,"byte_end":177625,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5701},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":5703}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5721},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__Flatten","qualname":"::stream::stream::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":5724},{"krate":0,"index":5725}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5760},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":179463,"byte_end":179467,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":5767},{"krate":0,"index":5765},{"krate":0,"index":5766},{"krate":0,"index":5768}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":179384,"byte_end":179451,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":179369,"byte_end":179383,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5804},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":179463,"byte_end":179467,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"__Fold","qualname":"::stream::stream::fold::_::__Fold","value":"__Fold {  }","parent":null,"children":[{"krate":0,"index":5810},{"krate":0,"index":5811},{"krate":0,"index":5812}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":179369,"byte_end":179383,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5839},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":181973,"byte_end":181980,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":5844},{"krate":0,"index":5843},{"krate":0,"index":5845}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":181894,"byte_end":181961,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":181879,"byte_end":181893,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5875},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":181973,"byte_end":181980,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"__ForEach","qualname":"::stream::stream::for_each::_::__ForEach","value":"__ForEach {  }","parent":null,"children":[{"krate":0,"index":5880},{"krate":0,"index":5881},{"krate":0,"index":5882}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":181879,"byte_end":181893,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5905},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":183952,"byte_end":183956,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":5908},{"krate":0,"index":5907}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":183892,"byte_end":183940,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":183860,"byte_end":183874,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5928},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":183952,"byte_end":183956,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"__Fuse","qualname":"::stream::stream::fuse::_::__Fuse","value":"__Fuse {  }","parent":null,"children":[{"krate":0,"index":5931},{"krate":0,"index":5932}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":183860,"byte_end":183874,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":184394,"byte_end":184401,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":184125,"byte_end":184187,"line_start":23,"line_end":23,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":184192,"byte_end":184195,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":184200,"byte_end":184268,"line_start":25,"line_end":25,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":184273,"byte_end":184339,"line_start":26,"line_end":26,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":184344,"byte_end":184382,"line_start":27,"line_end":27,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":5954},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":185758,"byte_end":185770,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":5956}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":185588,"byte_end":185661,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":185679,"byte_end":185746,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":186353,"byte_end":186360,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":185961,"byte_end":186034,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":186039,"byte_end":186056,"line_start":20,"line_end":20,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":186061,"byte_end":186064,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":186069,"byte_end":186150,"line_start":22,"line_end":22,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":186155,"byte_end":186237,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":186242,"byte_end":186321,"line_start":24,"line_end":24,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":186326,"byte_end":186341,"line_start":25,"line_end":25,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":186971,"byte_end":186978,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":186425,"byte_end":186492,"line_start":30,"line_end":30,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":186497,"byte_end":186528,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":186533,"byte_end":186536,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":186541,"byte_end":186614,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":186619,"byte_end":186674,"line_start":34,"line_end":34,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":186679,"byte_end":186682,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":186687,"byte_end":186768,"line_start":36,"line_end":36,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":186773,"byte_end":186855,"line_start":37,"line_end":37,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":186860,"byte_end":186939,"line_start":38,"line_end":38,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":186944,"byte_end":186959,"line_start":39,"line_end":39,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":187604,"byte_end":187615,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":187051,"byte_end":187125,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":187130,"byte_end":187161,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":187166,"byte_end":187169,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":187174,"byte_end":187247,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":187252,"byte_end":187307,"line_start":48,"line_end":48,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":187312,"byte_end":187315,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":187320,"byte_end":187401,"line_start":50,"line_end":50,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":187406,"byte_end":187488,"line_start":51,"line_end":51,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":187493,"byte_end":187572,"line_start":52,"line_end":52,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":187577,"byte_end":187592,"line_start":53,"line_end":53,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":188248,"byte_end":188258,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":187728,"byte_end":187790,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":187795,"byte_end":187798,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":187803,"byte_end":187875,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":187880,"byte_end":187951,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":187956,"byte_end":187959,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":187964,"byte_end":188045,"line_start":63,"line_end":63,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":188050,"byte_end":188132,"line_start":64,"line_end":64,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":188137,"byte_end":188216,"line_start":65,"line_end":65,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":188221,"byte_end":188236,"line_start":66,"line_end":66,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5963},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":5966}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5988},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__Inspect","qualname":"::stream::stream::_::__Inspect","value":"__Inspect {  }","parent":null,"children":[{"krate":0,"index":5992},{"krate":0,"index":5993}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6037},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":189263,"byte_end":189266,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":6041},{"krate":0,"index":6040}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":189203,"byte_end":189251,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":189188,"byte_end":189202,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6065},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":189263,"byte_end":189266,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"__Map","qualname":"::stream::stream::map::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":6069},{"krate":0,"index":6070}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":189188,"byte_end":189202,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6097},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":6101}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6127},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__FlatMap","qualname":"::stream::stream::_::__FlatMap","value":"__FlatMap {  }","parent":null,"children":[{"krate":0,"index":6132},{"krate":0,"index":6133}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6186},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":190980,"byte_end":190984,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":6189}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":190824,"byte_end":190883,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":190901,"byte_end":190968,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6194},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":191990,"byte_end":192004,"line_start":11,"line_end":11,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":6197}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":191806,"byte_end":191881,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":191882,"byte_end":191893,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":191911,"byte_end":191978,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6202},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":193487,"byte_end":193495,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":6205},{"krate":0,"index":6204}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":193427,"byte_end":193475,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":193395,"byte_end":193409,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6225},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":193487,"byte_end":193495,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"__Peekable","qualname":"::stream::stream::peek::_::__Peekable","value":"__Peekable {  }","parent":null,"children":[{"krate":0,"index":6228},{"krate":0,"index":6229}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":193395,"byte_end":193409,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":193962,"byte_end":193966,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a `Peek` future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a `Peek` future which retrieves a reference to the next item","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":193807,"byte_end":193880,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":193885,"byte_end":193950,"line_start":36,"line_end":36,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":194291,"byte_end":194300,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":194053,"byte_end":194115,"line_start":41,"line_end":41,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":194120,"byte_end":194123,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":194128,"byte_end":194201,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":194206,"byte_end":194279,"line_start":44,"line_end":44,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":6251},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":196010,"byte_end":196014,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":6254}],"decl_id":null,"docs":" Future for the [`Peekable::peek()`](self::Peekable::peek) function from [`Peekable`]\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":195950,"byte_end":195998,"line_start":105,"line_end":105,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":195935,"byte_end":195949,"line_start":104,"line_end":104,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6276},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":196010,"byte_end":196014,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"__Peek","qualname":"::stream::stream::peek::_::__Peek","value":"__Peek {  }","parent":null,"children":[{"krate":0,"index":6280},{"krate":0,"index":6281}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":195935,"byte_end":195949,"line_start":104,"line_end":104,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6300},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":197266,"byte_end":197270,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":6303},{"krate":0,"index":6302}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":197206,"byte_end":197254,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":197174,"byte_end":197188,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6323},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":197266,"byte_end":197270,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"__Skip","qualname":"::stream::stream::skip::_::__Skip","value":"__Skip {  }","parent":null,"children":[{"krate":0,"index":6326},{"krate":0,"index":6327}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":197174,"byte_end":197188,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6349},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":199116,"byte_end":199125,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":6356},{"krate":0,"index":6353},{"krate":0,"index":6357},{"krate":0,"index":6354},{"krate":0,"index":6355}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":199056,"byte_end":199104,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":199041,"byte_end":199055,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6391},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":199116,"byte_end":199125,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"__SkipWhile","qualname":"::stream::stream::skip_while::_::__SkipWhile","value":"__SkipWhile {  }","parent":null,"children":[{"krate":0,"index":6396},{"krate":0,"index":6397},{"krate":0,"index":6398}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":199041,"byte_end":199055,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6425},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":202711,"byte_end":202715,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":6428},{"krate":0,"index":6427}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":202651,"byte_end":202699,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":202619,"byte_end":202633,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6448},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":202711,"byte_end":202715,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Take","qualname":"::stream::stream::take::_::__Take","value":"__Take {  }","parent":null,"children":[{"krate":0,"index":6451},{"krate":0,"index":6452}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":202619,"byte_end":202633,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6474},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":204750,"byte_end":204759,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":6481},{"krate":0,"index":6478},{"krate":0,"index":6482},{"krate":0,"index":6479},{"krate":0,"index":6480}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":204690,"byte_end":204738,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":204675,"byte_end":204689,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6516},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":204750,"byte_end":204759,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"__TakeWhile","qualname":"::stream::stream::take_while::_::__TakeWhile","value":"__TakeWhile {  }","parent":null,"children":[{"krate":0,"index":6521},{"krate":0,"index":6522},{"krate":0,"index":6523}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":204675,"byte_end":204689,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6550},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":208313,"byte_end":208322,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":6555},{"krate":0,"index":6556},{"krate":0,"index":6553},{"krate":0,"index":6554}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":208253,"byte_end":208301,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":208238,"byte_end":208252,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6584},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":208313,"byte_end":208322,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"__TakeUntil","qualname":"::stream::stream::take_until::_::__TakeUntil","value":"__TakeUntil {  }","parent":null,"children":[{"krate":0,"index":6588},{"krate":0,"index":6589},{"krate":0,"index":6590}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":208238,"byte_end":208252,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":209679,"byte_end":209690,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":209379,"byte_end":209433,"line_start":58,"line_end":58,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":209438,"byte_end":209532,"line_start":59,"line_end":59,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":209537,"byte_end":209600,"line_start":60,"line_end":60,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":209605,"byte_end":209667,"line_start":61,"line_end":61,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210974,"byte_end":210985,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":209827,"byte_end":209892,"line_start":70,"line_end":70,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":209897,"byte_end":209954,"line_start":71,"line_end":71,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":209959,"byte_end":209962,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":209967,"byte_end":210032,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210037,"byte_end":210097,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210102,"byte_end":210105,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resovled yet,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210110,"byte_end":210178,"line_start":76,"line_end":76,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210183,"byte_end":210226,"line_start":77,"line_end":77,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210231,"byte_end":210234,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210239,"byte_end":210253,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210258,"byte_end":210261,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210266,"byte_end":210273,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210278,"byte_end":210319,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210324,"byte_end":210348,"line_start":83,"line_end":83,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210353,"byte_end":210396,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210401,"byte_end":210429,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210434,"byte_end":210437,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210442,"byte_end":210480,"line_start":87,"line_end":87,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210485,"byte_end":210488,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210493,"byte_end":210511,"line_start":89,"line_end":89,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210516,"byte_end":210558,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210563,"byte_end":210578,"line_start":91,"line_end":91,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210583,"byte_end":210602,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210607,"byte_end":210632,"line_start":93,"line_end":93,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210637,"byte_end":210653,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210658,"byte_end":210691,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210696,"byte_end":210705,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210710,"byte_end":210717,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210722,"byte_end":210725,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210730,"byte_end":210779,"line_start":99,"line_end":99,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210784,"byte_end":210838,"line_start":100,"line_end":100,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210843,"byte_end":210846,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210851,"byte_end":210898,"line_start":102,"line_end":102,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210903,"byte_end":210936,"line_start":103,"line_end":103,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210941,"byte_end":210950,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":210955,"byte_end":210962,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":211161,"byte_end":211171,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":211064,"byte_end":211125,"line_start":110,"line_end":110,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":211130,"byte_end":211149,"line_start":111,"line_end":111,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6613},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":213061,"byte_end":213065,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":6618},{"krate":0,"index":6619},{"krate":0,"index":6617}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":213001,"byte_end":213049,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":212986,"byte_end":213000,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6649},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":213061,"byte_end":213065,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Then","qualname":"::stream::stream::then::_::__Then","value":"__Then {  }","parent":null,"children":[{"krate":0,"index":6654},{"krate":0,"index":6655},{"krate":0,"index":6656}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":212986,"byte_end":213000,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6683},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":215707,"byte_end":215710,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":6688},{"krate":0,"index":6689},{"krate":0,"index":6686},{"krate":0,"index":6687}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":215647,"byte_end":215695,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":215615,"byte_end":215629,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6717},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":215707,"byte_end":215710,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"__Zip","qualname":"::stream::stream::zip::_::__Zip","value":"__Zip {  }","parent":null,"children":[{"krate":0,"index":6721},{"krate":0,"index":6722},{"krate":0,"index":6723}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":215615,"byte_end":215629,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":216263,"byte_end":216270,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":216155,"byte_end":216229,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":216234,"byte_end":216251,"line_start":32,"line_end":32,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":216626,"byte_end":216633,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":216364,"byte_end":216432,"line_start":37,"line_end":37,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":216437,"byte_end":216468,"line_start":38,"line_end":38,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":216473,"byte_end":216476,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":216481,"byte_end":216554,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":216559,"byte_end":216614,"line_start":41,"line_end":41,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":217008,"byte_end":217019,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":216739,"byte_end":216814,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":216819,"byte_end":216850,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":216855,"byte_end":216858,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":216863,"byte_end":216936,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":216941,"byte_end":216996,"line_start":50,"line_end":50,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":217425,"byte_end":217435,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":217189,"byte_end":217252,"line_start":56,"line_end":56,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":217257,"byte_end":217260,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":217265,"byte_end":217337,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":217342,"byte_end":217413,"line_start":59,"line_end":59,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6746},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":220248,"byte_end":220252,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":6752},{"krate":0,"index":6751},{"krate":0,"index":6753}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":220188,"byte_end":220236,"line_start":17,"line_end":17,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":220173,"byte_end":220187,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6787},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":220248,"byte_end":220252,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"__Scan","qualname":"::stream::stream::scan::_::__Scan","value":"__Scan {  }","parent":null,"children":[{"krate":0,"index":6793},{"krate":0,"index":6794},{"krate":0,"index":6795}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":220173,"byte_end":220187,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":1393},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":122622,"byte_end":122631,"line_start":202,"line_end":202,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1403},{"krate":0,"index":1407},{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1421},{"krate":0,"index":1426},{"krate":0,"index":1429},{"krate":0,"index":1432},{"krate":0,"index":1434},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1443},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1448},{"krate":0,"index":1450},{"krate":0,"index":1452},{"krate":0,"index":1453}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":122511,"byte_end":122585,"line_start":200,"line_end":200,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":122586,"byte_end":122611,"line_start":201,"line_end":201,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123541,"byte_end":123545,"line_start":226,"line_end":226,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":122646,"byte_end":122712,"line_start":203,"line_end":203,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":122717,"byte_end":122720,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":122725,"byte_end":122793,"line_start":205,"line_end":205,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":122798,"byte_end":122873,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":122878,"byte_end":122953,"line_start":207,"line_end":207,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":122958,"byte_end":123012,"line_start":208,"line_end":208,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123017,"byte_end":123092,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123097,"byte_end":123107,"line_start":210,"line_end":210,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123112,"byte_end":123115,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123120,"byte_end":123134,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123139,"byte_end":123142,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123147,"byte_end":123154,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123159,"byte_end":123200,"line_start":215,"line_end":215,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123205,"byte_end":123248,"line_start":216,"line_end":216,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123253,"byte_end":123256,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123261,"byte_end":123302,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123307,"byte_end":123310,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123315,"byte_end":123360,"line_start":220,"line_end":220,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123365,"byte_end":123410,"line_start":221,"line_end":221,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123415,"byte_end":123460,"line_start":222,"line_end":222,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123465,"byte_end":123507,"line_start":223,"line_end":223,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123512,"byte_end":123521,"line_start":224,"line_end":224,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123526,"byte_end":123533,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1395},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":124784,"byte_end":124795,"line_start":261,"line_end":261,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123687,"byte_end":123759,"line_start":233,"line_end":233,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123764,"byte_end":123825,"line_start":234,"line_end":234,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123830,"byte_end":123833,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123838,"byte_end":123913,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123918,"byte_end":123972,"line_start":237,"line_end":237,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123977,"byte_end":123980,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":123985,"byte_end":124058,"line_start":239,"line_end":239,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":124063,"byte_end":124125,"line_start":240,"line_end":240,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":124130,"byte_end":124205,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":124210,"byte_end":124264,"line_start":242,"line_end":242,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":124269,"byte_end":124344,"line_start":243,"line_end":243,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":124349,"byte_end":124359,"line_start":244,"line_end":244,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":124364,"byte_end":124367,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":124372,"byte_end":124386,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":124391,"byte_end":124394,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":124399,"byte_end":124406,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":124411,"byte_end":124452,"line_start":249,"line_end":249,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":124457,"byte_end":124500,"line_start":250,"line_end":250,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":124505,"byte_end":124508,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":124513,"byte_end":124550,"line_start":252,"line_end":252,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":124555,"byte_end":124558,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":124563,"byte_end":124615,"line_start":254,"line_end":254,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":124620,"byte_end":124650,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":124655,"byte_end":124658,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":124663,"byte_end":124715,"line_start":257,"line_end":257,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":124720,"byte_end":124750,"line_start":258,"line_end":258,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":124755,"byte_end":124764,"line_start":259,"line_end":259,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":124769,"byte_end":124776,"line_start":260,"line_end":260,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":125796,"byte_end":125799,"line_start":291,"line_end":291,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":124960,"byte_end":125035,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":125040,"byte_end":125063,"line_start":269,"line_end":269,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":125068,"byte_end":125071,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":125076,"byte_end":125148,"line_start":271,"line_end":271,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":125153,"byte_end":125217,"line_start":272,"line_end":272,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":125222,"byte_end":125259,"line_start":273,"line_end":273,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":125264,"byte_end":125267,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":125272,"byte_end":125348,"line_start":275,"line_end":275,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":125353,"byte_end":125424,"line_start":276,"line_end":276,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":125429,"byte_end":125450,"line_start":277,"line_end":277,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":125455,"byte_end":125458,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":125463,"byte_end":125477,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":125482,"byte_end":125485,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":125490,"byte_end":125497,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":125502,"byte_end":125543,"line_start":282,"line_end":282,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":125548,"byte_end":125591,"line_start":283,"line_end":283,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":125596,"byte_end":125599,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":125604,"byte_end":125641,"line_start":285,"line_end":285,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":125646,"byte_end":125685,"line_start":286,"line_end":286,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":125690,"byte_end":125693,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":125698,"byte_end":125762,"line_start":288,"line_end":288,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":125767,"byte_end":125776,"line_start":289,"line_end":289,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":125781,"byte_end":125788,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":127359,"byte_end":127368,"line_start":337,"line_end":337,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":125966,"byte_end":126037,"line_start":299,"line_end":299,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126042,"byte_end":126061,"line_start":300,"line_end":300,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126066,"byte_end":126069,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126074,"byte_end":126139,"line_start":302,"line_end":302,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126144,"byte_end":126213,"line_start":303,"line_end":303,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126218,"byte_end":126229,"line_start":304,"line_end":304,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126234,"byte_end":126237,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126242,"byte_end":126317,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126322,"byte_end":126404,"line_start":307,"line_end":307,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126409,"byte_end":126427,"line_start":308,"line_end":308,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126432,"byte_end":126435,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126440,"byte_end":126463,"line_start":310,"line_end":310,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126468,"byte_end":126471,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126476,"byte_end":126551,"line_start":312,"line_end":312,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126556,"byte_end":126643,"line_start":313,"line_end":313,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126648,"byte_end":126704,"line_start":314,"line_end":314,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126709,"byte_end":126712,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126717,"byte_end":126729,"line_start":316,"line_end":316,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126734,"byte_end":126737,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126742,"byte_end":126811,"line_start":318,"line_end":318,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126816,"byte_end":126841,"line_start":319,"line_end":319,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126846,"byte_end":126849,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126854,"byte_end":126868,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126873,"byte_end":126876,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126881,"byte_end":126888,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126893,"byte_end":126934,"line_start":324,"line_end":324,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126939,"byte_end":126982,"line_start":325,"line_end":325,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126987,"byte_end":126990,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":126995,"byte_end":127046,"line_start":327,"line_end":327,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":127051,"byte_end":127054,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":127059,"byte_end":127099,"line_start":329,"line_end":329,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":127104,"byte_end":127107,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":127112,"byte_end":127164,"line_start":331,"line_end":331,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":127169,"byte_end":127221,"line_start":332,"line_end":332,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":127226,"byte_end":127278,"line_start":333,"line_end":333,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":127283,"byte_end":127325,"line_start":334,"line_end":334,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":127330,"byte_end":127339,"line_start":335,"line_end":335,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":127344,"byte_end":127351,"line_start":336,"line_end":336,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":128597,"byte_end":128603,"line_start":370,"line_end":370,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":127512,"byte_end":127584,"line_start":344,"line_end":344,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":127589,"byte_end":127616,"line_start":345,"line_end":345,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":127621,"byte_end":127624,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":127629,"byte_end":127704,"line_start":347,"line_end":347,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":127709,"byte_end":127780,"line_start":348,"line_end":348,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":127785,"byte_end":127857,"line_start":349,"line_end":349,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":127862,"byte_end":127936,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":127941,"byte_end":127999,"line_start":351,"line_end":351,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":128004,"byte_end":128007,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":128012,"byte_end":128088,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":128093,"byte_end":128167,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":128172,"byte_end":128193,"line_start":355,"line_end":355,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":128198,"byte_end":128201,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":128206,"byte_end":128220,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":128225,"byte_end":128228,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":128233,"byte_end":128240,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":128245,"byte_end":128286,"line_start":360,"line_end":360,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":128291,"byte_end":128315,"line_start":361,"line_end":361,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":128320,"byte_end":128363,"line_start":362,"line_end":362,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":128368,"byte_end":128371,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":128376,"byte_end":128414,"line_start":364,"line_end":364,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":128419,"byte_end":128480,"line_start":365,"line_end":365,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":128485,"byte_end":128488,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":128493,"byte_end":128563,"line_start":367,"line_end":367,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":128568,"byte_end":128577,"line_start":368,"line_end":368,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":128582,"byte_end":128589,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1403},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":129928,"byte_end":129938,"line_start":404,"line_end":404,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":128831,"byte_end":128906,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":128911,"byte_end":128987,"line_start":380,"line_end":380,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":128992,"byte_end":128995,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":129000,"byte_end":129075,"line_start":382,"line_end":382,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":129080,"byte_end":129155,"line_start":383,"line_end":383,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":129160,"byte_end":129236,"line_start":384,"line_end":384,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":129241,"byte_end":129306,"line_start":385,"line_end":385,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":129311,"byte_end":129314,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":129319,"byte_end":129395,"line_start":387,"line_end":387,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":129400,"byte_end":129474,"line_start":388,"line_end":388,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":129479,"byte_end":129504,"line_start":389,"line_end":389,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":129509,"byte_end":129512,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":129517,"byte_end":129531,"line_start":391,"line_end":391,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":129536,"byte_end":129543,"line_start":392,"line_end":392,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":129548,"byte_end":129589,"line_start":393,"line_end":393,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":129594,"byte_end":129637,"line_start":394,"line_end":394,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":129642,"byte_end":129645,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":129650,"byte_end":129688,"line_start":396,"line_end":396,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":129693,"byte_end":129743,"line_start":397,"line_end":397,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":129748,"byte_end":129799,"line_start":398,"line_end":398,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":129804,"byte_end":129811,"line_start":399,"line_end":399,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":129816,"byte_end":129819,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":129824,"byte_end":129894,"line_start":401,"line_end":401,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":129899,"byte_end":129908,"line_start":402,"line_end":402,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":129913,"byte_end":129920,"line_start":403,"line_end":403,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1407},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":130967,"byte_end":130971,"line_start":435,"line_end":435,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":130170,"byte_end":130243,"line_start":413,"line_end":413,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":130248,"byte_end":130276,"line_start":414,"line_end":414,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":130281,"byte_end":130284,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":130289,"byte_end":130363,"line_start":416,"line_end":416,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":130368,"byte_end":130435,"line_start":417,"line_end":417,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":130440,"byte_end":130485,"line_start":418,"line_end":418,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":130490,"byte_end":130493,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":130498,"byte_end":130574,"line_start":420,"line_end":420,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":130579,"byte_end":130605,"line_start":421,"line_end":421,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":130610,"byte_end":130613,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":130618,"byte_end":130632,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":130637,"byte_end":130640,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":130645,"byte_end":130652,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":130657,"byte_end":130698,"line_start":426,"line_end":426,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":130703,"byte_end":130746,"line_start":427,"line_end":427,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":130751,"byte_end":130754,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":130759,"byte_end":130796,"line_start":429,"line_end":429,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":130801,"byte_end":130856,"line_start":430,"line_end":430,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":130861,"byte_end":130864,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":130869,"byte_end":130933,"line_start":432,"line_end":432,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":130938,"byte_end":130947,"line_start":433,"line_end":433,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":130952,"byte_end":130959,"line_start":434,"line_end":434,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131905,"byte_end":131912,"line_start":469,"line_end":469,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131180,"byte_end":131234,"line_start":444,"line_end":444,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131239,"byte_end":131294,"line_start":445,"line_end":445,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131299,"byte_end":131302,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131307,"byte_end":131375,"line_start":447,"line_end":447,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131380,"byte_end":131383,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131388,"byte_end":131402,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131407,"byte_end":131410,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131415,"byte_end":131422,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131427,"byte_end":131468,"line_start":452,"line_end":452,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131473,"byte_end":131504,"line_start":453,"line_end":453,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131509,"byte_end":131544,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131549,"byte_end":131569,"line_start":455,"line_end":455,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131574,"byte_end":131577,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131582,"byte_end":131619,"line_start":457,"line_end":457,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131624,"byte_end":131627,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131632,"byte_end":131659,"line_start":459,"line_end":459,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131664,"byte_end":131688,"line_start":460,"line_end":460,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131693,"byte_end":131735,"line_start":461,"line_end":461,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131740,"byte_end":131749,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131754,"byte_end":131761,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131766,"byte_end":131769,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131774,"byte_end":131822,"line_start":465,"line_end":465,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131827,"byte_end":131871,"line_start":466,"line_end":466,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131876,"byte_end":131885,"line_start":467,"line_end":467,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":131890,"byte_end":131897,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":133105,"byte_end":133111,"line_start":508,"line_end":508,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132070,"byte_end":132132,"line_start":476,"line_end":476,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132137,"byte_end":132201,"line_start":477,"line_end":477,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132206,"byte_end":132209,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132214,"byte_end":132278,"line_start":479,"line_end":479,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132283,"byte_end":132348,"line_start":480,"line_end":480,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132353,"byte_end":132399,"line_start":481,"line_end":481,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132404,"byte_end":132407,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132412,"byte_end":132461,"line_start":483,"line_end":483,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132466,"byte_end":132506,"line_start":484,"line_end":484,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132511,"byte_end":132514,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132519,"byte_end":132533,"line_start":486,"line_end":486,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132538,"byte_end":132541,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132546,"byte_end":132553,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132558,"byte_end":132599,"line_start":489,"line_end":489,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132604,"byte_end":132635,"line_start":490,"line_end":490,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132640,"byte_end":132675,"line_start":491,"line_end":491,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132680,"byte_end":132700,"line_start":492,"line_end":492,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132705,"byte_end":132708,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132713,"byte_end":132750,"line_start":494,"line_end":494,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132755,"byte_end":132758,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132763,"byte_end":132790,"line_start":496,"line_end":496,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132795,"byte_end":132826,"line_start":497,"line_end":497,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132831,"byte_end":132857,"line_start":498,"line_end":498,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132862,"byte_end":132928,"line_start":499,"line_end":499,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132933,"byte_end":132942,"line_start":500,"line_end":500,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132947,"byte_end":132954,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132959,"byte_end":132962,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":132967,"byte_end":133002,"line_start":503,"line_end":503,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":133007,"byte_end":133010,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":133015,"byte_end":133071,"line_start":505,"line_end":505,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":133076,"byte_end":133085,"line_start":506,"line_end":506,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":133090,"byte_end":133097,"line_start":507,"line_end":507,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134156,"byte_end":134160,"line_start":536,"line_end":536,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":133341,"byte_end":133408,"line_start":516,"line_end":516,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":133413,"byte_end":133465,"line_start":517,"line_end":517,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":133470,"byte_end":133473,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":133478,"byte_end":133548,"line_start":519,"line_end":519,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":133553,"byte_end":133629,"line_start":520,"line_end":520,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":133634,"byte_end":133710,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":133715,"byte_end":133785,"line_start":522,"line_end":522,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":133790,"byte_end":133816,"line_start":523,"line_end":523,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":133821,"byte_end":133824,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":133829,"byte_end":133843,"line_start":525,"line_end":525,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":133848,"byte_end":133851,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":133856,"byte_end":133863,"line_start":527,"line_end":527,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":133868,"byte_end":133909,"line_start":528,"line_end":528,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":133914,"byte_end":133957,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":133962,"byte_end":133965,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":133970,"byte_end":134013,"line_start":531,"line_end":531,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134018,"byte_end":134087,"line_start":532,"line_end":532,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134092,"byte_end":134122,"line_start":533,"line_end":533,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134127,"byte_end":134136,"line_start":534,"line_end":534,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134141,"byte_end":134148,"line_start":535,"line_end":535,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1417},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":135354,"byte_end":135361,"line_start":576,"line_end":576,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134395,"byte_end":134460,"line_start":545,"line_end":545,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134465,"byte_end":134468,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134473,"byte_end":134487,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134492,"byte_end":134495,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134500,"byte_end":134507,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134512,"byte_end":134553,"line_start":550,"line_end":550,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134558,"byte_end":134589,"line_start":551,"line_end":551,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134594,"byte_end":134629,"line_start":552,"line_end":552,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134634,"byte_end":134654,"line_start":553,"line_end":553,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134659,"byte_end":134662,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134667,"byte_end":134706,"line_start":555,"line_end":555,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134711,"byte_end":134750,"line_start":556,"line_end":556,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134755,"byte_end":134794,"line_start":557,"line_end":557,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134799,"byte_end":134802,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134807,"byte_end":134834,"line_start":559,"line_end":559,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134839,"byte_end":134878,"line_start":560,"line_end":560,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134883,"byte_end":134922,"line_start":561,"line_end":561,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134927,"byte_end":134934,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134939,"byte_end":134966,"line_start":563,"line_end":563,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":134971,"byte_end":135010,"line_start":564,"line_end":564,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":135015,"byte_end":135054,"line_start":565,"line_end":565,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":135059,"byte_end":135066,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":135071,"byte_end":135098,"line_start":567,"line_end":567,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":135103,"byte_end":135144,"line_start":568,"line_end":568,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":135149,"byte_end":135190,"line_start":569,"line_end":569,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":135195,"byte_end":135202,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":135207,"byte_end":135210,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":135215,"byte_end":135274,"line_start":572,"line_end":572,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":135279,"byte_end":135320,"line_start":573,"line_end":573,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":135325,"byte_end":135334,"line_start":574,"line_end":574,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":135339,"byte_end":135346,"line_start":575,"line_end":575,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1418},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":136623,"byte_end":136631,"line_start":609,"line_end":609,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":135538,"byte_end":135610,"line_start":584,"line_end":584,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":135615,"byte_end":135618,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":135623,"byte_end":135700,"line_start":586,"line_end":586,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":135705,"byte_end":135780,"line_start":587,"line_end":587,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":135785,"byte_end":135861,"line_start":588,"line_end":588,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":135866,"byte_end":135869,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":135874,"byte_end":135956,"line_start":590,"line_end":590,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":135961,"byte_end":136044,"line_start":591,"line_end":591,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":136049,"byte_end":136052,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":136057,"byte_end":136133,"line_start":593,"line_end":593,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":136138,"byte_end":136214,"line_start":594,"line_end":594,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":136219,"byte_end":136240,"line_start":595,"line_end":595,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":136245,"byte_end":136248,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":136253,"byte_end":136267,"line_start":597,"line_end":597,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":136272,"byte_end":136275,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":136280,"byte_end":136287,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":136292,"byte_end":136333,"line_start":600,"line_end":600,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":136338,"byte_end":136381,"line_start":601,"line_end":601,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":136386,"byte_end":136389,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":136394,"byte_end":136431,"line_start":603,"line_end":603,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":136436,"byte_end":136503,"line_start":604,"line_end":604,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":136508,"byte_end":136511,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":136516,"byte_end":136589,"line_start":606,"line_end":606,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":136594,"byte_end":136603,"line_start":607,"line_end":607,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":136608,"byte_end":136615,"line_start":608,"line_end":608,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1421},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137614,"byte_end":137618,"line_start":642,"line_end":642,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":136805,"byte_end":136876,"line_start":618,"line_end":618,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":136881,"byte_end":136911,"line_start":619,"line_end":619,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":136916,"byte_end":136919,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":136924,"byte_end":136999,"line_start":621,"line_end":621,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137004,"byte_end":137075,"line_start":622,"line_end":622,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137080,"byte_end":137120,"line_start":623,"line_end":623,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137125,"byte_end":137128,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137133,"byte_end":137147,"line_start":625,"line_end":625,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137152,"byte_end":137155,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137160,"byte_end":137167,"line_start":627,"line_end":627,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137172,"byte_end":137213,"line_start":628,"line_end":628,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137218,"byte_end":137242,"line_start":629,"line_end":629,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137247,"byte_end":137290,"line_start":630,"line_end":630,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137295,"byte_end":137298,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137303,"byte_end":137341,"line_start":632,"line_end":632,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137346,"byte_end":137349,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137354,"byte_end":137398,"line_start":634,"line_end":634,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137403,"byte_end":137423,"line_start":635,"line_end":635,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137428,"byte_end":137491,"line_start":636,"line_end":636,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137496,"byte_end":137503,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137508,"byte_end":137511,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137516,"byte_end":137580,"line_start":639,"line_end":639,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137585,"byte_end":137594,"line_start":640,"line_end":640,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137599,"byte_end":137606,"line_start":641,"line_end":641,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":138642,"byte_end":138652,"line_start":673,"line_end":673,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137864,"byte_end":137938,"line_start":651,"line_end":651,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137943,"byte_end":137966,"line_start":652,"line_end":652,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137971,"byte_end":137974,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":137979,"byte_end":138052,"line_start":654,"line_end":654,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":138057,"byte_end":138129,"line_start":655,"line_end":655,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":138134,"byte_end":138211,"line_start":656,"line_end":656,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":138216,"byte_end":138227,"line_start":657,"line_end":657,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":138232,"byte_end":138235,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":138240,"byte_end":138254,"line_start":659,"line_end":659,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":138259,"byte_end":138262,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":138267,"byte_end":138274,"line_start":661,"line_end":661,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":138279,"byte_end":138320,"line_start":662,"line_end":662,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":138325,"byte_end":138349,"line_start":663,"line_end":663,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":138354,"byte_end":138397,"line_start":664,"line_end":664,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":138402,"byte_end":138405,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":138410,"byte_end":138448,"line_start":666,"line_end":666,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":138453,"byte_end":138456,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":138461,"byte_end":138524,"line_start":668,"line_end":668,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":138529,"byte_end":138532,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":138537,"byte_end":138608,"line_start":670,"line_end":670,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":138613,"byte_end":138622,"line_start":671,"line_end":671,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":138627,"byte_end":138634,"line_start":672,"line_end":672,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":139641,"byte_end":139651,"line_start":703,"line_end":703,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":138886,"byte_end":138962,"line_start":682,"line_end":682,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":138967,"byte_end":138990,"line_start":683,"line_end":683,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":138995,"byte_end":138998,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":139003,"byte_end":139078,"line_start":685,"line_end":685,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":139083,"byte_end":139155,"line_start":686,"line_end":686,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":139160,"byte_end":139227,"line_start":687,"line_end":687,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":139232,"byte_end":139235,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":139240,"byte_end":139254,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":139259,"byte_end":139262,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":139267,"byte_end":139274,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":139279,"byte_end":139320,"line_start":692,"line_end":692,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":139325,"byte_end":139349,"line_start":693,"line_end":693,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":139354,"byte_end":139397,"line_start":694,"line_end":694,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":139402,"byte_end":139405,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":139410,"byte_end":139448,"line_start":696,"line_end":696,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":139453,"byte_end":139456,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":139461,"byte_end":139524,"line_start":698,"line_end":698,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":139529,"byte_end":139532,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":139537,"byte_end":139607,"line_start":700,"line_end":700,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":139612,"byte_end":139621,"line_start":701,"line_end":701,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":139626,"byte_end":139633,"line_start":702,"line_end":702,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1432},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":141167,"byte_end":141177,"line_start":748,"line_end":748,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":139885,"byte_end":139955,"line_start":712,"line_end":712,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":139960,"byte_end":139963,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":139968,"byte_end":140039,"line_start":714,"line_end":714,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140044,"byte_end":140116,"line_start":715,"line_end":715,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140121,"byte_end":140191,"line_start":716,"line_end":716,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140196,"byte_end":140199,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140204,"byte_end":140275,"line_start":718,"line_end":718,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be aceessed with `TakeUntil::take_result()`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140280,"byte_end":140366,"line_start":719,"line_end":719,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140371,"byte_end":140438,"line_start":720,"line_end":720,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140443,"byte_end":140507,"line_start":721,"line_end":721,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140512,"byte_end":140515,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140520,"byte_end":140534,"line_start":723,"line_end":723,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140539,"byte_end":140542,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140547,"byte_end":140554,"line_start":725,"line_end":725,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140559,"byte_end":140600,"line_start":726,"line_end":726,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140605,"byte_end":140629,"line_start":727,"line_end":727,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140634,"byte_end":140677,"line_start":728,"line_end":728,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140682,"byte_end":140710,"line_start":729,"line_end":729,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140715,"byte_end":140718,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140723,"byte_end":140761,"line_start":731,"line_end":731,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140766,"byte_end":140769,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140774,"byte_end":140792,"line_start":733,"line_end":733,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140797,"byte_end":140839,"line_start":734,"line_end":734,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140844,"byte_end":140859,"line_start":735,"line_end":735,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140864,"byte_end":140883,"line_start":736,"line_end":736,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140888,"byte_end":140913,"line_start":737,"line_end":737,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140918,"byte_end":140934,"line_start":738,"line_end":738,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140939,"byte_end":140966,"line_start":739,"line_end":739,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140971,"byte_end":140980,"line_start":740,"line_end":740,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140985,"byte_end":140992,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":140997,"byte_end":141000,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":141005,"byte_end":141050,"line_start":743,"line_end":743,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":141055,"byte_end":141058,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":141063,"byte_end":141133,"line_start":745,"line_end":745,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":141138,"byte_end":141147,"line_start":746,"line_end":746,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":141152,"byte_end":141159,"line_start":747,"line_end":747,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":142384,"byte_end":142392,"line_start":789,"line_end":789,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":141326,"byte_end":141397,"line_start":756,"line_end":756,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":141402,"byte_end":141445,"line_start":757,"line_end":757,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":141450,"byte_end":141453,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":141458,"byte_end":141533,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":141538,"byte_end":141608,"line_start":760,"line_end":760,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":141613,"byte_end":141651,"line_start":761,"line_end":761,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":141656,"byte_end":141659,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":141664,"byte_end":141739,"line_start":763,"line_end":763,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":141744,"byte_end":141787,"line_start":764,"line_end":764,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":141792,"byte_end":141795,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":141800,"byte_end":141873,"line_start":766,"line_end":766,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":141878,"byte_end":141921,"line_start":767,"line_end":767,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":141926,"byte_end":141929,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":141934,"byte_end":141948,"line_start":769,"line_end":769,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":141953,"byte_end":141956,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":141961,"byte_end":141968,"line_start":771,"line_end":771,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":141973,"byte_end":142014,"line_start":772,"line_end":772,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":142019,"byte_end":142043,"line_start":773,"line_end":773,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":142048,"byte_end":142091,"line_start":774,"line_end":774,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":142096,"byte_end":142099,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":142104,"byte_end":142122,"line_start":776,"line_end":776,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":142127,"byte_end":142130,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":142135,"byte_end":142140,"line_start":778,"line_end":778,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":142145,"byte_end":142206,"line_start":779,"line_end":779,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":142211,"byte_end":142233,"line_start":780,"line_end":780,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":142238,"byte_end":142267,"line_start":781,"line_end":781,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":142272,"byte_end":142283,"line_start":782,"line_end":782,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":142288,"byte_end":142306,"line_start":783,"line_end":783,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":142311,"byte_end":142316,"line_start":784,"line_end":784,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":142321,"byte_end":142324,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":142329,"byte_end":142350,"line_start":786,"line_end":786,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":142355,"byte_end":142364,"line_start":787,"line_end":787,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":142369,"byte_end":142376,"line_start":788,"line_end":788,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1437},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145442,"byte_end":145446,"line_start":874,"line_end":874,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":144934,"byte_end":145005,"line_start":858,"line_end":858,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145010,"byte_end":145013,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145018,"byte_end":145091,"line_start":860,"line_end":860,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145096,"byte_end":145131,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145136,"byte_end":145139,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145144,"byte_end":145158,"line_start":863,"line_end":863,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145163,"byte_end":145166,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145171,"byte_end":145178,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145183,"byte_end":145224,"line_start":866,"line_end":866,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145229,"byte_end":145272,"line_start":867,"line_end":867,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145277,"byte_end":145280,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145285,"byte_end":145331,"line_start":869,"line_end":869,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145336,"byte_end":145339,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145344,"byte_end":145408,"line_start":871,"line_end":871,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145413,"byte_end":145422,"line_start":872,"line_end":872,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145427,"byte_end":145434,"line_start":873,"line_end":873,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1438},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146111,"byte_end":146115,"line_start":897,"line_end":897,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145584,"byte_end":145656,"line_start":881,"line_end":881,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145661,"byte_end":145664,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145669,"byte_end":145742,"line_start":883,"line_end":883,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145747,"byte_end":145793,"line_start":884,"line_end":884,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145798,"byte_end":145801,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145806,"byte_end":145820,"line_start":886,"line_end":886,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145825,"byte_end":145828,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145833,"byte_end":145840,"line_start":888,"line_end":888,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145845,"byte_end":145886,"line_start":889,"line_end":889,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145891,"byte_end":145934,"line_start":890,"line_end":890,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145939,"byte_end":145942,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145947,"byte_end":145993,"line_start":892,"line_end":892,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145998,"byte_end":146001,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146006,"byte_end":146077,"line_start":894,"line_end":894,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146082,"byte_end":146091,"line_start":895,"line_end":895,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146096,"byte_end":146103,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1439},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147736,"byte_end":147740,"line_start":943,"line_end":943,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146253,"byte_end":146324,"line_start":904,"line_end":904,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146329,"byte_end":146402,"line_start":905,"line_end":905,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146407,"byte_end":146445,"line_start":906,"line_end":906,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146450,"byte_end":146453,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146458,"byte_end":146512,"line_start":908,"line_end":908,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146517,"byte_end":146589,"line_start":909,"line_end":909,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146594,"byte_end":146670,"line_start":910,"line_end":910,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146675,"byte_end":146743,"line_start":911,"line_end":911,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146748,"byte_end":146824,"line_start":912,"line_end":912,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146829,"byte_end":146851,"line_start":913,"line_end":913,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146856,"byte_end":146859,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146864,"byte_end":146931,"line_start":915,"line_end":915,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146936,"byte_end":147004,"line_start":916,"line_end":916,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147009,"byte_end":147022,"line_start":917,"line_end":917,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147027,"byte_end":147030,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147035,"byte_end":147049,"line_start":919,"line_end":919,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147054,"byte_end":147057,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147062,"byte_end":147069,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147074,"byte_end":147117,"line_start":922,"line_end":922,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147122,"byte_end":147165,"line_start":923,"line_end":923,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147170,"byte_end":147198,"line_start":924,"line_end":924,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147203,"byte_end":147206,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147211,"byte_end":147229,"line_start":926,"line_end":926,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147234,"byte_end":147272,"line_start":927,"line_end":927,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147277,"byte_end":147292,"line_start":928,"line_end":928,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147297,"byte_end":147314,"line_start":929,"line_end":929,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147319,"byte_end":147361,"line_start":930,"line_end":930,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147366,"byte_end":147401,"line_start":931,"line_end":931,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147406,"byte_end":147450,"line_start":932,"line_end":932,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147455,"byte_end":147464,"line_start":933,"line_end":933,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147469,"byte_end":147483,"line_start":934,"line_end":934,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147488,"byte_end":147491,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147496,"byte_end":147539,"line_start":936,"line_end":936,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147544,"byte_end":147581,"line_start":937,"line_end":937,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147586,"byte_end":147623,"line_start":938,"line_end":938,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147628,"byte_end":147662,"line_start":939,"line_end":939,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147667,"byte_end":147701,"line_start":940,"line_end":940,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147706,"byte_end":147716,"line_start":941,"line_end":941,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147721,"byte_end":147728,"line_start":942,"line_end":942,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148669,"byte_end":148675,"line_start":976,"line_end":976,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147865,"byte_end":147912,"line_start":950,"line_end":950,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147917,"byte_end":147920,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147925,"byte_end":147999,"line_start":952,"line_end":952,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148004,"byte_end":148041,"line_start":953,"line_end":953,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148046,"byte_end":148049,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148054,"byte_end":148068,"line_start":955,"line_end":955,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148073,"byte_end":148076,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148081,"byte_end":148088,"line_start":957,"line_end":957,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148093,"byte_end":148134,"line_start":958,"line_end":958,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148139,"byte_end":148182,"line_start":959,"line_end":959,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148187,"byte_end":148190,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148195,"byte_end":148235,"line_start":961,"line_end":961,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148240,"byte_end":148243,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148248,"byte_end":148277,"line_start":963,"line_end":963,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148282,"byte_end":148310,"line_start":964,"line_end":964,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148315,"byte_end":148372,"line_start":965,"line_end":965,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148377,"byte_end":148404,"line_start":966,"line_end":966,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148409,"byte_end":148432,"line_start":967,"line_end":967,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148437,"byte_end":148440,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148445,"byte_end":148480,"line_start":969,"line_end":969,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148485,"byte_end":148513,"line_start":970,"line_end":970,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148518,"byte_end":148575,"line_start":971,"line_end":971,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148580,"byte_end":148607,"line_start":972,"line_end":972,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148612,"byte_end":148635,"line_start":973,"line_end":973,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148640,"byte_end":148649,"line_start":974,"line_end":974,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148654,"byte_end":148661,"line_start":975,"line_end":975,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1441},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154875,"byte_end":154878,"line_start":1143,"line_end":1143,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154187,"byte_end":154235,"line_start":1121,"line_end":1121,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154240,"byte_end":154243,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154248,"byte_end":154321,"line_start":1123,"line_end":1123,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154326,"byte_end":154398,"line_start":1124,"line_end":1124,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154403,"byte_end":154416,"line_start":1125,"line_end":1125,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154421,"byte_end":154424,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154429,"byte_end":154443,"line_start":1127,"line_end":1127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154448,"byte_end":154451,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154456,"byte_end":154463,"line_start":1129,"line_end":1129,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154468,"byte_end":154509,"line_start":1130,"line_end":1130,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154514,"byte_end":154557,"line_start":1131,"line_end":1131,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154562,"byte_end":154565,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154570,"byte_end":154608,"line_start":1133,"line_end":1133,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154613,"byte_end":154652,"line_start":1134,"line_end":1134,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154657,"byte_end":154660,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154665,"byte_end":154699,"line_start":1136,"line_end":1136,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154704,"byte_end":154745,"line_start":1137,"line_end":1137,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154750,"byte_end":154778,"line_start":1138,"line_end":1138,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154783,"byte_end":154833,"line_start":1139,"line_end":1139,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154838,"byte_end":154847,"line_start":1140,"line_end":1140,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154852,"byte_end":154859,"line_start":1141,"line_end":1141,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154864,"byte_end":154867,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1443},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155786,"byte_end":155791,"line_start":1174,"line_end":1174,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155059,"byte_end":155096,"line_start":1151,"line_end":1151,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155101,"byte_end":155104,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155109,"byte_end":155180,"line_start":1153,"line_end":1153,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155185,"byte_end":155261,"line_start":1154,"line_end":1154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155266,"byte_end":155269,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155274,"byte_end":155281,"line_start":1156,"line_end":1156,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155286,"byte_end":155327,"line_start":1157,"line_end":1157,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155332,"byte_end":155375,"line_start":1158,"line_end":1158,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155380,"byte_end":155383,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155388,"byte_end":155445,"line_start":1160,"line_end":1160,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155450,"byte_end":155506,"line_start":1161,"line_end":1161,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155511,"byte_end":155514,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155519,"byte_end":155559,"line_start":1163,"line_end":1163,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155564,"byte_end":155567,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155572,"byte_end":155620,"line_start":1165,"line_end":1165,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155625,"byte_end":155653,"line_start":1166,"line_end":1166,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155658,"byte_end":155673,"line_start":1167,"line_end":1167,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155678,"byte_end":155697,"line_start":1168,"line_end":1168,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155702,"byte_end":155720,"line_start":1169,"line_end":1169,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155725,"byte_end":155740,"line_start":1170,"line_end":1170,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155745,"byte_end":155752,"line_start":1171,"line_end":1171,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155757,"byte_end":155766,"line_start":1172,"line_end":1172,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155771,"byte_end":155778,"line_start":1173,"line_end":1173,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":156129,"byte_end":156137,"line_start":1185,"line_end":1185,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155983,"byte_end":156038,"line_start":1182,"line_end":1182,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":156043,"byte_end":156046,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":156051,"byte_end":156121,"line_start":1184,"line_end":1184,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1446},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160529,"byte_end":160536,"line_start":1290,"line_end":1290,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160226,"byte_end":160299,"line_start":1285,"line_end":1285,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160304,"byte_end":160307,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160312,"byte_end":160381,"line_start":1287,"line_end":1287,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160386,"byte_end":160455,"line_start":1288,"line_end":1288,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160460,"byte_end":160521,"line_start":1289,"line_end":1289,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160992,"byte_end":161003,"line_start":1303,"line_end":1303,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160713,"byte_end":160788,"line_start":1298,"line_end":1298,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160793,"byte_end":160814,"line_start":1299,"line_end":1299,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160819,"byte_end":160822,"line_start":1300,"line_end":1300,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160827,"byte_end":160907,"line_start":1301,"line_end":1301,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160912,"byte_end":160984,"line_start":1302,"line_end":1302,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161456,"byte_end":161468,"line_start":1316,"line_end":1316,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161177,"byte_end":161253,"line_start":1311,"line_end":1311,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161258,"byte_end":161279,"line_start":1312,"line_end":1312,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161284,"byte_end":161287,"line_start":1313,"line_end":1313,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161292,"byte_end":161371,"line_start":1314,"line_end":1314,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161376,"byte_end":161448,"line_start":1315,"line_end":1315,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1452},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161744,"byte_end":161759,"line_start":1326,"line_end":1326,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161643,"byte_end":161714,"line_start":1324,"line_end":1324,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161719,"byte_end":161736,"line_start":1325,"line_end":1325,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163860,"byte_end":163876,"line_start":1381,"line_end":1381,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161906,"byte_end":161981,"line_start":1333,"line_end":1333,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161986,"byte_end":161996,"line_start":1334,"line_end":1334,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162001,"byte_end":162004,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162009,"byte_end":162082,"line_start":1336,"line_end":1336,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162087,"byte_end":162155,"line_start":1337,"line_end":1337,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162160,"byte_end":162208,"line_start":1338,"line_end":1338,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162213,"byte_end":162288,"line_start":1339,"line_end":1339,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162293,"byte_end":162369,"line_start":1340,"line_end":1340,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162374,"byte_end":162400,"line_start":1341,"line_end":1341,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162405,"byte_end":162408,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162413,"byte_end":162486,"line_start":1343,"line_end":1343,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162491,"byte_end":162561,"line_start":1344,"line_end":1344,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162566,"byte_end":162606,"line_start":1345,"line_end":1345,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162611,"byte_end":162614,"line_start":1346,"line_end":1346,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162619,"byte_end":162673,"line_start":1347,"line_end":1347,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162678,"byte_end":162762,"line_start":1348,"line_end":1348,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162767,"byte_end":162770,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162775,"byte_end":162789,"line_start":1350,"line_end":1350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162794,"byte_end":162797,"line_start":1351,"line_end":1351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162802,"byte_end":162809,"line_start":1352,"line_end":1352,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162814,"byte_end":162855,"line_start":1353,"line_end":1353,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162860,"byte_end":162894,"line_start":1354,"line_end":1354,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162899,"byte_end":162954,"line_start":1355,"line_end":1355,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162959,"byte_end":162962,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162967,"byte_end":163002,"line_start":1357,"line_end":1357,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163007,"byte_end":163057,"line_start":1358,"line_end":1358,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163062,"byte_end":163084,"line_start":1359,"line_end":1359,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163089,"byte_end":163099,"line_start":1360,"line_end":1360,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163104,"byte_end":163121,"line_start":1361,"line_end":1361,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163126,"byte_end":163152,"line_start":1362,"line_end":1362,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163157,"byte_end":163212,"line_start":1363,"line_end":1363,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163217,"byte_end":163246,"line_start":1364,"line_end":1364,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163251,"byte_end":163314,"line_start":1365,"line_end":1365,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163319,"byte_end":163365,"line_start":1366,"line_end":1366,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163370,"byte_end":163384,"line_start":1367,"line_end":1367,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163389,"byte_end":163458,"line_start":1368,"line_end":1368,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163463,"byte_end":163488,"line_start":1369,"line_end":1369,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163493,"byte_end":163546,"line_start":1370,"line_end":1370,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163551,"byte_end":163580,"line_start":1371,"line_end":1371,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163585,"byte_end":163598,"line_start":1372,"line_end":1372,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163603,"byte_end":163673,"line_start":1373,"line_end":1373,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163678,"byte_end":163737,"line_start":1374,"line_end":1374,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163742,"byte_end":163772,"line_start":1375,"line_end":1375,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163777,"byte_end":163786,"line_start":1376,"line_end":1376,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163791,"byte_end":163796,"line_start":1377,"line_end":1377,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163801,"byte_end":163826,"line_start":1378,"line_end":1378,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163831,"byte_end":163840,"line_start":1379,"line_end":1379,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163845,"byte_end":163852,"line_start":1380,"line_end":1380,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6826},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":256639,"byte_end":256646,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":6831},{"krate":0,"index":6832},{"krate":0,"index":6830}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":256579,"byte_end":256627,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":256564,"byte_end":256578,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6862},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":256639,"byte_end":256646,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"__AndThen","qualname":"::stream::try_stream::and_then::_::__AndThen","value":"__AndThen {  }","parent":null,"children":[{"krate":0,"index":6867},{"krate":0,"index":6868},{"krate":0,"index":6869}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":256564,"byte_end":256578,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6899},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":6902}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6924},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__ErrInto","qualname":"::stream::try_stream::_::__ErrInto","value":"__ErrInto {  }","parent":null,"children":[{"krate":0,"index":6928},{"krate":0,"index":6929}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6976},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":6979}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7001},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__InspectOk","qualname":"::stream::try_stream::_::__InspectOk","value":"__InspectOk {  }","parent":null,"children":[{"krate":0,"index":7005},{"krate":0,"index":7006}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7053},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":7056}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7078},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__InspectErr","qualname":"::stream::try_stream::_::__InspectErr","value":"__InspectErr {  }","parent":null,"children":[{"krate":0,"index":7082},{"krate":0,"index":7083}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7127},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":259400,"byte_end":259410,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":7129}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":259340,"byte_end":259388,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":259308,"byte_end":259322,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7147},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":259400,"byte_end":259410,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__IntoStream","qualname":"::stream::try_stream::into_stream::_::__IntoStream","value":"__IntoStream {  }","parent":null,"children":[{"krate":0,"index":7150},{"krate":0,"index":7151}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":259308,"byte_end":259322,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7176},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":7179}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7201},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__MapOk","qualname":"::stream::try_stream::_::__MapOk","value":"__MapOk {  }","parent":null,"children":[{"krate":0,"index":7205},{"krate":0,"index":7206}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7253},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":7256}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7278},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__MapErr","qualname":"::stream::try_stream::_::__MapErr","value":"__MapErr {  }","parent":null,"children":[{"krate":0,"index":7282},{"krate":0,"index":7283}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7327},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":260731,"byte_end":260737,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":7332},{"krate":0,"index":7333},{"krate":0,"index":7331}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":260671,"byte_end":260719,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":260656,"byte_end":260670,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7363},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":260731,"byte_end":260737,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"__OrElse","qualname":"::stream::try_stream::or_else::_::__OrElse","value":"__OrElse {  }","parent":null,"children":[{"krate":0,"index":7368},{"krate":0,"index":7369},{"krate":0,"index":7370}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":260656,"byte_end":260670,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7397},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":263607,"byte_end":263614,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":7400}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":263440,"byte_end":263510,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":263528,"byte_end":263595,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7405},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":264683,"byte_end":264693,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":7410},{"krate":0,"index":7409},{"krate":0,"index":7411}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":264604,"byte_end":264671,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":264589,"byte_end":264603,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7441},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":264683,"byte_end":264693,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"__TryForEach","qualname":"::stream::try_stream::try_for_each::_::__TryForEach","value":"__TryForEach {  }","parent":null,"children":[{"krate":0,"index":7446},{"krate":0,"index":7447},{"krate":0,"index":7448}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":264589,"byte_end":264603,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7471},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":266588,"byte_end":266597,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":7477},{"krate":0,"index":7475},{"krate":0,"index":7478},{"krate":0,"index":7476}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":266528,"byte_end":266576,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":266513,"byte_end":266527,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7510},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":266588,"byte_end":266597,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__TryFilter","qualname":"::stream::try_stream::try_filter::_::__TryFilter","value":"__TryFilter {  }","parent":null,"children":[{"krate":0,"index":7515},{"krate":0,"index":7516},{"krate":0,"index":7517}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":266513,"byte_end":266527,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7544},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":269758,"byte_end":269770,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":7549},{"krate":0,"index":7548},{"krate":0,"index":7550}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":269698,"byte_end":269746,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":269683,"byte_end":269697,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7580},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":269758,"byte_end":269770,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TryFilterMap","qualname":"::stream::try_stream::try_filter_map::_::__TryFilterMap","value":"__TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":7585},{"krate":0,"index":7586},{"krate":0,"index":7587}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":269683,"byte_end":269697,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7614},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":272727,"byte_end":272737,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":7616},{"krate":0,"index":7617}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":272667,"byte_end":272715,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":272635,"byte_end":272649,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7637},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":272727,"byte_end":272737,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__TryFlatten","qualname":"::stream::try_stream::try_flatten::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":7640},{"krate":0,"index":7641},{"krate":0,"index":7642}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":272635,"byte_end":272649,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7664},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":274835,"byte_end":274845,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":7668},{"krate":0,"index":7667}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":274756,"byte_end":274823,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":274724,"byte_end":274738,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7692},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":274835,"byte_end":274845,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__TryCollect","qualname":"::stream::try_stream::try_collect::_::__TryCollect","value":"__TryCollect {  }","parent":null,"children":[{"krate":0,"index":7696},{"krate":0,"index":7697}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":274724,"byte_end":274738,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7720},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":276205,"byte_end":276214,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":7723},{"krate":0,"index":7722}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":276126,"byte_end":276193,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":276094,"byte_end":276108,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7743},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":276205,"byte_end":276214,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"__TryConcat","qualname":"::stream::try_stream::try_concat::_::__TryConcat","value":"__TryConcat {  }","parent":null,"children":[{"krate":0,"index":7746},{"krate":0,"index":7747}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":276094,"byte_end":276108,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7765},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":277615,"byte_end":277622,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":7772},{"krate":0,"index":7770},{"krate":0,"index":7771},{"krate":0,"index":7773}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":277536,"byte_end":277603,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":277521,"byte_end":277535,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7809},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":277615,"byte_end":277622,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"__TryFold","qualname":"::stream::try_stream::try_fold::_::__TryFold","value":"__TryFold {  }","parent":null,"children":[{"krate":0,"index":7815},{"krate":0,"index":7816},{"krate":0,"index":7817}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":277521,"byte_end":277535,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1836},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":282086,"byte_end":282096,"line_start":57,"line_end":57,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":280229,"byte_end":280305,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":280306,"byte_end":280309,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":280310,"byte_end":280386,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":280387,"byte_end":280457,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":280458,"byte_end":280517,"line_start":12,"line_end":12,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":280518,"byte_end":280521,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":280522,"byte_end":280600,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":280601,"byte_end":280678,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":280679,"byte_end":280743,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":280744,"byte_end":280747,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":280748,"byte_end":280820,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":280821,"byte_end":280899,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":280900,"byte_end":280929,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":280930,"byte_end":280933,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":280934,"byte_end":281011,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281012,"byte_end":281076,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281077,"byte_end":281129,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281130,"byte_end":281133,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281134,"byte_end":281211,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281212,"byte_end":281284,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281285,"byte_end":281354,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281355,"byte_end":281433,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281434,"byte_end":281437,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281438,"byte_end":281451,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281452,"byte_end":281455,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281456,"byte_end":281463,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281464,"byte_end":281497,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281498,"byte_end":281521,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281522,"byte_end":281563,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281564,"byte_end":281610,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281611,"byte_end":281614,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281615,"byte_end":281674,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281675,"byte_end":281697,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281698,"byte_end":281732,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281733,"byte_end":281742,"line_start":42,"line_end":42,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281743,"byte_end":281746,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281747,"byte_end":281770,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281771,"byte_end":281810,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281811,"byte_end":281847,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281848,"byte_end":281891,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281892,"byte_end":281908,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281909,"byte_end":281929,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281930,"byte_end":281939,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281940,"byte_end":281947,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281948,"byte_end":281951,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":281952,"byte_end":282017,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":282018,"byte_end":282060,"line_start":54,"line_end":54,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":282061,"byte_end":282070,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":282071,"byte_end":282078,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7844},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":282430,"byte_end":282439,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":7848},{"krate":0,"index":7849},{"krate":0,"index":7850}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":282370,"byte_end":282418,"line_start":71,"line_end":71,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":282355,"byte_end":282369,"line_start":70,"line_end":70,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7880},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":282430,"byte_end":282439,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"__TryUnfold","qualname":"::stream::try_stream::try_unfold::_::__TryUnfold","value":"__TryUnfold {  }","parent":null,"children":[{"krate":0,"index":7885},{"krate":0,"index":7886}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":282355,"byte_end":282369,"line_start":70,"line_end":70,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7909},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":284341,"byte_end":284353,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":7916},{"krate":0,"index":7913},{"krate":0,"index":7917},{"krate":0,"index":7914},{"krate":0,"index":7915}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":284281,"byte_end":284329,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":284266,"byte_end":284280,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7951},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":284341,"byte_end":284353,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::_::__TrySkipWhile","value":"__TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":7956},{"krate":0,"index":7957},{"krate":0,"index":7958}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":284266,"byte_end":284280,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7985},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":287942,"byte_end":287954,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":7992},{"krate":0,"index":7989},{"krate":0,"index":7993},{"krate":0,"index":7990},{"krate":0,"index":7991}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":287882,"byte_end":287930,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":287867,"byte_end":287881,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8027},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":287942,"byte_end":287954,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TryTakeWhile","qualname":"::stream::try_stream::try_take_while::_::__TryTakeWhile","value":"__TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":8032},{"krate":0,"index":8033},{"krate":0,"index":8034}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":287867,"byte_end":287881,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":1930},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228043,"byte_end":228055,"line_start":138,"line_end":138,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":1931},{"krate":0,"index":1933},{"krate":0,"index":1936},{"krate":0,"index":1939},{"krate":0,"index":1942},{"krate":0,"index":1945},{"krate":0,"index":1947},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1954},{"krate":0,"index":1957},{"krate":0,"index":1960},{"krate":0,"index":1962},{"krate":0,"index":1965},{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1974},{"krate":0,"index":1975}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":227981,"byte_end":228032,"line_start":137,"line_end":137,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1931},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228597,"byte_end":228605,"line_start":156,"line_end":156,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228073,"byte_end":228147,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228152,"byte_end":228178,"line_start":140,"line_end":140,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228183,"byte_end":228186,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228191,"byte_end":228205,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228210,"byte_end":228213,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228218,"byte_end":228225,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228230,"byte_end":228271,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228276,"byte_end":228322,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228327,"byte_end":228330,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228335,"byte_end":228355,"line_start":148,"line_end":148,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228360,"byte_end":228405,"line_start":149,"line_end":149,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228410,"byte_end":228441,"line_start":150,"line_end":150,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228446,"byte_end":228449,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228454,"byte_end":228508,"line_start":152,"line_end":152,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228513,"byte_end":228564,"line_start":153,"line_end":153,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228569,"byte_end":228577,"line_start":154,"line_end":154,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228582,"byte_end":228589,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1933},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229301,"byte_end":229307,"line_start":181,"line_end":181,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228781,"byte_end":228854,"line_start":164,"line_end":164,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228859,"byte_end":228890,"line_start":165,"line_end":165,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228895,"byte_end":228898,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228903,"byte_end":228917,"line_start":167,"line_end":167,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228922,"byte_end":228925,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228930,"byte_end":228937,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228942,"byte_end":228983,"line_start":170,"line_end":170,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228988,"byte_end":229034,"line_start":171,"line_end":171,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229039,"byte_end":229042,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229047,"byte_end":229067,"line_start":173,"line_end":173,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229072,"byte_end":229113,"line_start":174,"line_end":174,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229118,"byte_end":229149,"line_start":175,"line_end":175,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229154,"byte_end":229157,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229162,"byte_end":229215,"line_start":177,"line_end":177,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229220,"byte_end":229268,"line_start":178,"line_end":178,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229273,"byte_end":229281,"line_start":179,"line_end":179,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229286,"byte_end":229293,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1936},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":230016,"byte_end":230023,"line_start":206,"line_end":206,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229497,"byte_end":229568,"line_start":189,"line_end":189,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229573,"byte_end":229604,"line_start":190,"line_end":190,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229609,"byte_end":229612,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229617,"byte_end":229631,"line_start":192,"line_end":192,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229636,"byte_end":229639,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229644,"byte_end":229651,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229656,"byte_end":229697,"line_start":195,"line_end":195,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229702,"byte_end":229748,"line_start":196,"line_end":196,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229753,"byte_end":229756,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229761,"byte_end":229781,"line_start":198,"line_end":198,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229786,"byte_end":229827,"line_start":199,"line_end":199,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229832,"byte_end":229864,"line_start":200,"line_end":200,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229869,"byte_end":229872,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229877,"byte_end":229930,"line_start":202,"line_end":202,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229935,"byte_end":229983,"line_start":203,"line_end":203,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":229988,"byte_end":229996,"line_start":204,"line_end":204,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":230001,"byte_end":230008,"line_start":205,"line_end":205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1939},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231628,"byte_end":231636,"line_start":252,"line_end":252,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":230215,"byte_end":230291,"line_start":214,"line_end":214,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":230296,"byte_end":230336,"line_start":215,"line_end":215,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":230341,"byte_end":230344,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":230349,"byte_end":230425,"line_start":217,"line_end":217,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":230430,"byte_end":230506,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":230511,"byte_end":230584,"line_start":219,"line_end":219,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":230589,"byte_end":230631,"line_start":220,"line_end":220,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":230636,"byte_end":230639,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":230644,"byte_end":230717,"line_start":222,"line_end":222,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":230722,"byte_end":230753,"line_start":223,"line_end":223,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":230758,"byte_end":230761,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":230766,"byte_end":230840,"line_start":225,"line_end":225,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":230845,"byte_end":230919,"line_start":226,"line_end":226,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":230924,"byte_end":230940,"line_start":227,"line_end":227,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":230945,"byte_end":230948,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":230953,"byte_end":231024,"line_start":229,"line_end":229,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231029,"byte_end":231055,"line_start":230,"line_end":230,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231060,"byte_end":231063,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231068,"byte_end":231140,"line_start":232,"line_end":232,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231145,"byte_end":231194,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231199,"byte_end":231202,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231207,"byte_end":231221,"line_start":235,"line_end":235,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231226,"byte_end":231229,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231234,"byte_end":231241,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231246,"byte_end":231277,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231282,"byte_end":231306,"line_start":239,"line_end":239,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231311,"byte_end":231349,"line_start":240,"line_end":240,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231354,"byte_end":231357,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231362,"byte_end":231418,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231423,"byte_end":231426,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231431,"byte_end":231466,"line_start":244,"line_end":244,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231471,"byte_end":231510,"line_start":245,"line_end":245,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231515,"byte_end":231539,"line_start":246,"line_end":246,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231544,"byte_end":231560,"line_start":247,"line_end":247,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231565,"byte_end":231581,"line_start":248,"line_end":248,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231586,"byte_end":231596,"line_start":249,"line_end":249,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231601,"byte_end":231608,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231613,"byte_end":231620,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1942},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":232788,"byte_end":232795,"line_start":278,"line_end":278,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231889,"byte_end":231954,"line_start":261,"line_end":261,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":231959,"byte_end":232008,"line_start":262,"line_end":262,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":232013,"byte_end":232016,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":232021,"byte_end":232100,"line_start":264,"line_end":264,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":232105,"byte_end":232179,"line_start":265,"line_end":265,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":232184,"byte_end":232260,"line_start":266,"line_end":266,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":232265,"byte_end":232310,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":232315,"byte_end":232318,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":232323,"byte_end":232398,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":232403,"byte_end":232443,"line_start":270,"line_end":270,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":232448,"byte_end":232451,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":232456,"byte_end":232565,"line_start":272,"line_end":272,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":232570,"byte_end":232644,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":232649,"byte_end":232665,"line_start":274,"line_end":274,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":232670,"byte_end":232673,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":232678,"byte_end":232749,"line_start":276,"line_end":276,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":232754,"byte_end":232780,"line_start":277,"line_end":277,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1945},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":233347,"byte_end":233357,"line_start":293,"line_end":293,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":233044,"byte_end":233118,"line_start":287,"line_end":287,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":233123,"byte_end":233133,"line_start":288,"line_end":288,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":233138,"byte_end":233141,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":233146,"byte_end":233216,"line_start":290,"line_end":290,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":233221,"byte_end":233297,"line_start":291,"line_end":291,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":233302,"byte_end":233339,"line_start":292,"line_end":292,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1947},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":233846,"byte_end":233857,"line_start":306,"line_end":306,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":233555,"byte_end":233634,"line_start":301,"line_end":301,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":233639,"byte_end":233642,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":233647,"byte_end":233717,"line_start":303,"line_end":303,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":233722,"byte_end":233796,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":233801,"byte_end":233838,"line_start":305,"line_end":305,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1949},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":234778,"byte_end":234789,"line_start":335,"line_end":335,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":234060,"byte_end":234113,"line_start":314,"line_end":314,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":234118,"byte_end":234162,"line_start":315,"line_end":315,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":234167,"byte_end":234170,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":234175,"byte_end":234224,"line_start":317,"line_end":317,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":234229,"byte_end":234302,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":234307,"byte_end":234327,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":234332,"byte_end":234335,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":234340,"byte_end":234354,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":234359,"byte_end":234362,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":234367,"byte_end":234374,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":234379,"byte_end":234438,"line_start":324,"line_end":324,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":234443,"byte_end":234446,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":234451,"byte_end":234470,"line_start":326,"line_end":326,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":234475,"byte_end":234493,"line_start":327,"line_end":327,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":234498,"byte_end":234570,"line_start":328,"line_end":328,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":234575,"byte_end":234605,"line_start":329,"line_end":329,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":234610,"byte_end":234617,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":234622,"byte_end":234696,"line_start":331,"line_end":331,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":234701,"byte_end":234704,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":234709,"byte_end":234758,"line_start":333,"line_end":333,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":234763,"byte_end":234770,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1950},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":235684,"byte_end":235692,"line_start":362,"line_end":362,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":234945,"byte_end":235019,"line_start":342,"line_end":342,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":235024,"byte_end":235098,"line_start":343,"line_end":343,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":235103,"byte_end":235115,"line_start":344,"line_end":344,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":235120,"byte_end":235123,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":235128,"byte_end":235195,"line_start":346,"line_end":346,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":235200,"byte_end":235272,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":235277,"byte_end":235316,"line_start":348,"line_end":348,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":235321,"byte_end":235324,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":235329,"byte_end":235343,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":235348,"byte_end":235351,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":235356,"byte_end":235363,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":235368,"byte_end":235409,"line_start":353,"line_end":353,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":235414,"byte_end":235460,"line_start":354,"line_end":354,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":235465,"byte_end":235468,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":235473,"byte_end":235530,"line_start":356,"line_end":356,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":235535,"byte_end":235538,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":235543,"byte_end":235597,"line_start":358,"line_end":358,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":235602,"byte_end":235651,"line_start":359,"line_end":359,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":235656,"byte_end":235664,"line_start":360,"line_end":360,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":235669,"byte_end":235676,"line_start":361,"line_end":361,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1951},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":237044,"byte_end":237056,"line_start":402,"line_end":402,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":235859,"byte_end":235928,"line_start":369,"line_end":369,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":235933,"byte_end":235989,"line_start":370,"line_end":370,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":235994,"byte_end":235997,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236002,"byte_end":236077,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236082,"byte_end":236152,"line_start":373,"line_end":373,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236157,"byte_end":236195,"line_start":374,"line_end":374,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236200,"byte_end":236203,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236208,"byte_end":236286,"line_start":376,"line_end":376,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236291,"byte_end":236351,"line_start":377,"line_end":377,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236356,"byte_end":236413,"line_start":378,"line_end":378,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236418,"byte_end":236485,"line_start":379,"line_end":379,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236490,"byte_end":236520,"line_start":380,"line_end":380,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236525,"byte_end":236528,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236533,"byte_end":236547,"line_start":382,"line_end":382,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236552,"byte_end":236555,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236560,"byte_end":236567,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236572,"byte_end":236613,"line_start":385,"line_end":385,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236618,"byte_end":236642,"line_start":386,"line_end":386,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236647,"byte_end":236693,"line_start":387,"line_end":387,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236698,"byte_end":236701,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236706,"byte_end":236727,"line_start":389,"line_end":389,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236732,"byte_end":236735,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236740,"byte_end":236745,"line_start":391,"line_end":391,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236750,"byte_end":236811,"line_start":392,"line_end":392,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236816,"byte_end":236838,"line_start":393,"line_end":393,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236843,"byte_end":236907,"line_start":394,"line_end":394,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236912,"byte_end":236923,"line_start":395,"line_end":395,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236928,"byte_end":236967,"line_start":396,"line_end":396,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236972,"byte_end":236977,"line_start":397,"line_end":397,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236982,"byte_end":236985,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":236990,"byte_end":237011,"line_start":399,"line_end":399,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":237016,"byte_end":237024,"line_start":400,"line_end":400,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":237029,"byte_end":237036,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1954},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":238069,"byte_end":238083,"line_start":432,"line_end":432,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":237320,"byte_end":237394,"line_start":411,"line_end":411,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":237399,"byte_end":237422,"line_start":412,"line_end":412,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":237427,"byte_end":237430,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":237435,"byte_end":237466,"line_start":414,"line_end":414,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":237471,"byte_end":237548,"line_start":415,"line_end":415,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":237553,"byte_end":237582,"line_start":416,"line_end":416,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":237587,"byte_end":237590,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":237595,"byte_end":237609,"line_start":418,"line_end":418,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":237614,"byte_end":237617,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":237622,"byte_end":237629,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":237634,"byte_end":237675,"line_start":421,"line_end":421,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":237680,"byte_end":237704,"line_start":422,"line_end":422,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":237709,"byte_end":237755,"line_start":423,"line_end":423,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":237760,"byte_end":237763,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":237768,"byte_end":237837,"line_start":425,"line_end":425,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":237842,"byte_end":237912,"line_start":426,"line_end":426,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":237917,"byte_end":237920,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":237925,"byte_end":237992,"line_start":428,"line_end":428,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":237997,"byte_end":238036,"line_start":429,"line_end":429,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":238041,"byte_end":238049,"line_start":430,"line_end":430,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":238054,"byte_end":238061,"line_start":431,"line_end":431,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1957},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":239116,"byte_end":239130,"line_start":462,"line_end":462,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":238360,"byte_end":238434,"line_start":441,"line_end":441,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":238439,"byte_end":238462,"line_start":442,"line_end":442,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":238467,"byte_end":238470,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":238475,"byte_end":238506,"line_start":444,"line_end":444,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":238511,"byte_end":238588,"line_start":445,"line_end":445,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":238593,"byte_end":238622,"line_start":446,"line_end":446,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":238627,"byte_end":238630,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":238635,"byte_end":238649,"line_start":448,"line_end":448,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":238654,"byte_end":238657,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":238662,"byte_end":238669,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":238674,"byte_end":238715,"line_start":451,"line_end":451,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":238720,"byte_end":238744,"line_start":452,"line_end":452,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":238749,"byte_end":238795,"line_start":453,"line_end":453,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":238800,"byte_end":238803,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":238808,"byte_end":238884,"line_start":455,"line_end":455,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":238889,"byte_end":238959,"line_start":456,"line_end":456,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":238964,"byte_end":238967,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":238972,"byte_end":239039,"line_start":458,"line_end":458,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":239044,"byte_end":239083,"line_start":459,"line_end":459,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":239088,"byte_end":239096,"line_start":460,"line_end":460,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":239101,"byte_end":239108,"line_start":461,"line_end":461,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1960},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":242510,"byte_end":242521,"line_start":561,"line_end":561,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":241471,"byte_end":241523,"line_start":531,"line_end":531,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":241528,"byte_end":241595,"line_start":532,"line_end":532,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":241600,"byte_end":241603,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":241608,"byte_end":241682,"line_start":534,"line_end":534,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":241687,"byte_end":241768,"line_start":535,"line_end":535,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":241773,"byte_end":241843,"line_start":536,"line_end":536,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":241848,"byte_end":241851,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":241856,"byte_end":241924,"line_start":538,"line_end":538,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":241929,"byte_end":241932,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":241937,"byte_end":241951,"line_start":540,"line_end":540,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":241956,"byte_end":241959,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":241964,"byte_end":241971,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":241976,"byte_end":242017,"line_start":543,"line_end":543,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":242022,"byte_end":242053,"line_start":544,"line_end":544,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":242058,"byte_end":242096,"line_start":545,"line_end":545,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":242101,"byte_end":242121,"line_start":546,"line_end":546,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":242126,"byte_end":242129,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":242134,"byte_end":242171,"line_start":548,"line_end":548,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":242176,"byte_end":242179,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":242184,"byte_end":242211,"line_start":550,"line_end":550,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":242216,"byte_end":242240,"line_start":551,"line_end":551,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":242245,"byte_end":242291,"line_start":552,"line_end":552,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":242296,"byte_end":242305,"line_start":553,"line_end":553,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":242310,"byte_end":242353,"line_start":554,"line_end":554,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":242358,"byte_end":242365,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":242370,"byte_end":242373,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":242378,"byte_end":242441,"line_start":557,"line_end":557,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":242446,"byte_end":242477,"line_start":558,"line_end":558,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":242482,"byte_end":242490,"line_start":559,"line_end":559,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":242495,"byte_end":242502,"line_start":560,"line_end":560,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1962},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243992,"byte_end":244002,"line_start":598,"line_end":598,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":242704,"byte_end":242777,"line_start":568,"line_end":568,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":242782,"byte_end":242816,"line_start":569,"line_end":569,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":242821,"byte_end":242824,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":242829,"byte_end":242904,"line_start":571,"line_end":571,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":242909,"byte_end":242984,"line_start":572,"line_end":572,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":242989,"byte_end":243062,"line_start":573,"line_end":573,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243067,"byte_end":243138,"line_start":574,"line_end":574,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243143,"byte_end":243193,"line_start":575,"line_end":575,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243198,"byte_end":243201,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243206,"byte_end":243277,"line_start":577,"line_end":577,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243282,"byte_end":243285,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243290,"byte_end":243366,"line_start":579,"line_end":579,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243371,"byte_end":243441,"line_start":580,"line_end":580,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243446,"byte_end":243471,"line_start":581,"line_end":581,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243476,"byte_end":243479,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243484,"byte_end":243498,"line_start":583,"line_end":583,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243503,"byte_end":243510,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243515,"byte_end":243556,"line_start":585,"line_end":585,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243561,"byte_end":243585,"line_start":586,"line_end":586,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243590,"byte_end":243647,"line_start":587,"line_end":587,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243652,"byte_end":243655,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243660,"byte_end":243740,"line_start":589,"line_end":589,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243745,"byte_end":243788,"line_start":590,"line_end":590,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243793,"byte_end":243826,"line_start":591,"line_end":591,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243831,"byte_end":243838,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243843,"byte_end":243846,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243851,"byte_end":243899,"line_start":594,"line_end":594,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243904,"byte_end":243959,"line_start":595,"line_end":595,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243964,"byte_end":243972,"line_start":596,"line_end":596,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":243977,"byte_end":243984,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1965},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":245629,"byte_end":245643,"line_start":639,"line_end":639,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":244253,"byte_end":244315,"line_start":607,"line_end":607,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":244320,"byte_end":244388,"line_start":608,"line_end":608,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":244393,"byte_end":244427,"line_start":609,"line_end":609,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":244432,"byte_end":244435,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":244440,"byte_end":244515,"line_start":611,"line_end":611,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":244520,"byte_end":244595,"line_start":612,"line_end":612,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":244600,"byte_end":244676,"line_start":613,"line_end":613,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":244681,"byte_end":244746,"line_start":614,"line_end":614,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":244751,"byte_end":244754,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":244759,"byte_end":244830,"line_start":616,"line_end":616,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":244835,"byte_end":244838,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":244843,"byte_end":244919,"line_start":618,"line_end":618,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":244924,"byte_end":244998,"line_start":619,"line_end":619,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":245003,"byte_end":245028,"line_start":620,"line_end":620,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":245033,"byte_end":245036,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":245041,"byte_end":245055,"line_start":622,"line_end":622,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":245060,"byte_end":245067,"line_start":623,"line_end":623,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":245072,"byte_end":245113,"line_start":624,"line_end":624,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":245118,"byte_end":245175,"line_start":625,"line_end":625,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":245180,"byte_end":245205,"line_start":626,"line_end":626,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":245210,"byte_end":245213,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":245218,"byte_end":245288,"line_start":628,"line_end":628,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":245293,"byte_end":245348,"line_start":629,"line_end":629,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":245353,"byte_end":245415,"line_start":630,"line_end":630,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":245420,"byte_end":245435,"line_start":631,"line_end":631,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":245440,"byte_end":245447,"line_start":632,"line_end":632,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":245452,"byte_end":245455,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":245460,"byte_end":245481,"line_start":634,"line_end":634,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":245486,"byte_end":245535,"line_start":635,"line_end":635,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":245540,"byte_end":245596,"line_start":636,"line_end":636,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":245601,"byte_end":245609,"line_start":637,"line_end":637,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":245614,"byte_end":245621,"line_start":638,"line_end":638,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1969},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":247335,"byte_end":247346,"line_start":686,"line_end":686,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":245920,"byte_end":245985,"line_start":648,"line_end":648,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":245990,"byte_end":245993,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":245998,"byte_end":246071,"line_start":650,"line_end":650,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246076,"byte_end":246149,"line_start":651,"line_end":651,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246154,"byte_end":246227,"line_start":652,"line_end":652,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246232,"byte_end":246302,"line_start":653,"line_end":653,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246307,"byte_end":246310,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246315,"byte_end":246329,"line_start":655,"line_end":655,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246334,"byte_end":246337,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246342,"byte_end":246349,"line_start":657,"line_end":657,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246354,"byte_end":246395,"line_start":658,"line_end":658,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246400,"byte_end":246431,"line_start":659,"line_end":659,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246436,"byte_end":246487,"line_start":660,"line_end":660,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246492,"byte_end":246512,"line_start":661,"line_end":661,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246517,"byte_end":246520,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246525,"byte_end":246564,"line_start":663,"line_end":663,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246569,"byte_end":246608,"line_start":664,"line_end":664,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246613,"byte_end":246652,"line_start":665,"line_end":665,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246657,"byte_end":246660,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246665,"byte_end":246692,"line_start":667,"line_end":667,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246697,"byte_end":246740,"line_start":668,"line_end":668,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246745,"byte_end":246752,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246757,"byte_end":246784,"line_start":670,"line_end":670,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246789,"byte_end":246832,"line_start":671,"line_end":671,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246837,"byte_end":246881,"line_start":672,"line_end":672,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246886,"byte_end":246893,"line_start":673,"line_end":673,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246898,"byte_end":246925,"line_start":674,"line_end":674,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246930,"byte_end":246975,"line_start":675,"line_end":675,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":246980,"byte_end":247025,"line_start":676,"line_end":676,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":247030,"byte_end":247074,"line_start":677,"line_end":677,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":247079,"byte_end":247086,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":247091,"byte_end":247094,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":247099,"byte_end":247138,"line_start":680,"line_end":680,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":247143,"byte_end":247192,"line_start":681,"line_end":681,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":247197,"byte_end":247246,"line_start":682,"line_end":682,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":247251,"byte_end":247301,"line_start":683,"line_end":683,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":247306,"byte_end":247315,"line_start":684,"line_end":684,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":247320,"byte_end":247327,"line_start":685,"line_end":685,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1970},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":248938,"byte_end":248946,"line_start":725,"line_end":725,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":247651,"byte_end":247721,"line_start":697,"line_end":697,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":247726,"byte_end":247786,"line_start":698,"line_end":698,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":247791,"byte_end":247794,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":247799,"byte_end":247869,"line_start":700,"line_end":700,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":247874,"byte_end":247950,"line_start":701,"line_end":701,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":247955,"byte_end":248031,"line_start":702,"line_end":702,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":248036,"byte_end":248106,"line_start":703,"line_end":703,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":248111,"byte_end":248137,"line_start":704,"line_end":704,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":248142,"byte_end":248145,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":248150,"byte_end":248230,"line_start":706,"line_end":706,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":248235,"byte_end":248304,"line_start":707,"line_end":707,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":248309,"byte_end":248330,"line_start":708,"line_end":708,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":248335,"byte_end":248338,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":248343,"byte_end":248357,"line_start":710,"line_end":710,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":248362,"byte_end":248365,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":248370,"byte_end":248377,"line_start":712,"line_end":712,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":248382,"byte_end":248423,"line_start":713,"line_end":713,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":248428,"byte_end":248474,"line_start":714,"line_end":714,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":248479,"byte_end":248482,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":248487,"byte_end":248556,"line_start":716,"line_end":716,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":248561,"byte_end":248638,"line_start":717,"line_end":717,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":248643,"byte_end":248676,"line_start":718,"line_end":718,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":248681,"byte_end":248684,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":248689,"byte_end":248775,"line_start":720,"line_end":720,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":248780,"byte_end":248866,"line_start":721,"line_end":721,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":248871,"byte_end":248905,"line_start":722,"line_end":722,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":248910,"byte_end":248918,"line_start":723,"line_end":723,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":248923,"byte_end":248930,"line_start":724,"line_end":724,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1974},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":250472,"byte_end":250482,"line_start":768,"line_end":768,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":249226,"byte_end":249288,"line_start":734,"line_end":734,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":249293,"byte_end":249368,"line_start":735,"line_end":735,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":249373,"byte_end":249376,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":249381,"byte_end":249452,"line_start":737,"line_end":737,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":249457,"byte_end":249533,"line_start":738,"line_end":738,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":249538,"byte_end":249577,"line_start":739,"line_end":739,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":249582,"byte_end":249585,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":249590,"byte_end":249676,"line_start":741,"line_end":741,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":249681,"byte_end":249684,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":249689,"byte_end":249773,"line_start":743,"line_end":743,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":249778,"byte_end":249834,"line_start":744,"line_end":744,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":249839,"byte_end":249842,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":249847,"byte_end":249861,"line_start":746,"line_end":746,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":249866,"byte_end":249869,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":249874,"byte_end":249881,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":249886,"byte_end":249927,"line_start":749,"line_end":749,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":249932,"byte_end":249963,"line_start":750,"line_end":750,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":249968,"byte_end":250006,"line_start":751,"line_end":751,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":250011,"byte_end":250031,"line_start":752,"line_end":752,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":250036,"byte_end":250039,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":250044,"byte_end":250105,"line_start":754,"line_end":754,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":250110,"byte_end":250113,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":250118,"byte_end":250145,"line_start":756,"line_end":756,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":250150,"byte_end":250181,"line_start":757,"line_end":757,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":250186,"byte_end":250212,"line_start":758,"line_end":758,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":250217,"byte_end":250287,"line_start":759,"line_end":759,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":250292,"byte_end":250301,"line_start":760,"line_end":760,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":250306,"byte_end":250313,"line_start":761,"line_end":761,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":250318,"byte_end":250321,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":250326,"byte_end":250365,"line_start":763,"line_end":763,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":250370,"byte_end":250373,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":250378,"byte_end":250438,"line_start":765,"line_end":765,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":250443,"byte_end":250452,"line_start":766,"line_end":766,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":250457,"byte_end":250464,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1975},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":253725,"byte_end":253744,"line_start":849,"line_end":849,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":253617,"byte_end":253695,"line_start":847,"line_end":847,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":253700,"byte_end":253717,"line_start":848,"line_end":848,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":8061},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":291405,"byte_end":291409,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":8063}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":291290,"byte_end":291327,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":291345,"byte_end":291393,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2006},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":291927,"byte_end":291931,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":291461,"byte_end":291525,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":291526,"byte_end":291554,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":291555,"byte_end":291558,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":291559,"byte_end":291632,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":291633,"byte_end":291688,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":291689,"byte_end":291692,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":291693,"byte_end":291700,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":291701,"byte_end":291742,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":291743,"byte_end":291786,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":291787,"byte_end":291790,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":291791,"byte_end":291835,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":291836,"byte_end":291901,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":291902,"byte_end":291911,"line_start":26,"line_end":26,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":291912,"byte_end":291919,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8067},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":292573,"byte_end":292579,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":8069}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":292456,"byte_end":292495,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":292513,"byte_end":292561,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2024},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":293103,"byte_end":293109,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":292601,"byte_end":292661,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":292662,"byte_end":292665,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":292666,"byte_end":292733,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":292734,"byte_end":292806,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":292807,"byte_end":292864,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":292865,"byte_end":292868,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":292869,"byte_end":292876,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":292877,"byte_end":292918,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":292919,"byte_end":292962,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":292963,"byte_end":292966,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":292967,"byte_end":293002,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":293003,"byte_end":293077,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":293078,"byte_end":293087,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":293088,"byte_end":293095,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8073},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":293894,"byte_end":293899,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":8075}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":293778,"byte_end":293816,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":293834,"byte_end":293882,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2048},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":294067,"byte_end":294072,"line_start":16,"line_end":16,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":293937,"byte_end":293985,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":293986,"byte_end":293989,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":293990,"byte_end":294059,"line_start":15,"line_end":15,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":2073},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":295006,"byte_end":295010,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":294699,"byte_end":294740,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":294741,"byte_end":294744,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":294745,"byte_end":294752,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":294753,"byte_end":294794,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":294795,"byte_end":294838,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":294839,"byte_end":294842,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":294843,"byte_end":294887,"line_start":13,"line_end":13,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":294888,"byte_end":294943,"line_start":14,"line_end":14,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":294944,"byte_end":294980,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":294981,"byte_end":294990,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":294991,"byte_end":294998,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8079},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":295223,"byte_end":295227,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":8081}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":295163,"byte_end":295211,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":295131,"byte_end":295145,"line_start":23,"line_end":23,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8099},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":295223,"byte_end":295227,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"__Once","qualname":"::stream::once::_::__Once","value":"__Once {  }","parent":null,"children":[{"krate":0,"index":8102},{"krate":0,"index":8103}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":295131,"byte_end":295145,"line_start":23,"line_end":23,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8121},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":296363,"byte_end":296370,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":8123}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":296243,"byte_end":296285,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":296303,"byte_end":296351,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2098},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":296546,"byte_end":296553,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":296414,"byte_end":296468,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":296469,"byte_end":296472,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":296473,"byte_end":296538,"line_start":15,"line_end":15,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2120},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297259,"byte_end":297265,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":2122}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297158,"byte_end":297198,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297199,"byte_end":297247,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2128},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297953,"byte_end":297960,"line_start":40,"line_end":40,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297465,"byte_end":297538,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297539,"byte_end":297542,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297543,"byte_end":297602,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297603,"byte_end":297606,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297607,"byte_end":297621,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297622,"byte_end":297625,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297626,"byte_end":297633,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297634,"byte_end":297667,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297668,"byte_end":297696,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297697,"byte_end":297700,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297701,"byte_end":297730,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297731,"byte_end":297734,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297735,"byte_end":297799,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297800,"byte_end":297853,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297854,"byte_end":297875,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297876,"byte_end":297929,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297930,"byte_end":297937,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297938,"byte_end":297945,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8127},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":298610,"byte_end":298616,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":8131},{"krate":0,"index":8132},{"krate":0,"index":8130}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":298550,"byte_end":298598,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":298518,"byte_end":298532,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8158},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":298610,"byte_end":298616,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"__Select","qualname":"::stream::select::_::__Select","value":"__Select {  }","parent":null,"children":[{"krate":0,"index":8162},{"krate":0,"index":8163},{"krate":0,"index":8164}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":298518,"byte_end":298532,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":2151},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":299194,"byte_end":299200,"line_start":29,"line_end":29,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":298718,"byte_end":298786,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":298787,"byte_end":298863,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":298864,"byte_end":298912,"line_start":21,"line_end":21,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":298913,"byte_end":298916,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ After one of the two input stream completes, the remaining one will be","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":298917,"byte_end":298991,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":298992,"byte_end":299061,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":299062,"byte_end":299089,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":299090,"byte_end":299093,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":299094,"byte_end":299165,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":299166,"byte_end":299186,"line_start":28,"line_end":28,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2157},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":299579,"byte_end":299586,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":299471,"byte_end":299545,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":299550,"byte_end":299567,"line_start":42,"line_end":42,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":299942,"byte_end":299949,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":299680,"byte_end":299748,"line_start":47,"line_end":47,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":299753,"byte_end":299784,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":299789,"byte_end":299792,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":299797,"byte_end":299870,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":299875,"byte_end":299930,"line_start":51,"line_end":51,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2159},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":300324,"byte_end":300335,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":300055,"byte_end":300130,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":300135,"byte_end":300166,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":300171,"byte_end":300174,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":300179,"byte_end":300252,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":300257,"byte_end":300312,"line_start":60,"line_end":60,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2160},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":300741,"byte_end":300751,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":300505,"byte_end":300568,"line_start":66,"line_end":66,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":300573,"byte_end":300576,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":300581,"byte_end":300653,"line_start":68,"line_end":68,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":300658,"byte_end":300729,"line_start":69,"line_end":69,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":2187},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303924,"byte_end":303930,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":302482,"byte_end":302552,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":302553,"byte_end":302556,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":302557,"byte_end":302626,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":302627,"byte_end":302708,"line_start":11,"line_end":11,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":302709,"byte_end":302740,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":302741,"byte_end":302744,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":302745,"byte_end":302824,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":302825,"byte_end":302904,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":302905,"byte_end":302959,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":302960,"byte_end":302963,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":302964,"byte_end":303044,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303045,"byte_end":303115,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303116,"byte_end":303138,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303139,"byte_end":303142,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303143,"byte_end":303220,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303221,"byte_end":303293,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303294,"byte_end":303371,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303372,"byte_end":303432,"line_start":25,"line_end":25,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303433,"byte_end":303436,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303437,"byte_end":303450,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303451,"byte_end":303454,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303455,"byte_end":303462,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303463,"byte_end":303504,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303505,"byte_end":303548,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303549,"byte_end":303552,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303553,"byte_end":303608,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303609,"byte_end":303632,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303633,"byte_end":303672,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303673,"byte_end":303710,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303711,"byte_end":303750,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303751,"byte_end":303767,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303768,"byte_end":303784,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303785,"byte_end":303794,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303795,"byte_end":303802,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303803,"byte_end":303806,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303807,"byte_end":303859,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303860,"byte_end":303898,"line_start":44,"line_end":44,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303899,"byte_end":303908,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":303909,"byte_end":303916,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8187},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":304261,"byte_end":304267,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":8191},{"krate":0,"index":8192},{"krate":0,"index":8193}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":304201,"byte_end":304249,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":304186,"byte_end":304200,"line_start":59,"line_end":59,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8223},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":304261,"byte_end":304267,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"__Unfold","qualname":"::stream::unfold::_::__Unfold","value":"__Unfold {  }","parent":null,"children":[{"krate":0,"index":8228},{"krate":0,"index":8229}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":304186,"byte_end":304200,"line_start":59,"line_end":59,"column_start":1,"column_end":15}}]},{"kind":"Mod","id":{"krate":0,"index":2219},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":8252},{"krate":0,"index":2220},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2246}],"decl_id":null,"docs":" Task notification\n","sig":null,"attributes":[{"value":"! Task notification","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":305687,"byte_end":305708,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":2228},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":306898,"byte_end":306906,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":306855,"byte_end":306887,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":2229},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":309662,"byte_end":309675,"line_start":97,"line_end":97,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":309614,"byte_end":309651,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":2247},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","parent":null,"children":[{"krate":0,"index":2248}],"decl_id":null,"docs":" Definition of the `Never` type,\n a stand-in for the `!` type until it becomes stable.\n","sig":null,"attributes":[{"value":"! Definition of the `Never` type,","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":312134,"byte_end":312169,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"! a stand-in for the `!` type until it becomes stable.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":312170,"byte_end":312226,"line_start":2,"line_end":2,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":2248},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":312863,"byte_end":312868,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":312228,"byte_end":312263,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":312264,"byte_end":312267,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":312268,"byte_end":312343,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":312344,"byte_end":312381,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":312382,"byte_end":312385,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":312386,"byte_end":312450,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":312451,"byte_end":312454,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":312455,"byte_end":312526,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":312527,"byte_end":312578,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":312579,"byte_end":312671,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":312672,"byte_end":312675,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":312676,"byte_end":312747,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":312748,"byte_end":312853,"line_start":16,"line_end":16,"column_start":1,"column_end":106}}]},{"kind":"Trait","id":{"krate":0,"index":2254},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":312971,"byte_end":312978,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":2256},{"krate":0,"index":2257}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2256},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":312993,"byte_end":312999,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":2254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2257},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":313008,"byte_end":313017,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":2254},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2264},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":313209,"byte_end":313215,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":2266}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":313240,"byte_end":313248,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":2264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2281},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":314552,"byte_end":314556,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8271},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":314912,"byte_end":314919,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8292},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":315653,"byte_end":315666,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8308},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":316008,"byte_end":316017,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8323},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":316966,"byte_end":316973,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8338},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":317684,"byte_end":317692,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8353},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":318412,"byte_end":318423,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8365},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":319241,"byte_end":319253,"line_start":275,"line_end":275,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8377},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":320334,"byte_end":320348,"line_start":312,"line_end":312,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2445},"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":321107,"byte_end":321113,"line_start":343,"line_end":343,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":5,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":35875,"byte_end":35882,"line_start":17,"line_end":17,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":36009,"byte_end":36016,"line_start":23,"line_end":23,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":36250,"byte_end":36257,"line_start":35,"line_end":35,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":37036,"byte_end":37043,"line_start":59,"line_end":59,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":37277,"byte_end":37284,"line_start":71,"line_end":71,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40254,"byte_end":40258,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40360,"byte_end":40364,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":42088,"byte_end":42092,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":42201,"byte_end":42205,"line_start":75,"line_end":75,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":43084,"byte_end":43087,"line_start":21,"line_end":21,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":43262,"byte_end":43265,"line_start":28,"line_end":28,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":43529,"byte_end":43532,"line_start":40,"line_end":40,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19175,"byte_end":19176,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":66129,"byte_end":66139,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":66304,"byte_end":66314,"line_start":19,"line_end":19,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":66420,"byte_end":66430,"line_start":23,"line_end":23,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":67083,"byte_end":67093,"line_start":17,"line_end":17,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":67223,"byte_end":67233,"line_start":23,"line_end":23,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":67486,"byte_end":67496,"line_start":35,"line_end":35,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":68527,"byte_end":68537,"line_start":64,"line_end":64,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":68790,"byte_end":68800,"line_start":76,"line_end":76,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":72230,"byte_end":72243,"line_start":14,"line_end":14,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":72376,"byte_end":72389,"line_start":20,"line_end":20,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":72645,"byte_end":72658,"line_start":32,"line_end":32,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":48851,"byte_end":48854,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74027,"byte_end":74031,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74604,"byte_end":74608,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74740,"byte_end":74744,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":75321,"byte_end":75328,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":75879,"byte_end":75886,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":76031,"byte_end":76038,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":76065,"byte_end":76072,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":77393,"byte_end":77402,"line_start":44,"line_end":44,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":78417,"byte_end":78426,"line_start":72,"line_end":72,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":78642,"byte_end":78651,"line_start":81,"line_end":81,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":80072,"byte_end":80084,"line_start":29,"line_end":29,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":81126,"byte_end":81138,"line_start":57,"line_end":57,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":81366,"byte_end":81378,"line_start":66,"line_end":66,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":82902,"byte_end":82914,"line_start":30,"line_end":30,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":83247,"byte_end":83259,"line_start":44,"line_end":44,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":83442,"byte_end":83454,"line_start":53,"line_end":53,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":83864,"byte_end":83870,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":84540,"byte_end":84546,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":84688,"byte_end":84694,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85171,"byte_end":85176,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85355,"byte_end":85360,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85392,"byte_end":85397,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85494,"byte_end":85499,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92231,"byte_end":92237,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":94479,"byte_end":94485,"line_start":81,"line_end":81,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":95188,"byte_end":95194,"line_start":103,"line_end":103,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":102760,"byte_end":102769,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":104475,"byte_end":104484,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":105975,"byte_end":105981,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":106366,"byte_end":106372,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":106753,"byte_end":106759,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":107000,"byte_end":107006,"line_start":54,"line_end":54,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":107353,"byte_end":107359,"line_start":69,"line_end":69,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":107635,"byte_end":107641,"line_start":82,"line_end":82,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":108001,"byte_end":108007,"line_start":97,"line_end":97,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":164480,"byte_end":164485,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":164754,"byte_end":164759,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":164964,"byte_end":164969,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":166518,"byte_end":166525,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":166836,"byte_end":166843,"line_start":31,"line_end":31,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":167019,"byte_end":167026,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":167918,"byte_end":167924,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":168199,"byte_end":168205,"line_start":30,"line_end":30,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":168980,"byte_end":168986,"line_start":59,"line_end":59,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":169655,"byte_end":169664,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":5491},{"krate":0,"index":5492},{"krate":0,"index":5493},{"krate":0,"index":5494}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":169897,"byte_end":169906,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":170024,"byte_end":170033,"line_start":35,"line_end":35,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":171417,"byte_end":171423,"line_start":25,"line_end":25,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":171896,"byte_end":171902,"line_start":41,"line_end":41,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":5564},{"krate":0,"index":5565},{"krate":0,"index":5566},{"krate":0,"index":5567}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":172296,"byte_end":172302,"line_start":58,"line_end":58,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":172651,"byte_end":172657,"line_start":69,"line_end":69,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":174806,"byte_end":174815,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":175112,"byte_end":175121,"line_start":35,"line_end":35,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":5634},{"krate":0,"index":5635},{"krate":0,"index":5636},{"krate":0,"index":5637}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":175422,"byte_end":175431,"line_start":47,"line_end":47,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":175708,"byte_end":175717,"line_start":57,"line_end":57,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":177794,"byte_end":177801,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":5695},{"krate":0,"index":5696},{"krate":0,"index":5697},{"krate":0,"index":5698}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":177970,"byte_end":177977,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":178169,"byte_end":178176,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":179618,"byte_end":179622,"line_start":20,"line_end":20,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":179978,"byte_end":179982,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":180315,"byte_end":180319,"line_start":50,"line_end":50,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":180566,"byte_end":180570,"line_start":60,"line_end":60,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":182103,"byte_end":182110,"line_start":19,"line_end":19,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":182403,"byte_end":182410,"line_start":32,"line_end":32,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":182704,"byte_end":182711,"line_start":46,"line_end":46,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":182962,"byte_end":182969,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":184018,"byte_end":184022,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":5950},{"krate":0,"index":5951},{"krate":0,"index":5952},{"krate":0,"index":5953}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":184523,"byte_end":184527,"line_start":35,"line_end":35,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":184625,"byte_end":184629,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":185829,"byte_end":185841,"line_start":14,"line_end":14,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":188351,"byte_end":188363,"line_start":72,"line_end":72,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":188483,"byte_end":188495,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1002},{"krate":0,"index":1003}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":189343,"byte_end":189346,"line_start":20,"line_end":20,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":189561,"byte_end":189564,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":6089},{"krate":0,"index":6090},{"krate":0,"index":6091},{"krate":0,"index":6092}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":189738,"byte_end":189741,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":189915,"byte_end":189918,"line_start":48,"line_end":48,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":191065,"byte_end":191069,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":191120,"byte_end":191124,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":191275,"byte_end":191279,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":191418,"byte_end":191422,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1059},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":192071,"byte_end":192085,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":192246,"byte_end":192260,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":192404,"byte_end":192418,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":193593,"byte_end":193601,"line_start":25,"line_end":25,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":6247},{"krate":0,"index":6248},{"krate":0,"index":6249},{"krate":0,"index":6250},{"krate":0,"index":1103},{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":194790,"byte_end":194798,"line_start":63,"line_end":63,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":194940,"byte_end":194948,"line_start":69,"line_end":69,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":196106,"byte_end":196110,"line_start":110,"line_end":110,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":196381,"byte_end":196385,"line_start":122,"line_end":122,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":196496,"byte_end":196500,"line_start":128,"line_end":128,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":197346,"byte_end":197350,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":6345},{"krate":0,"index":6346},{"krate":0,"index":6347},{"krate":0,"index":6348}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":197578,"byte_end":197582,"line_start":29,"line_end":29,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":197700,"byte_end":197704,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":199331,"byte_end":199340,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":199792,"byte_end":199801,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":6421},{"krate":0,"index":6422},{"krate":0,"index":6423},{"krate":0,"index":6424}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":200230,"byte_end":200239,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":200499,"byte_end":200508,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":202791,"byte_end":202795,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1194},{"krate":0,"index":6470},{"krate":0,"index":6471},{"krate":0,"index":6472},{"krate":0,"index":6473}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":203005,"byte_end":203009,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":204003,"byte_end":204007,"line_start":71,"line_end":71,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":204954,"byte_end":204963,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1219}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":205411,"byte_end":205420,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":6546},{"krate":0,"index":6547},{"krate":0,"index":6548},{"krate":0,"index":6549}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":205842,"byte_end":205851,"line_start":57,"line_end":57,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":207405,"byte_end":207414,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":208726,"byte_end":208735,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":209062,"byte_end":209071,"line_start":42,"line_end":42,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1256},{"krate":0,"index":6609},{"krate":0,"index":6610},{"krate":0,"index":6611},{"krate":0,"index":6612},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":211264,"byte_end":211273,"line_start":117,"line_end":117,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":212305,"byte_end":212314,"line_start":156,"line_end":156,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":213188,"byte_end":213192,"line_start":21,"line_end":21,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":213482,"byte_end":213486,"line_start":34,"line_end":34,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1291},{"krate":0,"index":6679},{"krate":0,"index":6680},{"krate":0,"index":6681},{"krate":0,"index":6682}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":213795,"byte_end":213799,"line_start":49,"line_end":49,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":214037,"byte_end":214041,"line_start":59,"line_end":59,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":215907,"byte_end":215910,"line_start":21,"line_end":21,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":217561,"byte_end":217564,"line_start":65,"line_end":65,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":217755,"byte_end":217758,"line_start":73,"line_end":73,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":220415,"byte_end":220419,"line_start":26,"line_end":26,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":220905,"byte_end":220909,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1365}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":221073,"byte_end":221077,"line_start":50,"line_end":50,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1372},{"krate":0,"index":6822},{"krate":0,"index":6823},{"krate":0,"index":6824},{"krate":0,"index":6825}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":221544,"byte_end":221548,"line_start":70,"line_end":70,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":222775,"byte_end":222779,"line_start":113,"line_end":113,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":122489,"byte_end":122490,"line_start":198,"line_end":198,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":256769,"byte_end":256776,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1522}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":257069,"byte_end":257076,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1527},{"krate":0,"index":6892},{"krate":0,"index":6893},{"krate":0,"index":6894},{"krate":0,"index":6895}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":257369,"byte_end":257376,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":258554,"byte_end":258561,"line_start":84,"line_end":84,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":259456,"byte_end":259466,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1553},{"krate":0,"index":7169},{"krate":0,"index":7170},{"krate":0,"index":7171},{"krate":0,"index":7172}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":259665,"byte_end":259675,"line_start":26,"line_end":26,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":259796,"byte_end":259806,"line_start":32,"line_end":32,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":260860,"byte_end":260866,"line_start":21,"line_end":21,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":261158,"byte_end":261164,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1584},{"krate":0,"index":7393},{"krate":0,"index":7394},{"krate":0,"index":7395},{"krate":0,"index":7396}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":261454,"byte_end":261460,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1591}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":262773,"byte_end":262779,"line_start":88,"line_end":88,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1596}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":263695,"byte_end":263702,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":263756,"byte_end":263763,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":263929,"byte_end":263936,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":1618}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":264078,"byte_end":264085,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1621},{"krate":0,"index":1622}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":264816,"byte_end":264826,"line_start":19,"line_end":19,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1639}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":265122,"byte_end":265132,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1644}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":265446,"byte_end":265456,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1649},{"krate":0,"index":1650}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":266783,"byte_end":266792,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1668}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":267188,"byte_end":267197,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1673},{"krate":0,"index":7540},{"krate":0,"index":7541},{"krate":0,"index":7542},{"krate":0,"index":7543}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":267501,"byte_end":267510,"line_start":55,"line_end":55,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1678}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":267779,"byte_end":267788,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1685}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":269894,"byte_end":269906,"line_start":22,"line_end":22,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1704}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":270206,"byte_end":270218,"line_start":35,"line_end":35,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1709},{"krate":0,"index":7610},{"krate":0,"index":7611},{"krate":0,"index":7612},{"krate":0,"index":7613}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":270423,"byte_end":270435,"line_start":43,"line_end":43,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1715}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":270725,"byte_end":270737,"line_start":53,"line_end":53,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1723}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":272845,"byte_end":272855,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1737},{"krate":0,"index":7660},{"krate":0,"index":7661},{"krate":0,"index":7662},{"krate":0,"index":7663}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":273120,"byte_end":273130,"line_start":35,"line_end":35,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1740}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":273376,"byte_end":273386,"line_start":46,"line_end":46,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1743},{"krate":0,"index":1744}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":274931,"byte_end":274941,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":275133,"byte_end":275143,"line_start":27,"line_end":27,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1766}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":275331,"byte_end":275341,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1770},{"krate":0,"index":1771}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":276298,"byte_end":276307,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":276573,"byte_end":276582,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1786},{"krate":0,"index":1787}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":277773,"byte_end":277780,"line_start":20,"line_end":20,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1806}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":278139,"byte_end":278146,"line_start":35,"line_end":35,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1812}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":278504,"byte_end":278511,"line_start":50,"line_end":50,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":278777,"byte_end":278784,"line_start":60,"line_end":60,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1824},{"krate":0,"index":1825}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":282552,"byte_end":282561,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1845}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":282862,"byte_end":282871,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1851},{"krate":0,"index":1852}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":284560,"byte_end":284572,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1872}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":285028,"byte_end":285040,"line_start":40,"line_end":40,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1877},{"krate":0,"index":7981},{"krate":0,"index":7982},{"krate":0,"index":7983},{"krate":0,"index":7984}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":285489,"byte_end":285501,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1884}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":287004,"byte_end":287016,"line_start":104,"line_end":104,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":288164,"byte_end":288176,"line_start":27,"line_end":27,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1907}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":288628,"byte_end":288640,"line_start":43,"line_end":43,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1912},{"krate":0,"index":8057},{"krate":0,"index":8058},{"krate":0,"index":8059},{"krate":0,"index":8060}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":289075,"byte_end":289087,"line_start":62,"line_end":62,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1919}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":290663,"byte_end":290675,"line_start":112,"line_end":112,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1924}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":227975,"byte_end":227976,"line_start":135,"line_end":135,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":291449,"byte_end":291453,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":292059,"byte_end":292063,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":2012}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":293197,"byte_end":293203,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":293230,"byte_end":293236,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":293543,"byte_end":293549,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2035}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":294161,"byte_end":294166,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":294198,"byte_end":294203,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2054}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":294288,"byte_end":294293,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":295283,"byte_end":295287,"line_start":31,"line_end":31,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2077}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":295416,"byte_end":295420,"line_start":37,"line_end":37,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":296025,"byte_end":296029,"line_start":60,"line_end":60,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":296639,"byte_end":296646,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":296678,"byte_end":296685,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2104}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":296770,"byte_end":296777,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2107},{"krate":0,"index":2108},{"krate":0,"index":2109}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297302,"byte_end":297308,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297339,"byte_end":297345,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2127}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":298087,"byte_end":298093,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2134},{"krate":0,"index":2135}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Inherent","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":299448,"byte_end":299454,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2160}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":300877,"byte_end":300883,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2164}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":301101,"byte_end":301107,"line_start":84,"line_end":84,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2168},{"krate":0,"index":2169}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":304380,"byte_end":304386,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2196}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":304689,"byte_end":304695,"line_start":81,"line_end":81,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2202}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":304921,"byte_end":304927,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2208},{"krate":0,"index":2209}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":306770,"byte_end":306772,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":306827,"byte_end":306829,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":313081,"byte_end":313082,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2262},{"krate":0,"index":2263}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":313316,"byte_end":313317,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2271}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":313586,"byte_end":313587,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2279}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":314602,"byte_end":314606,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2287}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":314700,"byte_end":314704,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2291},{"krate":0,"index":2292}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":314963,"byte_end":314970,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2297},{"krate":0,"index":2298}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":315193,"byte_end":315200,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2303}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":315391,"byte_end":315398,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2308}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":315703,"byte_end":315716,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2314},{"krate":0,"index":2315}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":316133,"byte_end":316142,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2320},{"krate":0,"index":2321}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":316424,"byte_end":316433,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2326}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":316693,"byte_end":316702,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2331}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":317022,"byte_end":317029,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2338},{"krate":0,"index":2339}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":317248,"byte_end":317255,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2345}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":317433,"byte_end":317440,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2351}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":317741,"byte_end":317749,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2359},{"krate":0,"index":2360}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":317972,"byte_end":317980,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2366}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":318162,"byte_end":318170,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2372}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":318480,"byte_end":318491,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2381},{"krate":0,"index":2382}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":318728,"byte_end":318739,"line_start":254,"line_end":254,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2388}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":318954,"byte_end":318965,"line_start":262,"line_end":262,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2394}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":319310,"byte_end":319322,"line_start":277,"line_end":277,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2402},{"krate":0,"index":2403}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":319560,"byte_end":319572,"line_start":286,"line_end":286,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2409}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":319788,"byte_end":319800,"line_start":294,"line_end":294,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2415}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":320397,"byte_end":320411,"line_start":314,"line_end":314,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2428},{"krate":0,"index":2429}],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":320632,"byte_end":320646,"line_start":323,"line_end":323,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2435}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":320845,"byte_end":320859,"line_start":331,"line_end":331,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2441}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":321163,"byte_end":321169,"line_start":345,"line_end":345,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2451}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Direct","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":321264,"byte_end":321270,"line_start":350,"line_end":350,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2455},{"krate":0,"index":2456}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":11826,"byte_end":11832,"line_start":310,"line_end":310,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":12}},{"kind":"Mod","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":11908,"byte_end":11914,"line_start":313,"line_end":313,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":675}},{"kind":"Mod","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":12148,"byte_end":12152,"line_start":322,"line_end":322,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2219}},{"kind":"Mod","span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":12163,"byte_end":12168,"line_start":324,"line_end":324,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2247}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":35875,"byte_end":35882,"line_start":17,"line_end":17,"column_start":18,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":36009,"byte_end":36016,"line_start":23,"line_end":23,"column_start":27,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2457},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":36250,"byte_end":36257,"line_start":35,"line_end":35,"column_start":22,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2457},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":37036,"byte_end":37043,"line_start":59,"line_end":59,"column_start":27,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2457},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":37277,"byte_end":37284,"line_start":71,"line_end":71,"column_start":22,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2457},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40254,"byte_end":40258,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40360,"byte_end":40364,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":42088,"byte_end":42092,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2515},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":42201,"byte_end":42205,"line_start":75,"line_end":75,"column_start":30,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2515},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":43084,"byte_end":43087,"line_start":21,"line_end":21,"column_start":14,"column_end":17},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":43262,"byte_end":43265,"line_start":28,"line_end":28,"column_start":33,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2560},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":43529,"byte_end":43532,"line_start":40,"line_end":40,"column_start":28,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2560},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19175,"byte_end":19176,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":121},"to":{"krate":0,"index":122}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19307,"byte_end":19313,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":8329},"to":{"krate":0,"index":122}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":66129,"byte_end":66139,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":66304,"byte_end":66314,"line_start":19,"line_end":19,"column_start":52,"column_end":62},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3183},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":66420,"byte_end":66430,"line_start":23,"line_end":23,"column_start":33,"column_end":43},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3183},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":67083,"byte_end":67093,"line_start":17,"line_end":17,"column_start":18,"column_end":28},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":67223,"byte_end":67233,"line_start":23,"line_end":23,"column_start":27,"column_end":37},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3228},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":67486,"byte_end":67496,"line_start":35,"line_end":35,"column_start":22,"column_end":32},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3228},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":68527,"byte_end":68537,"line_start":64,"line_end":64,"column_start":27,"column_end":37},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3228},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":68790,"byte_end":68800,"line_start":76,"line_end":76,"column_start":22,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3228},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":72230,"byte_end":72243,"line_start":14,"line_end":14,"column_start":18,"column_end":31},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":72376,"byte_end":72389,"line_start":20,"line_end":20,"column_start":27,"column_end":40},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3286},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":72645,"byte_end":72658,"line_start":32,"line_end":32,"column_start":22,"column_end":35},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3286},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":48851,"byte_end":48854,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":260},"to":{"krate":0,"index":261}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":48937,"byte_end":48946,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":4,"index":32},"to":{"krate":0,"index":261}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74027,"byte_end":74031,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4272},"to":{"krate":1,"index":1968}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74604,"byte_end":74608,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":4272},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":74740,"byte_end":74744,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4272},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":75321,"byte_end":75328,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4278},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":75879,"byte_end":75886,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":4278},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":76031,"byte_end":76038,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":4278},"to":{"krate":1,"index":1968}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":76065,"byte_end":76072,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":4278},"to":{"krate":1,"index":1625}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":77393,"byte_end":77402,"line_start":44,"line_end":44,"column_start":19,"column_end":28},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":4284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":78417,"byte_end":78426,"line_start":72,"line_end":72,"column_start":35,"column_end":44},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4284},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":78642,"byte_end":78651,"line_start":81,"line_end":81,"column_start":30,"column_end":39},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":4284},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":80072,"byte_end":80084,"line_start":29,"line_end":29,"column_start":22,"column_end":34},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":81126,"byte_end":81138,"line_start":57,"line_end":57,"column_start":38,"column_end":50},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4343},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":81366,"byte_end":81378,"line_start":66,"line_end":66,"column_start":33,"column_end":45},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4343},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":82902,"byte_end":82914,"line_start":30,"line_end":30,"column_start":28,"column_end":40},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":4402},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":83247,"byte_end":83259,"line_start":44,"line_end":44,"column_start":38,"column_end":50},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4402},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":83442,"byte_end":83454,"line_start":53,"line_end":53,"column_start":29,"column_end":41},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4402},"to":{"krate":1,"index":1845}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":83864,"byte_end":83870,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":436},"to":{"krate":1,"index":1968}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":84540,"byte_end":84546,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":436},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":84688,"byte_end":84694,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":436},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85171,"byte_end":85176,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":4450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85355,"byte_end":85360,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":4450},"to":{"krate":1,"index":1968}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85392,"byte_end":85397,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":4450},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":85494,"byte_end":85499,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":4450},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":92231,"byte_end":92237,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":4848},"to":{"krate":1,"index":1968}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":94479,"byte_end":94485,"line_start":81,"line_end":81,"column_start":23,"column_end":29},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4848},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":95188,"byte_end":95194,"line_start":103,"line_end":103,"column_start":28,"column_end":34},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":4848},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":102760,"byte_end":102769,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":5222},"to":{"krate":1,"index":1968}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":104475,"byte_end":104484,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":5222},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":105975,"byte_end":105981,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":5230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":106366,"byte_end":106372,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":5230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":106753,"byte_end":106759,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":107000,"byte_end":107006,"line_start":54,"line_end":54,"column_start":23,"column_end":29},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5230},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":107353,"byte_end":107359,"line_start":69,"line_end":69,"column_start":28,"column_end":34},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":5230},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":107635,"byte_end":107641,"line_start":82,"line_end":82,"column_start":23,"column_end":29},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":5230},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":108001,"byte_end":108007,"line_start":97,"line_end":97,"column_start":28,"column_end":34},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":5230},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":164480,"byte_end":164485,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":164754,"byte_end":164759,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5288},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":164964,"byte_end":164969,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5288},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":166518,"byte_end":166525,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":166836,"byte_end":166843,"line_start":31,"line_end":31,"column_start":29,"column_end":36},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":5345},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":167019,"byte_end":167026,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":5345},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":167918,"byte_end":167924,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":5401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":168199,"byte_end":168205,"line_start":30,"line_end":30,"column_start":21,"column_end":27},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":5401},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":168980,"byte_end":168986,"line_start":59,"line_end":59,"column_start":26,"column_end":32},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":5401},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":169655,"byte_end":169664,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":5446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":169897,"byte_end":169906,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":5446},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":170024,"byte_end":170033,"line_start":35,"line_end":35,"column_start":29,"column_end":38},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":5446},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":171417,"byte_end":171423,"line_start":25,"line_end":25,"column_start":33,"column_end":39},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":5495},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":171896,"byte_end":171902,"line_start":41,"line_end":41,"column_start":18,"column_end":24},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":5495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":172296,"byte_end":172302,"line_start":58,"line_end":58,"column_start":34,"column_end":40},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":5495},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":172651,"byte_end":172657,"line_start":69,"line_end":69,"column_start":29,"column_end":35},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":5495},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":174806,"byte_end":174815,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":5568},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":175112,"byte_end":175121,"line_start":35,"line_end":35,"column_start":18,"column_end":27},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":5568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":175422,"byte_end":175431,"line_start":47,"line_end":47,"column_start":37,"column_end":46},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":5568},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":175708,"byte_end":175717,"line_start":57,"line_end":57,"column_start":32,"column_end":41},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":5568},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":177794,"byte_end":177801,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":5638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":177970,"byte_end":177977,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":5638},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":178169,"byte_end":178176,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":5638},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":179618,"byte_end":179622,"line_start":20,"line_end":20,"column_start":36,"column_end":40},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":5760},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":179978,"byte_end":179982,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":5760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":180315,"byte_end":180319,"line_start":50,"line_end":50,"column_start":37,"column_end":41},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":5760},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":180566,"byte_end":180570,"line_start":60,"line_end":60,"column_start":32,"column_end":36},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":5760},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":182103,"byte_end":182110,"line_start":19,"line_end":19,"column_start":33,"column_end":40},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":5839},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":182403,"byte_end":182410,"line_start":32,"line_end":32,"column_start":18,"column_end":25},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":5839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":182704,"byte_end":182711,"line_start":46,"line_end":46,"column_start":34,"column_end":41},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":5839},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":182962,"byte_end":182969,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":5839},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":184018,"byte_end":184022,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":5905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":184523,"byte_end":184527,"line_start":35,"line_end":35,"column_start":33,"column_end":37},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":5905},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":184625,"byte_end":184629,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":5905},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":185829,"byte_end":185841,"line_start":14,"line_end":14,"column_start":26,"column_end":38},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":5954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":188351,"byte_end":188363,"line_start":72,"line_end":72,"column_start":42,"column_end":54},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":5954},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":188483,"byte_end":188495,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":5954},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":189343,"byte_end":189346,"line_start":20,"line_end":20,"column_start":28,"column_end":31},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":6037},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":189561,"byte_end":189564,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":6037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":189738,"byte_end":189741,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":6037},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":189915,"byte_end":189918,"line_start":48,"line_end":48,"column_start":24,"column_end":27},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":6037},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":191065,"byte_end":191069,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":6186},"to":{"krate":1,"index":1968}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":191120,"byte_end":191124,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":6186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":191275,"byte_end":191279,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":6186},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":191418,"byte_end":191422,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":6186},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":192071,"byte_end":192085,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":6194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":192246,"byte_end":192260,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":6194},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":192404,"byte_end":192418,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":6194},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":193593,"byte_end":193601,"line_start":25,"line_end":25,"column_start":18,"column_end":26},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":6202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":194790,"byte_end":194798,"line_start":63,"line_end":63,"column_start":34,"column_end":42},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":6202},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":194940,"byte_end":194948,"line_start":69,"line_end":69,"column_start":28,"column_end":36},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":6202},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":196106,"byte_end":196110,"line_start":110,"line_end":110,"column_start":25,"column_end":29},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":6251},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":196381,"byte_end":196385,"line_start":122,"line_end":122,"column_start":34,"column_end":38},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":6251},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":196496,"byte_end":196500,"line_start":128,"line_end":128,"column_start":25,"column_end":29},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":6251},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":197346,"byte_end":197350,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":6300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":197578,"byte_end":197582,"line_start":29,"line_end":29,"column_start":39,"column_end":43},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":6300},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":197700,"byte_end":197704,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":6300},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":199331,"byte_end":199340,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":6349},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":199792,"byte_end":199801,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":6349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":200230,"byte_end":200239,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":6349},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":200499,"byte_end":200508,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":6349},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":202791,"byte_end":202795,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":6425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":203005,"byte_end":203009,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":6425},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":204003,"byte_end":204007,"line_start":71,"line_end":71,"column_start":26,"column_end":30},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":6425},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":204954,"byte_end":204963,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":6474},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":205411,"byte_end":205420,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":6474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":205842,"byte_end":205851,"line_start":57,"line_end":57,"column_start":29,"column_end":38},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":6474},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":207405,"byte_end":207414,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":6474},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":208726,"byte_end":208735,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":6550},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":209062,"byte_end":209071,"line_start":42,"line_end":42,"column_start":15,"column_end":24},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":6550},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":211264,"byte_end":211273,"line_start":117,"line_end":117,"column_start":26,"column_end":35},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":6550},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":212305,"byte_end":212314,"line_start":156,"line_end":156,"column_start":31,"column_end":40},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":6550},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":213188,"byte_end":213192,"line_start":21,"line_end":21,"column_start":33,"column_end":37},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":6613},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":213482,"byte_end":213486,"line_start":34,"line_end":34,"column_start":18,"column_end":22},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":6613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":213795,"byte_end":213799,"line_start":49,"line_end":49,"column_start":34,"column_end":38},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":6613},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":214037,"byte_end":214041,"line_start":59,"line_end":59,"column_start":29,"column_end":33},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":6613},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":215907,"byte_end":215910,"line_start":21,"line_end":21,"column_start":32,"column_end":35},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":6683},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":217561,"byte_end":217564,"line_start":65,"line_end":65,"column_start":32,"column_end":35},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":6683},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":217755,"byte_end":217758,"line_start":73,"line_end":73,"column_start":27,"column_end":30},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":6683},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":220415,"byte_end":220419,"line_start":26,"line_end":26,"column_start":36,"column_end":40},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":6746},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":220905,"byte_end":220909,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":6746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":221073,"byte_end":221077,"line_start":50,"line_end":50,"column_start":24,"column_end":28},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":6746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":221544,"byte_end":221548,"line_start":70,"line_end":70,"column_start":35,"column_end":39},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":6746},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":222775,"byte_end":222779,"line_start":113,"line_end":113,"column_start":40,"column_end":44},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":6746},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":122489,"byte_end":122490,"line_start":198,"line_end":198,"column_start":31,"column_end":32},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":1392},"to":{"krate":0,"index":1393}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":122633,"byte_end":122639,"line_start":202,"line_end":202,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":4,"index":68},"to":{"krate":0,"index":1393}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":256769,"byte_end":256776,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":6826},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":257069,"byte_end":257076,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":6826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":257369,"byte_end":257376,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":6826},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":258554,"byte_end":258561,"line_start":84,"line_end":84,"column_start":34,"column_end":41},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":6826},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":259456,"byte_end":259466,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":7127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":259665,"byte_end":259675,"line_start":26,"line_end":26,"column_start":51,"column_end":61},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":7127},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":259796,"byte_end":259806,"line_start":32,"line_end":32,"column_start":32,"column_end":42},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":7127},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":260860,"byte_end":260866,"line_start":21,"line_end":21,"column_start":33,"column_end":39},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":7327},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":261158,"byte_end":261164,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":7327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":261454,"byte_end":261460,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":7327},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":262773,"byte_end":262779,"line_start":88,"line_end":88,"column_start":34,"column_end":40},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":7327},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":263695,"byte_end":263702,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":7397},"to":{"krate":1,"index":1968}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":263756,"byte_end":263763,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":7397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":263929,"byte_end":263936,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":7397},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":264078,"byte_end":264085,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":7397},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":264816,"byte_end":264826,"line_start":19,"line_end":19,"column_start":33,"column_end":43},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":7405},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":265122,"byte_end":265132,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":7405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":265446,"byte_end":265456,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":7405},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":266783,"byte_end":266792,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":7471},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":267188,"byte_end":267197,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":7471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":267501,"byte_end":267510,"line_start":55,"line_end":55,"column_start":34,"column_end":43},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":7471},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":267779,"byte_end":267788,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":7471},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":269894,"byte_end":269906,"line_start":22,"line_end":22,"column_start":33,"column_end":45},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":7544},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":270206,"byte_end":270218,"line_start":35,"line_end":35,"column_start":18,"column_end":30},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":7544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":270423,"byte_end":270435,"line_start":43,"line_end":43,"column_start":37,"column_end":49},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":7544},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":270725,"byte_end":270737,"line_start":53,"line_end":53,"column_start":32,"column_end":44},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":7544},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":272845,"byte_end":272855,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":7614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":273120,"byte_end":273130,"line_start":35,"line_end":35,"column_start":26,"column_end":36},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":7614},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":273376,"byte_end":273386,"line_start":46,"line_end":46,"column_start":21,"column_end":31},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":7614},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":274931,"byte_end":274941,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":7664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":275133,"byte_end":275143,"line_start":27,"line_end":27,"column_start":29,"column_end":39},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":7664},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":275331,"byte_end":275341,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":7664},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":276298,"byte_end":276307,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":7720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":276573,"byte_end":276582,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":7720},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":277773,"byte_end":277780,"line_start":20,"line_end":20,"column_start":36,"column_end":43},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":7765},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":278139,"byte_end":278146,"line_start":35,"line_end":35,"column_start":21,"column_end":28},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":7765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":278504,"byte_end":278511,"line_start":50,"line_end":50,"column_start":37,"column_end":44},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":7765},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":278777,"byte_end":278784,"line_start":60,"line_end":60,"column_start":32,"column_end":39},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":7765},"to":{"krate":1,"index":8329}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":282552,"byte_end":282561,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":7844},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":282862,"byte_end":282871,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":7844},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":284560,"byte_end":284572,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":7909},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":285028,"byte_end":285040,"line_start":40,"line_end":40,"column_start":18,"column_end":30},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":7909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":285489,"byte_end":285501,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":7909},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":287004,"byte_end":287016,"line_start":104,"line_end":104,"column_start":34,"column_end":46},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":7909},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":288164,"byte_end":288176,"line_start":27,"line_end":27,"column_start":33,"column_end":45},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":7985},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":288628,"byte_end":288640,"line_start":43,"line_end":43,"column_start":18,"column_end":30},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":7985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":289075,"byte_end":289087,"line_start":62,"line_end":62,"column_start":29,"column_end":41},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":7985},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":290663,"byte_end":290675,"line_start":112,"line_end":112,"column_start":34,"column_end":46},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":7985},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":227975,"byte_end":227976,"line_start":135,"line_end":135,"column_start":46,"column_end":47},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":1929},"to":{"krate":0,"index":1930}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":228057,"byte_end":228066,"line_start":138,"line_end":138,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":4,"index":97},"to":{"krate":0,"index":1930}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":291449,"byte_end":291453,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":8061},"to":{"krate":1,"index":1968}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":292059,"byte_end":292063,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":8061},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":293197,"byte_end":293203,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":8067},"to":{"krate":1,"index":1968}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":293230,"byte_end":293236,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":8067},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":293543,"byte_end":293549,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":8067},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":294161,"byte_end":294166,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":8073},"to":{"krate":1,"index":1968}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":294198,"byte_end":294203,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":8073},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":294288,"byte_end":294293,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":8073},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":295283,"byte_end":295287,"line_start":31,"line_end":31,"column_start":11,"column_end":15},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":8079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":295416,"byte_end":295420,"line_start":37,"line_end":37,"column_start":30,"column_end":34},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":8079},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":296025,"byte_end":296029,"line_start":60,"line_end":60,"column_start":35,"column_end":39},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":8079},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":296639,"byte_end":296646,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":8121},"to":{"krate":1,"index":1968}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":296678,"byte_end":296685,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":8121},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":296770,"byte_end":296777,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":8121},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297302,"byte_end":297308,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":2120},"to":{"krate":1,"index":1968}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":297339,"byte_end":297345,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":2120},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":298087,"byte_end":298093,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":2120},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":299448,"byte_end":299454,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":8127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":300877,"byte_end":300883,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":8127},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":301101,"byte_end":301107,"line_start":84,"line_end":84,"column_start":27,"column_end":33},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":8127},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":304380,"byte_end":304386,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":8187},"to":{"krate":1,"index":6203}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":304689,"byte_end":304695,"line_start":81,"line_end":81,"column_start":39,"column_end":45},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":8187},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":304921,"byte_end":304927,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":8187},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":306770,"byte_end":306772,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":2225},"to":{"krate":0,"index":2228}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":306827,"byte_end":306829,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":2227},"to":{"krate":0,"index":2229}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":306908,"byte_end":306913,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":17,"index":10},"to":{"krate":0,"index":2228}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":309677,"byte_end":309687,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":17,"index":13},"to":{"krate":0,"index":2229}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":313081,"byte_end":313082,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":2259},"to":{"krate":0,"index":2254}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":313220,"byte_end":313227,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":2254},"to":{"krate":0,"index":2264}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":313316,"byte_end":313317,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":2268},"to":{"krate":0,"index":2264}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":313502,"byte_end":313508,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":2264},"to":{"krate":0,"index":2272}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":313586,"byte_end":313587,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":2276},"to":{"krate":0,"index":2272}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":314602,"byte_end":314606,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":2281},"to":{"krate":1,"index":1915}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":314700,"byte_end":314704,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":2281},"to":{"krate":0,"index":2254}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":314963,"byte_end":314970,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":8271},"to":{"krate":0,"index":2254}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":315193,"byte_end":315200,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":8271},"to":{"krate":0,"index":2264}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":315391,"byte_end":315398,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":8271},"to":{"krate":0,"index":2272}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":315703,"byte_end":315716,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":8292},"to":{"krate":0,"index":2254}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":316133,"byte_end":316142,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":8308},"to":{"krate":0,"index":2254}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":316424,"byte_end":316433,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":8308},"to":{"krate":0,"index":2264}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":316693,"byte_end":316702,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":8308},"to":{"krate":0,"index":2272}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":317022,"byte_end":317029,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":8323},"to":{"krate":0,"index":2254}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":317248,"byte_end":317255,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":8323},"to":{"krate":0,"index":2264}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":317433,"byte_end":317440,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":8323},"to":{"krate":0,"index":2272}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":317741,"byte_end":317749,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":8338},"to":{"krate":0,"index":2254}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":317972,"byte_end":317980,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":8338},"to":{"krate":0,"index":2264}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":318162,"byte_end":318170,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":8338},"to":{"krate":0,"index":2272}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":318480,"byte_end":318491,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":8353},"to":{"krate":0,"index":2254}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":318728,"byte_end":318739,"line_start":254,"line_end":254,"column_start":48,"column_end":59},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":8353},"to":{"krate":0,"index":2264}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":318954,"byte_end":318965,"line_start":262,"line_end":262,"column_start":45,"column_end":56},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":8353},"to":{"krate":0,"index":2272}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":319310,"byte_end":319322,"line_start":277,"line_end":277,"column_start":49,"column_end":61},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":8365},"to":{"krate":0,"index":2254}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":319560,"byte_end":319572,"line_start":286,"line_end":286,"column_start":48,"column_end":60},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":8365},"to":{"krate":0,"index":2264}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":319788,"byte_end":319800,"line_start":294,"line_end":294,"column_start":45,"column_end":57},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":8365},"to":{"krate":0,"index":2272}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":320397,"byte_end":320411,"line_start":314,"line_end":314,"column_start":41,"column_end":55},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":8377},"to":{"krate":0,"index":2254}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":320632,"byte_end":320646,"line_start":323,"line_end":323,"column_start":40,"column_end":54},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":8377},"to":{"krate":0,"index":2264}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":320845,"byte_end":320859,"line_start":331,"line_end":331,"column_start":37,"column_end":51},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":8377},"to":{"krate":0,"index":2272}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":321163,"byte_end":321169,"line_start":345,"line_end":345,"column_start":21,"column_end":27},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":2445},"to":{"krate":1,"index":1915}},{"span":{"file_name":"/home/gorta/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":321264,"byte_end":321270,"line_start":350,"line_end":350,"column_start":27,"column_end":33},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":2445},"to":{"krate":0,"index":2254}}]}